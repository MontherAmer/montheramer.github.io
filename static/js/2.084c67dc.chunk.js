/*! For license information please see 2.084c67dc.chunk.js.LICENSE.txt */
(this["webpackJsonpweather.app"]=this["webpackJsonpweather.app"]||[]).push([[2],[function(a,e,n){"use strict";a.exports=n(36)},function(a,e,n){"use strict";a.exports=n(37)},function(a,e,n){"use strict";function r(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function o(a,e){var n=Object.keys(a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n.push.apply(n,r)}return n}function t(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}n.d(e,"a",(function(){return t}))},,,,function(a,e,n){"use strict";n.d(e,"a",(function(){return d})),n.d(e,"b",(function(){return p})),n.d(e,"c",(function(){return v}));var r=n(1),o=n.n(r),t=(n(41),o.a.createContext(null));var i=function(a){a()},l={notify:function(){}};function u(){var a=i,e=null,n=null;return{clear:function(){e=null,n=null},notify:function(){a((function(){for(var a=e;a;)a.callback(),a=a.next}))},get:function(){for(var a=[],n=e;n;)a.push(n),n=n.next;return a},subscribe:function(a){var r=!0,o=n={callback:a,next:null,prev:n};return o.prev?o.prev.next=o:e=o,function(){r&&null!==e&&(r=!1,o.next?o.next.prev=o.prev:n=o.prev,o.prev?o.prev.next=o.next:e=o.next)}}}}var s=function(){function a(a,e){this.store=a,this.parentSub=e,this.unsubscribe=null,this.listeners=l,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var e=a.prototype;return e.addNestedSub=function(a){return this.trySubscribe(),this.listeners.subscribe(a)},e.notifyNestedSubs=function(){this.listeners.notify()},e.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},e.isSubscribed=function(){return Boolean(this.unsubscribe)},e.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=u())},e.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=l)},a}();var d=function(a){var e=a.store,n=a.context,i=a.children,l=Object(r.useMemo)((function(){var a=new s(e);return a.onStateChange=a.notifyNestedSubs,{store:e,subscription:a}}),[e]),u=Object(r.useMemo)((function(){return e.getState()}),[e]);Object(r.useEffect)((function(){var a=l.subscription;return a.trySubscribe(),u!==e.getState()&&a.notifyNestedSubs(),function(){a.tryUnsubscribe(),a.onStateChange=null}}),[l,u]);var d=n||t;return o.a.createElement(d.Provider,{value:l},i)};n(19),n(18);var h="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement?r.useLayoutEffect:r.useEffect;n(12);function c(){return Object(r.useContext)(t)}function g(a){void 0===a&&(a=t);var e=a===t?c:function(){return Object(r.useContext)(a)};return function(){return e().store}}var m=g();function f(a){void 0===a&&(a=t);var e=a===t?m:g(a);return function(){return e().dispatch}}var p=f(),y=function(a,e){return a===e};function k(a){void 0===a&&(a=t);var e=a===t?c:function(){return Object(r.useContext)(a)};return function(a,n){void 0===n&&(n=y);var o=e(),t=function(a,e,n,o){var t,i=Object(r.useReducer)((function(a){return a+1}),0)[1],l=Object(r.useMemo)((function(){return new s(n,o)}),[n,o]),u=Object(r.useRef)(),d=Object(r.useRef)(),c=Object(r.useRef)(),g=Object(r.useRef)(),m=n.getState();try{t=a!==d.current||m!==c.current||u.current?a(m):g.current}catch(f){throw u.current&&(f.message+="\nThe error may be correlated with this previous error:\n"+u.current.stack+"\n\n"),f}return h((function(){d.current=a,c.current=m,g.current=t,u.current=void 0})),h((function(){function a(){try{var a=d.current(n.getState());if(e(a,g.current))return;g.current=a}catch(f){u.current=f}i()}return l.onStateChange=a,l.trySubscribe(),a(),function(){return l.tryUnsubscribe()}}),[n,l]),t}(a,n,o.store,o.subscription);return Object(r.useDebugValue)(t),t}}var b,v=k(),S=n(15);b=S.unstable_batchedUpdates,i=b},function(a,e,n){"use strict";var r=n(24),o=Object.prototype.toString;function t(a){return"[object Array]"===o.call(a)}function i(a){return"undefined"===typeof a}function l(a){return null!==a&&"object"===typeof a}function u(a){if("[object Object]"!==o.call(a))return!1;var e=Object.getPrototypeOf(a);return null===e||e===Object.prototype}function s(a){return"[object Function]"===o.call(a)}function d(a,e){if(null!==a&&"undefined"!==typeof a)if("object"!==typeof a&&(a=[a]),t(a))for(var n=0,r=a.length;n<r;n++)e.call(null,a[n],n,a);else for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&e.call(null,a[o],o,a)}a.exports={isArray:t,isArrayBuffer:function(a){return"[object ArrayBuffer]"===o.call(a)},isBuffer:function(a){return null!==a&&!i(a)&&null!==a.constructor&&!i(a.constructor)&&"function"===typeof a.constructor.isBuffer&&a.constructor.isBuffer(a)},isFormData:function(a){return"undefined"!==typeof FormData&&a instanceof FormData},isArrayBufferView:function(a){return"undefined"!==typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(a):a&&a.buffer&&a.buffer instanceof ArrayBuffer},isString:function(a){return"string"===typeof a},isNumber:function(a){return"number"===typeof a},isObject:l,isPlainObject:u,isUndefined:i,isDate:function(a){return"[object Date]"===o.call(a)},isFile:function(a){return"[object File]"===o.call(a)},isBlob:function(a){return"[object Blob]"===o.call(a)},isFunction:s,isStream:function(a){return l(a)&&s(a.pipe)},isURLSearchParams:function(a){return"undefined"!==typeof URLSearchParams&&a instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"===typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!==typeof window&&"undefined"!==typeof document)},forEach:d,merge:function a(){var e={};function n(n,r){u(e[r])&&u(n)?e[r]=a(e[r],n):u(n)?e[r]=a({},n):t(n)?e[r]=n.slice():e[r]=n}for(var r=0,o=arguments.length;r<o;r++)d(arguments[r],n);return e},extend:function(a,e,n){return d(e,(function(e,o){a[o]=n&&"function"===typeof e?r(e,n):e})),a},trim:function(a){return a.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(a){return 65279===a.charCodeAt(0)&&(a=a.slice(1)),a}}},function(a,e,n){a.exports=n(50)},function(a,e,n){"use strict";function r(a,e){(null==e||e>a.length)&&(e=a.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=a[n];return r}function o(a,e){return function(a){if(Array.isArray(a))return a}(a)||function(a,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(a)){var n=[],r=!0,o=!1,t=void 0;try{for(var i,l=a[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!e||n.length!==e);r=!0);}catch(u){o=!0,t=u}finally{try{r||null==l.return||l.return()}finally{if(o)throw t}}return n}}(a,e)||function(a,e){if(a){if("string"===typeof a)return r(a,e);var n=Object.prototype.toString.call(a).slice(8,-1);return"Object"===n&&a.constructor&&(n=a.constructor.name),"Map"===n||"Set"===n?Array.from(a):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(a,e):void 0}}(a,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(e,"a",(function(){return o}))},function(a,e,n){"use strict";function r(a,e,n,r,o,t,i){try{var l=a[t](i),u=l.value}catch(s){return void n(s)}l.done?e(u):Promise.resolve(u).then(r,o)}function o(a){return function(){var e=this,n=arguments;return new Promise((function(o,t){var i=a.apply(e,n);function l(a){r(i,o,t,l,u,"next",a)}function u(a){r(i,o,t,l,u,"throw",a)}l(void 0)}))}}n.d(e,"a",(function(){return o}))},,function(a,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return h})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return l}));var r=n(20),o=function(){return Math.random().toString(36).substring(7).split("").join(".")},t={INIT:"@@redux/INIT"+o(),REPLACE:"@@redux/REPLACE"+o(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+o()}};function i(a){if("object"!==typeof a||null===a)return!1;for(var e=a;null!==Object.getPrototypeOf(e);)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(a)===e}function l(a,e,n){var o;if("function"===typeof e&&"function"===typeof n||"function"===typeof n&&"function"===typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"===typeof e&&"undefined"===typeof n&&(n=e,e=void 0),"undefined"!==typeof n){if("function"!==typeof n)throw new Error("Expected the enhancer to be a function.");return n(l)(a,e)}if("function"!==typeof a)throw new Error("Expected the reducer to be a function.");var u=a,s=e,d=[],h=d,c=!1;function g(){h===d&&(h=d.slice())}function m(){if(c)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return s}function f(a){if("function"!==typeof a)throw new Error("Expected the listener to be a function.");if(c)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var e=!0;return g(),h.push(a),function(){if(e){if(c)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");e=!1,g();var n=h.indexOf(a);h.splice(n,1),d=null}}}function p(a){if(!i(a))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if("undefined"===typeof a.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(c)throw new Error("Reducers may not dispatch actions.");try{c=!0,s=u(s,a)}finally{c=!1}for(var e=d=h,n=0;n<e.length;n++){(0,e[n])()}return a}function y(a){if("function"!==typeof a)throw new Error("Expected the nextReducer to be a function.");u=a,p({type:t.REPLACE})}function k(){var a,e=f;return(a={subscribe:function(a){if("object"!==typeof a||null===a)throw new TypeError("Expected the observer to be an object.");function n(){a.next&&a.next(m())}return n(),{unsubscribe:e(n)}}})[r.a]=function(){return this},a}return p({type:t.INIT}),(o={dispatch:p,subscribe:f,getState:m,replaceReducer:y})[r.a]=k,o}function u(a,e){var n=e&&e.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+a+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function s(a){for(var e=Object.keys(a),n={},r=0;r<e.length;r++){var o=e[r];0,"function"===typeof a[o]&&(n[o]=a[o])}var i,l=Object.keys(n);try{!function(a){Object.keys(a).forEach((function(e){var n=a[e];if("undefined"===typeof n(void 0,{type:t.INIT}))throw new Error('Reducer "'+e+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if("undefined"===typeof n(void 0,{type:t.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+e+"\" returned undefined when probed with a random type. Don't try to handle "+t.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(n)}catch(s){i=s}return function(a,e){if(void 0===a&&(a={}),i)throw i;for(var r=!1,o={},t=0;t<l.length;t++){var s=l[t],d=n[s],h=a[s],c=d(h,e);if("undefined"===typeof c){var g=u(s,e);throw new Error(g)}o[s]=c,r=r||c!==h}return(r=r||l.length!==Object.keys(a).length)?o:a}}function d(a,e){return function(){return e(a.apply(this,arguments))}}function h(a,e){if("function"===typeof a)return d(a,e);if("object"!==typeof a||null===a)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===a?"null":typeof a)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var n={};for(var r in a){var o=a[r];"function"===typeof o&&(n[r]=d(o,e))}return n}function c(a,e,n){return e in a?Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[e]=n,a}function g(a,e){var n=Object.keys(a);return Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(a)),e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),n}function m(a){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?g(n,!0).forEach((function(e){c(a,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(n)):g(n).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(n,e))}))}return a}function f(){for(var a=arguments.length,e=new Array(a),n=0;n<a;n++)e[n]=arguments[n];return 0===e.length?function(a){return a}:1===e.length?e[0]:e.reduce((function(a,e){return function(){return a(e.apply(void 0,arguments))}}))}function p(){for(var a=arguments.length,e=new Array(a),n=0;n<a;n++)e[n]=arguments[n];return function(a){return function(){var n=a.apply(void 0,arguments),r=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},o={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},t=e.map((function(a){return a(o)}));return m({},n,{dispatch:r=f.apply(void 0,t)(n.dispatch)})}}}},,,function(a,e,n){"use strict";!function a(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(a)}catch(e){console.error(e)}}(),a.exports=n(38)},function(a,e,n){"use strict";var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,t=Object.prototype.propertyIsEnumerable;function i(a){if(null===a||void 0===a)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(a)}a.exports=function(){try{if(!Object.assign)return!1;var a=new String("abc");if(a[5]="de","5"===Object.getOwnPropertyNames(a)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(a){return e[a]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(a){r[a]=a})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(o){return!1}}()?Object.assign:function(a,e){for(var n,l,u=i(a),s=1;s<arguments.length;s++){for(var d in n=Object(arguments[s]))o.call(n,d)&&(u[d]=n[d]);if(r){l=r(n);for(var h=0;h<l.length;h++)t.call(n,l[h])&&(u[l[h]]=n[l[h]])}}return u}},function(a,e){var n,r,o=a.exports={};function t(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(a){if(n===setTimeout)return setTimeout(a,0);if((n===t||!n)&&setTimeout)return n=setTimeout,setTimeout(a,0);try{return n(a,0)}catch(e){try{return n.call(null,a,0)}catch(e){return n.call(this,a,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:t}catch(a){n=t}try{r="function"===typeof clearTimeout?clearTimeout:i}catch(a){r=i}}();var u,s=[],d=!1,h=-1;function c(){d&&u&&(d=!1,u.length?s=u.concat(s):h=-1,s.length&&g())}function g(){if(!d){var a=l(c);d=!0;for(var e=s.length;e;){for(u=s,s=[];++h<e;)u&&u[h].run();h=-1,e=s.length}u=null,d=!1,function(a){if(r===clearTimeout)return clearTimeout(a);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(a);try{r(a)}catch(e){try{return r.call(null,a)}catch(e){return r.call(this,a)}}}(a)}}function m(a,e){this.fun=a,this.array=e}function f(){}o.nextTick=function(a){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];s.push(new m(a,e)),1!==s.length||d||l(g)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=f,o.addListener=f,o.once=f,o.off=f,o.removeListener=f,o.removeAllListeners=f,o.emit=f,o.prependListener=f,o.prependOnceListener=f,o.listeners=function(a){return[]},o.binding=function(a){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(a){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(a,e,n){"use strict";a.exports=n(44)},function(a,e,n){"use strict";var r=n(18),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},t={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(a){return r.isMemo(a)?i:l[a.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var s=Object.defineProperty,d=Object.getOwnPropertyNames,h=Object.getOwnPropertySymbols,c=Object.getOwnPropertyDescriptor,g=Object.getPrototypeOf,m=Object.prototype;a.exports=function a(e,n,r){if("string"!==typeof n){if(m){var o=g(n);o&&o!==m&&a(e,o,r)}var i=d(n);h&&(i=i.concat(h(n)));for(var l=u(e),f=u(n),p=0;p<i.length;++p){var y=i[p];if(!t[y]&&(!r||!r[y])&&(!f||!f[y])&&(!l||!l[y])){var k=c(n,y);try{s(e,y,k)}catch(b){}}}}return e}},function(a,e,n){"use strict";(function(a,r){var o,t=n(32);o="undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof a?a:r;var i=Object(t.a)(o);e.a=i}).call(this,n(23),n(45)(a))},function(a,e,n){a.exports=n(51)},function(a,e,n){var r=n(68).list,o=n(69);e.listCities=function(a){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{if(!a||"string"!==typeof a)return Promise.reject("code value accept string only ");var n=o[a.toUpperCase()],r=n.map((function(a){return a}));return r.splice(e.skip||0,e.limit||6e3)}catch(t){return t}},e.listCountries=function(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"name",e=["flag","phone","name","code"],n=a.trim().split(" ");return n.every((function(a){return e.includes(a)}))?1===n.length?r.map((function(a){return a[n[0]]})):r.map((function(a){var e={};return n.map((function(n){return e[n]=a[n]})),e})):Promise.reject("options string only accept flag,phone,name and code")},e.searchCountries=function(a){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"name";try{var n=["flag","phone","name","code"],o=e.trim().split(" ");if(!o.every((function(a){return n.includes(a)})))return Promise.reject("options string only accept flag,phone,name and code");var t=new RegExp(a.toUpperCase()),i=r.filter((function(a){return t.test(a.name.toUpperCase())})).map((function(a){var e={},n=[];return o.map((function(r){return 1===o.length?n.push(a[r]):e[r]=a[r]})),n.length?n[0]:e}));return i}catch(l){return l}}},function(a,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(r){"object"===typeof window&&(n=window)}a.exports=n},function(a,e,n){"use strict";a.exports=function(a,e){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return a.apply(e,n)}}},function(a,e,n){"use strict";var r=n(7);function o(a){return encodeURIComponent(a).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}a.exports=function(a,e,n){if(!e)return a;var t;if(n)t=n(e);else if(r.isURLSearchParams(e))t=e.toString();else{var i=[];r.forEach(e,(function(a,e){null!==a&&"undefined"!==typeof a&&(r.isArray(a)?e+="[]":a=[a],r.forEach(a,(function(a){r.isDate(a)?a=a.toISOString():r.isObject(a)&&(a=JSON.stringify(a)),i.push(o(e)+"="+o(a))})))})),t=i.join("&")}if(t){var l=a.indexOf("#");-1!==l&&(a=a.slice(0,l)),a+=(-1===a.indexOf("?")?"?":"&")+t}return a}},function(a,e,n){"use strict";a.exports=function(a){return!(!a||!a.__CANCEL__)}},function(a,e,n){"use strict";(function(e){var r=n(7),o=n(56),t={"Content-Type":"application/x-www-form-urlencoded"};function i(a,e){!r.isUndefined(a)&&r.isUndefined(a["Content-Type"])&&(a["Content-Type"]=e)}var l={adapter:function(){var a;return("undefined"!==typeof XMLHttpRequest||"undefined"!==typeof e&&"[object process]"===Object.prototype.toString.call(e))&&(a=n(28)),a}(),transformRequest:[function(a,e){return o(e,"Accept"),o(e,"Content-Type"),r.isFormData(a)||r.isArrayBuffer(a)||r.isBuffer(a)||r.isStream(a)||r.isFile(a)||r.isBlob(a)?a:r.isArrayBufferView(a)?a.buffer:r.isURLSearchParams(a)?(i(e,"application/x-www-form-urlencoded;charset=utf-8"),a.toString()):r.isObject(a)?(i(e,"application/json;charset=utf-8"),JSON.stringify(a)):a}],transformResponse:[function(a){if("string"===typeof a)try{a=JSON.parse(a)}catch(e){}return a}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(a){return a>=200&&a<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(a){l.headers[a]={}})),r.forEach(["post","put","patch"],(function(a){l.headers[a]=r.merge(t)})),a.exports=l}).call(this,n(17))},function(a,e,n){"use strict";var r=n(7),o=n(57),t=n(59),i=n(25),l=n(60),u=n(63),s=n(64),d=n(29);a.exports=function(a){return new Promise((function(e,n){var h=a.data,c=a.headers;r.isFormData(h)&&delete c["Content-Type"];var g=new XMLHttpRequest;if(a.auth){var m=a.auth.username||"",f=a.auth.password?unescape(encodeURIComponent(a.auth.password)):"";c.Authorization="Basic "+btoa(m+":"+f)}var p=l(a.baseURL,a.url);if(g.open(a.method.toUpperCase(),i(p,a.params,a.paramsSerializer),!0),g.timeout=a.timeout,g.onreadystatechange=function(){if(g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in g?u(g.getAllResponseHeaders()):null,t={data:a.responseType&&"text"!==a.responseType?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:r,config:a,request:g};o(e,n,t),g=null}},g.onabort=function(){g&&(n(d("Request aborted",a,"ECONNABORTED",g)),g=null)},g.onerror=function(){n(d("Network Error",a,null,g)),g=null},g.ontimeout=function(){var e="timeout of "+a.timeout+"ms exceeded";a.timeoutErrorMessage&&(e=a.timeoutErrorMessage),n(d(e,a,"ECONNABORTED",g)),g=null},r.isStandardBrowserEnv()){var y=(a.withCredentials||s(p))&&a.xsrfCookieName?t.read(a.xsrfCookieName):void 0;y&&(c[a.xsrfHeaderName]=y)}if("setRequestHeader"in g&&r.forEach(c,(function(a,e){"undefined"===typeof h&&"content-type"===e.toLowerCase()?delete c[e]:g.setRequestHeader(e,a)})),r.isUndefined(a.withCredentials)||(g.withCredentials=!!a.withCredentials),a.responseType)try{g.responseType=a.responseType}catch(k){if("json"!==a.responseType)throw k}"function"===typeof a.onDownloadProgress&&g.addEventListener("progress",a.onDownloadProgress),"function"===typeof a.onUploadProgress&&g.upload&&g.upload.addEventListener("progress",a.onUploadProgress),a.cancelToken&&a.cancelToken.promise.then((function(a){g&&(g.abort(),n(a),g=null)})),h||(h=null),g.send(h)}))}},function(a,e,n){"use strict";var r=n(58);a.exports=function(a,e,n,o,t){var i=new Error(a);return r(i,e,n,o,t)}},function(a,e,n){"use strict";var r=n(7);a.exports=function(a,e){e=e||{};var n={},o=["url","method","data"],t=["headers","auth","proxy","params"],i=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],l=["validateStatus"];function u(a,e){return r.isPlainObject(a)&&r.isPlainObject(e)?r.merge(a,e):r.isPlainObject(e)?r.merge({},e):r.isArray(e)?e.slice():e}function s(o){r.isUndefined(e[o])?r.isUndefined(a[o])||(n[o]=u(void 0,a[o])):n[o]=u(a[o],e[o])}r.forEach(o,(function(a){r.isUndefined(e[a])||(n[a]=u(void 0,e[a]))})),r.forEach(t,s),r.forEach(i,(function(o){r.isUndefined(e[o])?r.isUndefined(a[o])||(n[o]=u(void 0,a[o])):n[o]=u(void 0,e[o])})),r.forEach(l,(function(r){r in e?n[r]=u(a[r],e[r]):r in a&&(n[r]=u(void 0,a[r]))}));var d=o.concat(t).concat(i).concat(l),h=Object.keys(a).concat(Object.keys(e)).filter((function(a){return-1===d.indexOf(a)}));return r.forEach(h,s),n}},function(a,e,n){"use strict";function r(a){this.message=a}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,a.exports=r},function(a,e,n){"use strict";function r(a){var e,n=a.Symbol;return"function"===typeof n?n.observable?e=n.observable:(e=n("observable"),n.observable=e):e="@@observable",e}n.d(e,"a",(function(){return r}))},function(a,e,n){"use strict";function r(a){return function(e){var n=e.dispatch,r=e.getState;return function(e){return function(o){return"function"===typeof o?o(n,r,a):e(o)}}}}var o=r();o.withExtraArgument=r,e.a=o},function(a,e,n){(function(e){var r=n(47),o=n(48);function t(a){console.log("[dotenv][DEBUG] ".concat(a))}var i=/^\s*([\w.-]+)\s*=\s*(.*)?\s*$/,l=/\\n/g,u=/\n|\r|\r\n/;function s(a,e){var n=Boolean(e&&e.debug),r={};return a.toString().split(u).forEach((function(a,e){var o=a.match(i);if(null!=o){var u=o[1],s=o[2]||"",d=s.length-1,h='"'===s[0]&&'"'===s[d];"'"===s[0]&&"'"===s[d]||h?(s=s.substring(1,d),h&&(s=s.replace(l,"\n"))):s=s.trim(),r[u]=s}else n&&t("did not match key and value when parsing line ".concat(e+1,": ").concat(a))})),r}a.exports.config=function(a){var n=o.resolve(e.cwd(),".env"),i="utf8",l=!1;a&&(null!=a.path&&(n=a.path),null!=a.encoding&&(i=a.encoding),null!=a.debug&&(l=!0));try{var u=s(r.readFileSync(n,{encoding:i}),{debug:l});return Object.keys(u).forEach((function(a){Object.prototype.hasOwnProperty.call(Object({NODE_ENV:"production",PUBLIC_URL:"/weather.app",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_RAPIDAPI_KEY:"X68rUYSbMCmshav24t29GlhexDBAp1kWRBcjsn6NJ0YfRr4Nh5",REACT_APP_WEATHER_MAIN_URL:"https://community-open-weather-map.p.rapidapi.com/forecast",REACT_APP_MAPTILER_ACCESS_TOKEN:"uZO4MwympiuR6D6S3xBi",REACT_APP_MAP_ID:"basic",REACT_APP_RAPIDAPI_TIME_URL:"https://geo-services-by-mvpc-com.p.rapidapi.com/timezone",REACT_APP_COUNTRY_CITES:"https://wft-geo-db.p.rapidapi.com/v1/geo/cities?"}),a)?l&&t('"'.concat(a,'" is already defined in `process.env` and will not be overwritten')):Object({NODE_ENV:"production",PUBLIC_URL:"/weather.app",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0,REACT_APP_RAPIDAPI_KEY:"X68rUYSbMCmshav24t29GlhexDBAp1kWRBcjsn6NJ0YfRr4Nh5",REACT_APP_WEATHER_MAIN_URL:"https://community-open-weather-map.p.rapidapi.com/forecast",REACT_APP_MAPTILER_ACCESS_TOKEN:"uZO4MwympiuR6D6S3xBi",REACT_APP_MAP_ID:"basic",REACT_APP_RAPIDAPI_TIME_URL:"https://geo-services-by-mvpc-com.p.rapidapi.com/timezone",REACT_APP_COUNTRY_CITES:"https://wft-geo-db.p.rapidapi.com/v1/geo/cities?"})[a]=u[a]})),{parsed:u}}catch(d){return{error:d}}},a.exports.parse=s}).call(this,n(17))},function(a,e,n){"use strict";n.d(e,"a",(function(){return v}));var r=n(1),o=n.n(r);function t(a){var e=a.getBoundingClientRect();return{x:e.left,y:e.top}}function i(a,e){for(;a;){if(a.classList&&a.classList.contains(e))return!0;a=a.parentElement}return!1}var l=function(){return!0};function u(a,e,n,r){return"https://stamen-tiles.a.ssl.fastly.net/toner/"+n+"/"+a+"/"+e+(r>=2?"@2x":"")+".png"}var s=function(a,e){return(a+180)/360*Math.pow(2,e)},d=function(a,e){return(1-Math.log(Math.tan(a*Math.PI/180)+1/Math.cos(a*Math.PI/180))/Math.PI)/2*Math.pow(2,e)};function h(a,e){return a/Math.pow(2,e)*360-180}function c(a,e){var n=Math.PI-2*Math.PI*a/Math.pow(2,e);return 180/Math.PI*Math.atan(.5*(Math.exp(n)-Math.exp(-n)))}function g(a,e){var n=t(a);return[e.clientX-n.x,e.clientY-n.y]}var m=[c(Math.pow(2,10),10),c(0,10),h(0,10),h(Math.pow(2,10),10)],f="undefined"!==typeof window,p=f&&window.performance&&window.performance.now?function(){return window.performance.now()}:function(){var a=(new Date).getTime();return function(){return(new Date).getTime()-a}}(),y=function(a){return f?(window.requestAnimationFrame||window.setTimeout)(a):(a((new Date).getTime()),null)},k=function(a){return!(!f||!a)&&(window.cancelAnimationFrame||window.clearTimeout)(a)};function b(a,e,n,r,o){return a&&0!==a.length?a.map((function(a){return e(n,r,o,a)+(1===a?"":" "+a+"x")})).join(", "):""}var v=function(a){var e,n;function r(e){var n,r,o,t,u,f,b,v,S;return(S=a.call(this,e)||this)._dragStart=null,S._mouseDown=!1,S._moveEvents=[],S._lastClick=null,S._lastTap=null,S._lastWheel=null,S._touchStartPixel=null,S._touchStartMidPoint=null,S._touchStartDistance=null,S._secondTouchEnd=null,S._warningClearTimeout=null,S._isAnimating=!1,S._animationStart=null,S._animationEnd=null,S._zoomStart=null,S._centerTarget=null,S._zoomTarget=null,S._zoomAround=null,S._animFrame=null,S._boundsSynced=!1,S._minMaxCache=null,S.updateWidthHeight=function(){if(S._containerRef){var a=S._containerRef.getBoundingClientRect();if(a&&a.width>0&&a.height>0)return S.setState({width:a.width,height:a.height}),!0}return!1},S.wa=function(){var a;return(a=window).addEventListener.apply(a,arguments)},S.wr=function(){var a;return(a=window).removeEventListener.apply(a,arguments)},S.bindMouseEvents=function(){S.wa("mousedown",S.handleMouseDown),S.wa("mouseup",S.handleMouseUp),S.wa("mousemove",S.handleMouseMove)},S.bindTouchEvents=function(){S.wa("touchstart",S.handleTouchStart,{passive:!1}),S.wa("touchmove",S.handleTouchMove,{passive:!1}),S.wa("touchend",S.handleTouchEnd,{passive:!1})},S.unbindMouseEvents=function(){S.wr("mousedown",S.handleMouseDown),S.wr("mouseup",S.handleMouseUp),S.wr("mousemove",S.handleMouseMove)},S.unbindTouchEvents=function(){S.wr("touchstart",S.handleTouchStart),S.wr("touchmove",S.handleTouchMove),S.wr("touchend",S.handleTouchEnd)},S.bindResizeEvent=function(){S.wa("resize",S.updateWidthHeight)},S.unbindResizeEvent=function(){S.wr("resize",S.updateWidthHeight)},S.bindWheelEvent=function(){S._containerRef&&S._containerRef.addEventListener("wheel",S.handleWheel,{passive:!1})},S.unbindWheelEvent=function(){S._containerRef&&S._containerRef.removeEventListener("wheel",S.handleWheel)},S.setCenterZoomTarget=function(a,e,n,r,o){if(void 0===n&&(n=!1),void 0===r&&(r=null),void 0===o&&(o=300),S.props.animate&&(!n||S.distanceInScreens(a,e,S.state.center,S.state.zoom)<=S.props.animateMaxScreens)){if(S._isAnimating){k(S._animFrame);var t=S.animationStep(p()),i=t.centerStep,l=t.zoomStep;S._centerStart=i,S._zoomStart=l}else S._isAnimating=!0,S._centerStart=S.limitCenterAtZoom([S._lastCenter[0],S._lastCenter[1]],S._lastZoom),S._zoomStart=S._lastZoom,S.onAnimationStart();S._animationStart=p(),S._animationEnd=S._animationStart+o,r?(S._zoomAround=r,S._centerTarget=S.calculateZoomCenter(S._lastCenter,r,S._lastZoom,e)):(S._zoomAround=null,S._centerTarget=a),S._zoomTarget=e,S._animFrame=y(S.animate)}else if(S.stopAnimating(),r){var u=S.calculateZoomCenter(S._lastCenter,r,S._lastZoom,e);S.setCenterZoom(u,e,n)}else S.setCenterZoom(a||S.state.center,e,n)},S.distanceInScreens=function(a,e,n,r){var o=S.state,t=o.width,i=o.height,l=S.latLngToPixel(n,n,r),u=S.latLngToPixel(a,n,r),s=S.latLngToPixel(n,n,e),d=S.latLngToPixel(a,n,e),h=(Math.abs(l[0]-u[0])+Math.abs(s[0]-d[0]))/2/t,c=(Math.abs(l[1]-u[1])+Math.abs(s[1]-d[1]))/2/i;return Math.sqrt(h*h+c*c)},S.animationStep=function(a){if(!S._animationEnd||!S._animationStart||!S._zoomTarget||!S._zoomStart||!S._centerStart||!S._centerTarget)return{centerStep:S.state.center,zoomStep:S.state.zoom};var e,n=S._animationEnd-S._animationStart,r=Math.max(a-S._animationStart,0),o=(e=r/n)*(2-e),t=(S._zoomTarget-S._zoomStart)*o,i=S._zoomStart+t;return S._zoomAround?{centerStep:S.calculateZoomCenter(S._centerStart,S._zoomAround,S._zoomStart,i),zoomStep:i}:{centerStep:[S._centerStart[0]+(S._centerTarget[0]-S._centerStart[0])*o,S._centerStart[1]+(S._centerTarget[1]-S._centerStart[1])*o],zoomStep:i}},S.animate=function(a){if(!S._animationEnd||a>=S._animationEnd)S._isAnimating=!1,S.setCenterZoom(S._centerTarget,S._zoomTarget,!0),S.onAnimationStop();else{var e=S.animationStep(a),n=e.centerStep,r=e.zoomStep;S.setCenterZoom(n,r),S._animFrame=y(S.animate)}},S.stopAnimating=function(){S._isAnimating&&(S._isAnimating=!1,S.onAnimationStop(),k(S._animFrame))},S.limitCenterAtZoom=function(a,e){var n=S.getBoundsMinMax(e||S.state.zoom);return[Math.max(Math.min(!a||isNaN(a[0])?S.state.center[0]:a[0],n[1]),n[0]),Math.max(Math.min(!a||isNaN(a[1])?S.state.center[1]:a[1],n[3]),n[2])]},S.onAnimationStart=function(){S.props.onAnimationStart&&S.props.onAnimationStart()},S.onAnimationStop=function(){S.props.onAnimationStop&&S.props.onAnimationStop()},S.setCenterZoom=function(a,e,n){void 0===n&&(n=!1);var r=S.limitCenterAtZoom(a,e);if(e&&Math.round(S.state.zoom)!==Math.round(e)){var o=S.tileValues(S.state),t=S.tileValues({center:r,zoom:e,width:S.state.width,height:S.state.height}),i=S.state.oldTiles;S.setState({oldTiles:i.filter((function(a){return a.roundedZoom!==o.roundedZoom})).concat(o)},l);for(var u={},s=t.tileMinX;s<=t.tileMaxX;s++)for(var d=t.tileMinY;d<=t.tileMaxY;d++){u[s+"-"+d+"-"+t.roundedZoom]=!1}S._loadTracker=u}S.setState({center:r,zoom:e||S.state.zoom},l);var h=S.props.zoom?S.props.zoom:S._lastZoom,c=S.props.center?S.props.center:S._lastCenter;e&&(n||Math.abs(h-e)>.001||Math.abs(c[0]-r[0])>1e-5||Math.abs(c[1]-r[1])>1e-5)&&(S._lastZoom=e,S._lastCenter=[].concat(r),S.syncToProps(r,e))},S.getBoundsMinMax=function(a){if("center"===S.props.limitBounds)return m;var e=S.state,n=e.width,r=e.height;if(S._minMaxCache&&S._minMaxCache[0]===a&&S._minMaxCache[1]===n&&S._minMaxCache[2]===r)return S._minMaxCache[3];var o=256*Math.pow(2,a),t=n>o?0:h(n/512,a),i=r>o?0:c(Math.pow(2,a)-r/512,a),l=n>o?0:h(Math.pow(2,a)-n/512,a),u=[i,r>o?0:c(r/512,a),t,l];return S._minMaxCache=[a,n,r,u],u},S.imageLoaded=function(a){S._loadTracker&&a in S._loadTracker&&(S._loadTracker[a]=!0,0===Object.values(S._loadTracker).filter((function(a){return!a})).length&&S.setState({oldTiles:[]},l))},S.handleTouchStart=function(a){if(S._containerRef&&(!a.target||!i(a.target,"pigeon-drag-block")))if(1===a.touches.length){var e=a.touches[0],n=g(S._containerRef,e);if(S.coordsInside(n)&&(S._touchStartPixel=[n],!S.props.twoFingerDrag))if(S.stopAnimating(),S._lastTap&&p()-S._lastTap<300){a.preventDefault();var r=S.pixelToLatLng(S._touchStartPixel[0]);S.setCenterZoomTarget(null,Math.max(S.props.minZoom,Math.min(S.state.zoom+1,S.props.maxZoom)),!1,r)}else S._lastTap=p(),S.trackMoveEvents(n)}else if(2===a.touches.length&&S._touchStartPixel){a.preventDefault(),S.stopTrackingMoveEvents(),(S.state.pixelDelta||S.state.zoomDelta)&&S.sendDeltaChange();var o=g(S._containerRef,a.touches[0]),t=g(S._containerRef,a.touches[1]);S._touchStartPixel=[o,t],S._touchStartMidPoint=[(o[0]+t[0])/2,(o[1]+t[1])/2],S._touchStartDistance=Math.sqrt(Math.pow(o[0]-t[0],2)+Math.pow(o[1]-t[1],2))}},S.handleTouchMove=function(a){if(S._containerRef){if(1===a.touches.length&&S._touchStartPixel){var e=a.touches[0],n=g(S._containerRef,e);S.props.twoFingerDrag?S.coordsInside(n)&&S.showWarning("fingers"):(a.preventDefault(),S.trackMoveEvents(n),S.setState({pixelDelta:[n[0]-S._touchStartPixel[0][0],n[1]-S._touchStartPixel[0][1]]},l))}else if(2===a.touches.length&&S._touchStartPixel&&S._touchStartMidPoint&&S._touchStartDistance){var r=S.state,o=r.width,t=r.height,i=r.zoom;a.preventDefault();var u=g(S._containerRef,a.touches[0]),s=g(S._containerRef,a.touches[1]),d=[(u[0]+s[0])/2,(u[1]+s[1])/2],h=[d[0]-S._touchStartMidPoint[0],d[1]-S._touchStartMidPoint[1]],c=Math.sqrt(Math.pow(u[0]-s[0],2)+Math.pow(u[1]-s[1],2)),m=Math.max(S.props.minZoom,Math.min(S.props.maxZoom,i+Math.log2(c/S._touchStartDistance)))-i,f=Math.pow(2,m),p=[(o/2-d[0])*(f-1),(t/2-d[1])*(f-1)];S.setState({zoomDelta:m,pixelDelta:[p[0]+h[0]*f,p[1]+h[1]*f]},l)}}else S._touchStartPixel=null},S.handleTouchEnd=function(a){if(S._containerRef){if(S._touchStartPixel){var e=S.props,n=e.zoomSnap,r=e.twoFingerDrag,o=e.minZoom,t=e.maxZoom,i=S.state.zoomDelta,l=S.sendDeltaChange(),u=l.center,s=l.zoom;if(0===a.touches.length)if(r)S.clearWarning();else{var d=S._touchStartPixel[0],h=g(S._containerRef,a.changedTouches[0]);(Math.abs(d[0]-h[0])>2||Math.abs(d[1]-h[1])>2)&&(!S._secondTouchEnd||p()-S._secondTouchEnd>300)&&(a.preventDefault(),S.throwAfterMoving(h,u,s)),S._touchStartPixel=null,S._secondTouchEnd=null}else if(1===a.touches.length){a.preventDefault();var c=g(S._containerRef,a.touches[0]);if(S._secondTouchEnd=p(),S._touchStartPixel=[c],S.trackMoveEvents(c),n){var m,f=S._touchStartMidPoint?S.pixelToLatLng(S._touchStartMidPoint):S.state.center;m=r&&Math.round(S.state.zoom)===Math.round(S.state.zoom+i)?Math.round(S.state.zoom):i>0?Math.ceil(S.state.zoom):Math.floor(S.state.zoom);var y=Math.max(o,Math.min(m,t));S.setCenterZoomTarget(f,y,!1,f)}}}}else S._touchStartPixel=null},S.handleMouseDown=function(a){if(S._containerRef){var e=g(S._containerRef,a);if(0===a.button&&(!a.target||!i(a.target,"pigeon-drag-block"))&&S.coordsInside(e))if(S.stopAnimating(),a.preventDefault(),S._lastClick&&p()-S._lastClick<300){var n=S.pixelToLatLng(S._mousePosition||e);S.setCenterZoomTarget(null,Math.max(S.props.minZoom,Math.min(S.state.zoom+1,S.props.maxZoom)),!1,n)}else S._lastClick=p(),S._mouseDown=!0,S._dragStart=e,S.trackMoveEvents(e)}},S.handleMouseMove=function(a){S._containerRef&&(S._mousePosition=g(S._containerRef,a),S._mouseDown&&S._dragStart&&(S.trackMoveEvents(S._mousePosition),S.setState({pixelDelta:[S._mousePosition[0]-S._dragStart[0],S._mousePosition[1]-S._dragStart[1]]},l)))},S.handleMouseUp=function(a){if(S._containerRef){var e=S.state.pixelDelta;if(S._mouseDown){S._mouseDown=!1;var n=g(S._containerRef,a);if(!S.props.onClick||a.target&&i(a.target,"pigeon-click-block")||e&&!(Math.abs(e[0])+Math.abs(e[1])<=2)){var r=S.sendDeltaChange(),o=r.center,t=r.zoom;S.throwAfterMoving(n,o,t)}else{var u=S.pixelToLatLng(n);S.props.onClick({event:a,latLng:u,pixel:n}),S.setState({pixelDelta:void 0},l)}}}else S._mouseDown=!1},S.stopTrackingMoveEvents=function(){S._moveEvents=[]},S.trackMoveEvents=function(a){var e=p();(0===S._moveEvents.length||e-S._moveEvents[S._moveEvents.length-1].timestamp>40)&&(S._moveEvents.push({timestamp:e,coords:a}),S._moveEvents.length>2&&S._moveEvents.shift())},S.throwAfterMoving=function(a,e,n){var r=S.state,o=r.width,t=r.height,i=S.props.animate,l=p(),u=S._moveEvents.shift();if(u&&i){var g=Math.max(l-u.timestamp,1),m=[(a[0]-u.coords[0])/g*120,(a[1]-u.coords[1])/g*120],f=Math.sqrt(m[0]*m[0]+m[1]*m[1]);if(f>40){var y=1500*f/Math.sqrt(o*o+t*t),k=h(s(e[1],n)-m[0]/256,n),b=c(d(e[0],n)-m[1]/256,n);S.setCenterZoomTarget([b,k],n,!1,null,y)}}S.stopTrackingMoveEvents()},S.sendDeltaChange=function(){var a=S.state,e=a.center,n=a.zoom,r=a.pixelDelta,o=a.zoomDelta,t=e[0],i=e[1];return(r||0!==o)&&(i=h(s(e[1],n+o)-(r?r[0]/256:0),n+o),t=c(d(e[0],n+o)-(r?r[1]/256:0),n+o),S.setCenterZoom([t,i],n+o)),S.setState({pixelDelta:void 0,zoomDelta:0},l),{center:S.limitCenterAtZoom([t,i],n+o),zoom:n+o}},S.getBounds=function(a,e){void 0===a&&(a=S.state.center),void 0===e&&(e=S.zoomPlusDelta());var n=S.state,r=n.width,o=n.height;return{ne:S.pixelToLatLng([r-1,0],a,e),sw:S.pixelToLatLng([0,o-1],a,e)}},S.syncToProps=function(a,e){void 0===a&&(a=S.state.center),void 0===e&&(e=S.state.zoom);var n=S.props.onBoundsChanged;n&&(n({center:a,zoom:e,bounds:S.getBounds(a,e),initial:!S._boundsSynced}),S._boundsSynced=!0)},S.handleWheel=function(a){var e=S.props,n=e.mouseEvents,r=e.metaWheelZoom,o=e.zoomSnap,t=e.animate;if(n)if(!r||a.metaKey){a.preventDefault();var i=-a.deltaY/150;if(!o&&S._zoomTarget){var l=S._zoomTarget-S.state.zoom;S.zoomAroundMouse(i+l,a)}else t?S.zoomAroundMouse(i,a):(!S._lastWheel||p()-S._lastWheel>300)&&(S._lastWheel=p(),S.zoomAroundMouse(i,a))}else S.showWarning("wheel")},S.showWarning=function(a){S.state.showWarning&&S.state.warningType===a||S.setState({showWarning:!0,warningType:a}),S._warningClearTimeout&&window.clearTimeout(S._warningClearTimeout),S._warningClearTimeout=window.setTimeout(S.clearWarning,300)},S.clearWarning=function(){S.state.showWarning&&S.setState({showWarning:!1})},S.zoomAroundMouse=function(a,e){if(S._containerRef){var n=S.state.zoom,r=S.props,o=r.minZoom,t=r.maxZoom,i=r.zoomSnap;if(S._mousePosition=g(S._containerRef,e),!(!S._mousePosition||n===o&&a<0||n===t&&a>0)){var l=S.pixelToLatLng(S._mousePosition),u=n+a;i&&(u=a<0?Math.floor(u):Math.ceil(u)),u=Math.max(o,Math.min(u,t)),S.setCenterZoomTarget(null,u,!1,l)}}},S.zoomPlusDelta=function(){return S.state.zoom+S.state.zoomDelta},S.pixelToLatLng=function(a,e,n){void 0===e&&(e=S.state.center),void 0===n&&(n=S.zoomPlusDelta());var r=S.state,o=r.width,t=r.height,i=r.pixelDelta,l=[(a[0]-o/2-(i?i[0]:0))/256,(a[1]-t/2-(i?i[1]:0))/256],u=s(e[1],n)+l[0],g=d(e[0],n)+l[1];return[Math.max(m[0],Math.min(m[1],c(g,n))),Math.max(m[2],Math.min(m[3],h(u,n)))]},S.latLngToPixel=function(a,e,n){void 0===e&&(e=S.state.center),void 0===n&&(n=S.zoomPlusDelta());var r=S.state,o=r.width,t=r.height,i=r.pixelDelta,l=s(e[1],n),u=d(e[0],n),h=s(a[1],n),c=d(a[0],n);return[256*(h-l)+o/2+(i?i[0]:0),256*(c-u)+t/2+(i?i[1]:0)]},S.calculateZoomCenter=function(a,e,n,r){var o=S.state,t=o.width,i=o.height,l=S.latLngToPixel(e,a,n),u=S.latLngToPixel(e,a,r),s=S.pixelToLatLng([t/2+u[0]-l[0],i/2+u[1]-l[1]],a,r);return S.limitCenterAtZoom(s,r)},S.setRef=function(a){S._containerRef=a},S.syncToProps=function(a,e){var n;return function(){for(var r=arguments.length,o=new Array(r),t=0;t<r;t++)o[t]=arguments[t];var i=this;clearTimeout(n),n=setTimeout((function(){return a.apply(i,o)}),e)}}(S.syncToProps,60),S._lastZoom=null!==(n=null!==(r=e.defaultZoom)&&void 0!==r?r:e.zoom)&&void 0!==n?n:14,S._lastCenter=null!==(o=null!==(t=e.defaultCenter)&&void 0!==t?t:e.center)&&void 0!==o?o:[0,0],S.state={zoom:S._lastZoom,center:S._lastCenter,width:null!==(u=null!==(f=e.width)&&void 0!==f?f:e.defaultWidth)&&void 0!==u?u:-1,height:null!==(b=null!==(v=e.height)&&void 0!==v?v:e.defaultHeight)&&void 0!==b?b:-1,zoomDelta:0,pixelDelta:void 0,oldTiles:[],showWarning:!1,warningType:void 0},S}n=a,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n;var f=r.prototype;return f.componentDidMount=function(){this.props.mouseEvents&&this.bindMouseEvents(),this.props.touchEvents&&this.bindTouchEvents(),this.props.width&&this.props.height||(this.updateWidthHeight()||y(this.updateWidthHeight),this.bindResizeEvent()),this.bindWheelEvent(),this.syncToProps()},f.componentWillUnmount=function(){this.props.mouseEvents&&this.unbindMouseEvents(),this.props.touchEvents&&this.unbindTouchEvents(),this.unbindWheelEvent(),this.props.width&&this.props.height||this.unbindResizeEvent()},f.componentDidUpdate=function(a){var e;if(this.props.mouseEvents!==a.mouseEvents&&(this.props.mouseEvents?this.bindMouseEvents():this.unbindMouseEvents()),this.props.touchEvents!==a.touchEvents&&(this.props.touchEvents?this.bindTouchEvents():this.unbindTouchEvents()),this.props.width&&this.props.width!==a.width&&this.setState({width:this.props.width}),this.props.height&&this.props.height!==a.height&&this.setState({height:this.props.height}),(this.props.center||this.props.zoom)&&(this.props.center&&(this.props.center[0]!==(null===a||void 0===a||null===(e=a.center)||void 0===e?void 0:e[0])||this.props.center[1]!==a.center[1])||this.props.zoom!==a.zoom)){var n=this._isAnimating?this._centerTarget:this.state.center,r=this._isAnimating?this._zoomTarget:this.state.zoom;if(n&&r){var o,t,i=null!==(o=this.props.center)&&void 0!==o?o:n,l=null!==(t=this.props.zoom)&&void 0!==t?t:r;(Math.abs(l-r)>.001||Math.abs(i[0]-n[0])>1e-4||Math.abs(i[1]-n[1])>1e-4)&&this.setCenterZoomTarget(i,l,!0)}}},f.coordsInside=function(a){var e=this.state,n=e.width,r=e.height;if(a[0]<0||a[1]<0||a[0]>=n||a[1]>=r)return!1;var o=this._containerRef;if(o){var i=t(o),l=document.elementFromPoint(a[0]+i.x,a[1]+i.y);return o===l||o.contains(l)}return!1},f.tileValues=function(a){var e=a.center,n=a.zoom,r=a.pixelDelta,o=a.zoomDelta,t=a.width,i=a.height,l=Math.round(n+(o||0)),u=n+(o||0)-l,h=Math.pow(2,u),c=t/h,g=i/h,m=s(e[1],l)-(r?r[0]/256/h:0),f=d(e[0],l)-(r?r[1]/256/h:0),p=c/2/256,y=g/2/256;return{tileMinX:Math.floor(m-p),tileMaxX:Math.floor(m+p),tileMinY:Math.floor(f-y),tileMaxY:Math.floor(f+y),tileCenterX:m,tileCenterY:f,roundedZoom:l,zoomDelta:o||0,scaleWidth:c,scaleHeight:g,scale:h}},f.renderTiles=function(){for(var a=this,e=this.state.oldTiles,n=this.props.dprs,r=this.props.provider||u,t=this.tileValues(this.state),i=t.tileMinX,l=t.tileMaxX,s=t.tileMinY,d=t.tileMaxY,h=t.tileCenterX,c=t.tileCenterY,g=t.roundedZoom,m=t.scaleWidth,f=t.scaleHeight,p=t.scale,y=[],k=0;k<e.length;k++){var v=e[k],S=v.roundedZoom-g;if(!(Math.abs(S)>4||0===S))for(var C=1/Math.pow(2,S),M=256*-(i-v.tileMinX*C),w=256*-(s-v.tileMinY*C),B=Math.max(v.tileMinX,0),P=Math.max(v.tileMinY,0),A=Math.min(v.tileMaxX,Math.pow(2,v.roundedZoom)-1),T=Math.min(v.tileMaxY,Math.pow(2,v.roundedZoom)-1),K=B;K<=A;K++)for(var L=P;L<=T;L++)y.push({key:K+"-"+L+"-"+v.roundedZoom,url:r(K,L,v.roundedZoom),srcSet:b(n,r,K,L,v.roundedZoom),left:M+256*(K-v.tileMinX)*C,top:w+256*(L-v.tileMinY)*C,width:256*C,height:256*C,active:!1})}for(var z=Math.max(i,0),N=Math.max(s,0),E=Math.min(l,Math.pow(2,g)-1),R=Math.min(d,Math.pow(2,g)-1),D=z;D<=E;D++)for(var G=N;G<=R;G++)y.push({key:D+"-"+G+"-"+g,url:r(D,G,g),srcSet:b(n,r,D,G,g),left:256*(D-i),top:256*(G-s),width:256,height:256,active:!0});var H={width:m,height:f,position:"absolute",top:0,left:0,overflow:"hidden",willChange:"transform",transform:"scale("+p+", "+p+")",transformOrigin:"top left"},j=this.props.boxClassname||"",O={position:"absolute",width:256*(l-i+1),height:256*(d-s+1),willChange:"transform",transform:"translate("+-(256*(h-i)-m/2)+"px, "+-(256*(c-s)-f/2)+"px)"};return o.a.createElement("div",{style:H,className:j},o.a.createElement("div",{style:O},y.map((function(e){return o.a.createElement("img",{key:e.key,src:e.url,srcSet:e.srcSet,width:e.width,height:e.height,loading:"lazy",onLoad:function(){return a.imageLoaded(e.key)},alt:"",style:{position:"absolute",left:e.left,top:e.top,willChange:"transform",transformOrigin:"top left",opacity:1}})}))))},f.renderOverlays=function(){var a=this,e=this.state,n=e.width,r=e.height,t=e.center,i={bounds:this.getBounds(),zoom:this.zoomPlusDelta(),center:t,width:n,height:r},l=o.a.Children.map(this.props.children,(function(e){if(!e)return null;if(!o.a.isValidElement(e))return e;var n=e.props,r=n.anchor,l=n.position,u=n.offset,s=a.latLngToPixel(r||l||t);return o.a.cloneElement(e,{left:s[0]-(u?u[0]:0),top:s[1]-(u?u[1]:0),latLngToPixel:a.latLngToPixel,pixelToLatLng:a.pixelToLatLng,mapState:i})})),u={position:"absolute",width:n,height:r,top:0,left:0};return o.a.createElement("div",{style:u},l)},f.renderAttribution=function(){var a=this.props,e=a.attribution,n=a.attributionPrefix;if(!1===e)return null;var r={color:"#0078A8",textDecoration:"none"};return o.a.createElement("div",{key:"attr",className:"pigeon-attribution",style:{position:"absolute",bottom:0,right:0,fontSize:"11px",padding:"2px 5px",background:"rgba(255, 255, 255, 0.7)",fontFamily:"'Helvetica Neue', Helvetica, Arial, sans-serif",color:"#333"}},!1===n?null:o.a.createElement("span",null,n||o.a.createElement("a",{href:"https://pigeon-maps.js.org/",style:r,target:"_blank",rel:"noreferrer noopener"},"Pigeon")," | "),e||o.a.createElement("span",null," \xa9 ",o.a.createElement("a",{href:"https://www.openstreetmap.org/copyright",style:r,target:"_blank",rel:"noreferrer noopener"},"OpenStreetMap")," contributors"))},f.renderWarning=function(){var a=this.props,e=a.metaWheelZoom,n=a.metaWheelZoomWarning,r=a.twoFingerDrag,t=a.twoFingerDragWarning,i=a.warningZIndex,l=this.state,u=l.showWarning,s=l.warningType,d=l.width,h=l.height;if(e&&n||r&&t){var c={position:"absolute",top:0,left:0,width:d,height:h,overflow:"hidden",pointerEvents:"none",opacity:u?100:0,transition:"opacity 300ms",background:"rgba(0,0,0,0.5)",color:"#fff",display:"flex",justifyContent:"center",alignItems:"center",fontSize:22,fontFamily:'"Arial", sans-serif',textAlign:"center",zIndex:i},g="undefined"!==typeof window&&window.navigator&&window.navigator.platform.toUpperCase().indexOf("MAC")>=0?"\u2318":"\u229e",m="fingers"===s?t:n;return o.a.createElement("div",{style:c},m.replace("META",g))}return null},f.render=function(){var a=this.props,e=a.touchEvents,n=a.twoFingerDrag,r=this.state,t=r.width,i=r.height,l={width:this.props.width?t:"100%",height:this.props.height?i:"100%",position:"relative",display:"inline-block",overflow:"hidden",background:"#dddddd",touchAction:e?n?"pan-x pan-y":"none":"auto"},u=!(!t||!i);return o.a.createElement("div",{style:l,ref:this.setRef},u&&this.renderTiles(),u&&this.renderOverlays(),u&&this.renderAttribution(),u&&this.renderWarning())},r}(r.Component);v.defaultProps={animate:!0,metaWheelZoom:!1,metaWheelZoomWarning:"Use META+wheel to zoom!",twoFingerDrag:!1,twoFingerDragWarning:"Use two fingers to move the map",zoomSnap:!0,mouseEvents:!0,touchEvents:!0,warningZIndex:100,animateMaxScreens:5,minZoom:1,maxZoom:18,limitBounds:"center",dprs:[]}},function(a,e,n){"use strict";n(16);var r=n(1),o=60103;if(e.Fragment=60107,"function"===typeof Symbol&&Symbol.for){var t=Symbol.for;o=t("react.element"),e.Fragment=t("react.fragment")}var i=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l=Object.prototype.hasOwnProperty,u={key:!0,ref:!0,__self:!0,__source:!0};function s(a,e,n){var r,t={},s=null,d=null;for(r in void 0!==n&&(s=""+n),void 0!==e.key&&(s=""+e.key),void 0!==e.ref&&(d=e.ref),e)l.call(e,r)&&!u.hasOwnProperty(r)&&(t[r]=e[r]);if(a&&a.defaultProps)for(r in e=a.defaultProps)void 0===t[r]&&(t[r]=e[r]);return{$$typeof:o,type:a,key:s,ref:d,props:t,_owner:i.current}}e.jsx=s,e.jsxs=s},function(a,e,n){"use strict";var r=n(16),o=60103,t=60106;e.Fragment=60107,e.StrictMode=60108,e.Profiler=60114;var i=60109,l=60110,u=60112;e.Suspense=60113;var s=60115,d=60116;if("function"===typeof Symbol&&Symbol.for){var h=Symbol.for;o=h("react.element"),t=h("react.portal"),e.Fragment=h("react.fragment"),e.StrictMode=h("react.strict_mode"),e.Profiler=h("react.profiler"),i=h("react.provider"),l=h("react.context"),u=h("react.forward_ref"),e.Suspense=h("react.suspense"),s=h("react.memo"),d=h("react.lazy")}var c="function"===typeof Symbol&&Symbol.iterator;function g(a){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+a,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+a+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},f={};function p(a,e,n){this.props=a,this.context=e,this.refs=f,this.updater=n||m}function y(){}function k(a,e,n){this.props=a,this.context=e,this.refs=f,this.updater=n||m}p.prototype.isReactComponent={},p.prototype.setState=function(a,e){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(g(85));this.updater.enqueueSetState(this,a,e,"setState")},p.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")},y.prototype=p.prototype;var b=k.prototype=new y;b.constructor=k,r(b,p.prototype),b.isPureReactComponent=!0;var v={current:null},S=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function M(a,e,n){var r,t={},i=null,l=null;if(null!=e)for(r in void 0!==e.ref&&(l=e.ref),void 0!==e.key&&(i=""+e.key),e)S.call(e,r)&&!C.hasOwnProperty(r)&&(t[r]=e[r]);var u=arguments.length-2;if(1===u)t.children=n;else if(1<u){for(var s=Array(u),d=0;d<u;d++)s[d]=arguments[d+2];t.children=s}if(a&&a.defaultProps)for(r in u=a.defaultProps)void 0===t[r]&&(t[r]=u[r]);return{$$typeof:o,type:a,key:i,ref:l,props:t,_owner:v.current}}function w(a){return"object"===typeof a&&null!==a&&a.$$typeof===o}var B=/\/+/g;function P(a,e){return"object"===typeof a&&null!==a&&null!=a.key?function(a){var e={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,(function(a){return e[a]}))}(""+a.key):e.toString(36)}function A(a,e,n,r,i){var l=typeof a;"undefined"!==l&&"boolean"!==l||(a=null);var u=!1;if(null===a)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(a.$$typeof){case o:case t:u=!0}}if(u)return i=i(u=a),a=""===r?"."+P(u,0):r,Array.isArray(i)?(n="",null!=a&&(n=a.replace(B,"$&/")+"/"),A(i,e,n,"",(function(a){return a}))):null!=i&&(w(i)&&(i=function(a,e){return{$$typeof:o,type:a.type,key:e,ref:a.ref,props:a.props,_owner:a._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(B,"$&/")+"/")+a)),e.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(a))for(var s=0;s<a.length;s++){var d=r+P(l=a[s],s);u+=A(l,e,n,d,i)}else if("function"===typeof(d=function(a){return null===a||"object"!==typeof a?null:"function"===typeof(a=c&&a[c]||a["@@iterator"])?a:null}(a)))for(a=d.call(a),s=0;!(l=a.next()).done;)u+=A(l=l.value,e,n,d=r+P(l,s++),i);else if("object"===l)throw e=""+a,Error(g(31,"[object Object]"===e?"object with keys {"+Object.keys(a).join(", ")+"}":e));return u}function T(a,e,n){if(null==a)return a;var r=[],o=0;return A(a,r,"","",(function(a){return e.call(n,a,o++)})),r}function K(a){if(-1===a._status){var e=a._result;e=e(),a._status=0,a._result=e,e.then((function(e){0===a._status&&(e=e.default,a._status=1,a._result=e)}),(function(e){0===a._status&&(a._status=2,a._result=e)}))}if(1===a._status)return a._result;throw a._result}var L={current:null};function z(){var a=L.current;if(null===a)throw Error(g(321));return a}var N={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:v,IsSomeRendererActing:{current:!1},assign:r};e.Children={map:T,forEach:function(a,e,n){T(a,(function(){e.apply(this,arguments)}),n)},count:function(a){var e=0;return T(a,(function(){e++})),e},toArray:function(a){return T(a,(function(a){return a}))||[]},only:function(a){if(!w(a))throw Error(g(143));return a}},e.Component=p,e.PureComponent=k,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,e.cloneElement=function(a,e,n){if(null===a||void 0===a)throw Error(g(267,a));var t=r({},a.props),i=a.key,l=a.ref,u=a._owner;if(null!=e){if(void 0!==e.ref&&(l=e.ref,u=v.current),void 0!==e.key&&(i=""+e.key),a.type&&a.type.defaultProps)var s=a.type.defaultProps;for(d in e)S.call(e,d)&&!C.hasOwnProperty(d)&&(t[d]=void 0===e[d]&&void 0!==s?s[d]:e[d])}var d=arguments.length-2;if(1===d)t.children=n;else if(1<d){s=Array(d);for(var h=0;h<d;h++)s[h]=arguments[h+2];t.children=s}return{$$typeof:o,type:a.type,key:i,ref:l,props:t,_owner:u}},e.createContext=function(a,e){return void 0===e&&(e=null),(a={$$typeof:l,_calculateChangedBits:e,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:a},a.Consumer=a},e.createElement=M,e.createFactory=function(a){var e=M.bind(null,a);return e.type=a,e},e.createRef=function(){return{current:null}},e.forwardRef=function(a){return{$$typeof:u,render:a}},e.isValidElement=w,e.lazy=function(a){return{$$typeof:d,_payload:{_status:-1,_result:a},_init:K}},e.memo=function(a,e){return{$$typeof:s,type:a,compare:void 0===e?null:e}},e.useCallback=function(a,e){return z().useCallback(a,e)},e.useContext=function(a,e){return z().useContext(a,e)},e.useDebugValue=function(){},e.useEffect=function(a,e){return z().useEffect(a,e)},e.useImperativeHandle=function(a,e,n){return z().useImperativeHandle(a,e,n)},e.useLayoutEffect=function(a,e){return z().useLayoutEffect(a,e)},e.useMemo=function(a,e){return z().useMemo(a,e)},e.useReducer=function(a,e,n){return z().useReducer(a,e,n)},e.useRef=function(a){return z().useRef(a)},e.useState=function(a){return z().useState(a)},e.version="17.0.1"},function(a,e,n){"use strict";var r=n(1),o=n(16),t=n(39);function i(a){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+a,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+a+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function s(a,e){d(a,e),d(a+"Capture",e)}function d(a,e){for(u[a]=e,a=0;a<e.length;a++)l.add(e[a])}var h=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),c=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,g=Object.prototype.hasOwnProperty,m={},f={};function p(a,e,n,r,o,t,i){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=a,this.type=e,this.sanitizeURL=t,this.removeEmptyString=i}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(a){y[a]=new p(a,0,!1,a,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(a){var e=a[0];y[e]=new p(e,1,!1,a[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(a){y[a]=new p(a,2,!1,a.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(a){y[a]=new p(a,2,!1,a,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(a){y[a]=new p(a,3,!1,a.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(a){y[a]=new p(a,3,!0,a,null,!1,!1)})),["capture","download"].forEach((function(a){y[a]=new p(a,4,!1,a,null,!1,!1)})),["cols","rows","size","span"].forEach((function(a){y[a]=new p(a,6,!1,a,null,!1,!1)})),["rowSpan","start"].forEach((function(a){y[a]=new p(a,5,!1,a.toLowerCase(),null,!1,!1)}));var k=/[\-:]([a-z])/g;function b(a){return a[1].toUpperCase()}function v(a,e,n,r){var o=y.hasOwnProperty(e)?y[e]:null;(null!==o?0===o.type:!r&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(a,e,n,r){if(null===e||"undefined"===typeof e||function(a,e,n,r){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(a=a.toLowerCase().slice(0,5))&&"aria-"!==a);default:return!1}}(a,e,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,o,r)&&(n=null),r||null===o?function(a){return!!g.call(f,a)||!g.call(m,a)&&(c.test(a)?f[a]=!0:(m[a]=!0,!1))}(e)&&(null===n?a.removeAttribute(e):a.setAttribute(e,""+n)):o.mustUseProperty?a[o.propertyName]=null===n?3!==o.type&&"":n:(e=o.attributeName,r=o.attributeNamespace,null===n?a.removeAttribute(e):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?a.setAttributeNS(r,e,n):a.setAttribute(e,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(a){var e=a.replace(k,b);y[e]=new p(e,1,!1,a,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(a){var e=a.replace(k,b);y[e]=new p(e,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(a){var e=a.replace(k,b);y[e]=new p(e,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(a){y[a]=new p(a,1,!1,a.toLowerCase(),null,!1,!1)})),y.xlinkHref=new p("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(a){y[a]=new p(a,1,!1,a.toLowerCase(),null,!0,!0)}));var S=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=60103,M=60106,w=60107,B=60108,P=60114,A=60109,T=60110,K=60112,L=60113,z=60120,N=60115,E=60116,R=60121,D=60128,G=60129,H=60130,j=60131;if("function"===typeof Symbol&&Symbol.for){var O=Symbol.for;C=O("react.element"),M=O("react.portal"),w=O("react.fragment"),B=O("react.strict_mode"),P=O("react.profiler"),A=O("react.provider"),T=O("react.context"),K=O("react.forward_ref"),L=O("react.suspense"),z=O("react.suspense_list"),N=O("react.memo"),E=O("react.lazy"),R=O("react.block"),O("react.scope"),D=O("react.opaque.id"),G=O("react.debug_trace_mode"),H=O("react.offscreen"),j=O("react.legacy_hidden")}var x,F="function"===typeof Symbol&&Symbol.iterator;function V(a){return null===a||"object"!==typeof a?null:"function"===typeof(a=F&&a[F]||a["@@iterator"])?a:null}function I(a){if(void 0===x)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);x=e&&e[1]||""}return"\n"+x+a}var W=!1;function _(a,e){if(!a||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(e,[])}catch(u){var r=u}Reflect.construct(a,[],e)}else{try{e.call()}catch(u){r=u}a.call(e.prototype)}else{try{throw Error()}catch(u){r=u}a()}}catch(u){if(u&&r&&"string"===typeof u.stack){for(var o=u.stack.split("\n"),t=r.stack.split("\n"),i=o.length-1,l=t.length-1;1<=i&&0<=l&&o[i]!==t[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==t[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==t[l])return"\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{W=!1,Error.prepareStackTrace=n}return(a=a?a.displayName||a.name:"")?I(a):""}function J(a){switch(a.tag){case 5:return I(a.type);case 16:return I("Lazy");case 13:return I("Suspense");case 19:return I("SuspenseList");case 0:case 2:case 15:return a=_(a.type,!1);case 11:return a=_(a.type.render,!1);case 22:return a=_(a.type._render,!1);case 1:return a=_(a.type,!0);default:return""}}function U(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case w:return"Fragment";case M:return"Portal";case P:return"Profiler";case B:return"StrictMode";case L:return"Suspense";case z:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case T:return(a.displayName||"Context")+".Consumer";case A:return(a._context.displayName||"Context")+".Provider";case K:var e=a.render;return e=e.displayName||e.name||"",a.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case N:return U(a.type);case R:return U(a._render);case E:e=a._payload,a=a._init;try{return U(a(e))}catch(n){}}return null}function Z(a){switch(typeof a){case"boolean":case"number":case"object":case"string":case"undefined":return a;default:return""}}function Y(a){var e=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===e||"radio"===e)}function q(a){a._valueTracker||(a._valueTracker=function(a){var e=Y(a)?"checked":"value",n=Object.getOwnPropertyDescriptor(a.constructor.prototype,e),r=""+a[e];if(!a.hasOwnProperty(e)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var o=n.get,t=n.set;return Object.defineProperty(a,e,{configurable:!0,get:function(){return o.call(this)},set:function(a){r=""+a,t.call(this,a)}}),Object.defineProperty(a,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(a){r=""+a},stopTracking:function(){a._valueTracker=null,delete a[e]}}}}(a))}function Q(a){if(!a)return!1;var e=a._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return a&&(r=Y(a)?a.checked?"true":"false":a.value),(a=r)!==n&&(e.setValue(a),!0)}function X(a){if("undefined"===typeof(a=a||("undefined"!==typeof document?document:void 0)))return null;try{return a.activeElement||a.body}catch(e){return a.body}}function $(a,e){var n=e.checked;return o({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:a._wrapperState.initialChecked})}function aa(a,e){var n=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;n=Z(null!=e.value?e.value:n),a._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function ea(a,e){null!=(e=e.checked)&&v(a,"checked",e,!1)}function na(a,e){ea(a,e);var n=Z(e.value),r=e.type;if(null!=n)"number"===r?(0===n&&""===a.value||a.value!=n)&&(a.value=""+n):a.value!==""+n&&(a.value=""+n);else if("submit"===r||"reset"===r)return void a.removeAttribute("value");e.hasOwnProperty("value")?oa(a,e.type,n):e.hasOwnProperty("defaultValue")&&oa(a,e.type,Z(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(a.defaultChecked=!!e.defaultChecked)}function ra(a,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+a._wrapperState.initialValue,n||e===a.value||(a.value=e),a.defaultValue=e}""!==(n=a.name)&&(a.name=""),a.defaultChecked=!!a._wrapperState.initialChecked,""!==n&&(a.name=n)}function oa(a,e,n){"number"===e&&X(a.ownerDocument)===a||(null==n?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+n&&(a.defaultValue=""+n))}function ta(a,e){return a=o({children:void 0},e),(e=function(a){var e="";return r.Children.forEach(a,(function(a){null!=a&&(e+=a)})),e}(e.children))&&(a.children=e),a}function ia(a,e,n,r){if(a=a.options,e){e={};for(var o=0;o<n.length;o++)e["$"+n[o]]=!0;for(n=0;n<a.length;n++)o=e.hasOwnProperty("$"+a[n].value),a[n].selected!==o&&(a[n].selected=o),o&&r&&(a[n].defaultSelected=!0)}else{for(n=""+Z(n),e=null,o=0;o<a.length;o++){if(a[o].value===n)return a[o].selected=!0,void(r&&(a[o].defaultSelected=!0));null!==e||a[o].disabled||(e=a[o])}null!==e&&(e.selected=!0)}}function la(a,e){if(null!=e.dangerouslySetInnerHTML)throw Error(i(91));return o({},e,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function ua(a,e){var n=e.value;if(null==n){if(n=e.children,e=e.defaultValue,null!=n){if(null!=e)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}e=n}null==e&&(e=""),n=e}a._wrapperState={initialValue:Z(n)}}function sa(a,e){var n=Z(e.value),r=Z(e.defaultValue);null!=n&&((n=""+n)!==a.value&&(a.value=n),null==e.defaultValue&&a.defaultValue!==n&&(a.defaultValue=n)),null!=r&&(a.defaultValue=""+r)}function da(a){var e=a.textContent;e===a._wrapperState.initialValue&&""!==e&&null!==e&&(a.value=e)}var ha="http://www.w3.org/1999/xhtml",ca="http://www.w3.org/2000/svg";function ga(a){switch(a){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ma(a,e){return null==a||"http://www.w3.org/1999/xhtml"===a?ga(e):"http://www.w3.org/2000/svg"===a&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":a}var fa,pa,ya=(pa=function(a,e){if(a.namespaceURI!==ca||"innerHTML"in a)a.innerHTML=e;else{for((fa=fa||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=fa.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;e.firstChild;)a.appendChild(e.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(a,e,n,r){MSApp.execUnsafeLocalFunction((function(){return pa(a,e)}))}:pa);function ka(a,e){if(e){var n=a.firstChild;if(n&&n===a.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}a.textContent=e}var ba={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},va=["Webkit","ms","Moz","O"];function Sa(a,e,n){return null==e||"boolean"===typeof e||""===e?"":n||"number"!==typeof e||0===e||ba.hasOwnProperty(a)&&ba[a]?(""+e).trim():e+"px"}function Ca(a,e){for(var n in a=a.style,e)if(e.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=Sa(n,e[n],r);"float"===n&&(n="cssFloat"),r?a.setProperty(n,o):a[n]=o}}Object.keys(ba).forEach((function(a){va.forEach((function(e){e=e+a.charAt(0).toUpperCase()+a.substring(1),ba[e]=ba[a]}))}));var Ma=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function wa(a,e){if(e){if(Ma[a]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(i(137,a));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(i(60));if("object"!==typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=e.style&&"object"!==typeof e.style)throw Error(i(62))}}function Ba(a,e){if(-1===a.indexOf("-"))return"string"===typeof e.is;switch(a){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Pa(a){return(a=a.target||a.srcElement||window).correspondingUseElement&&(a=a.correspondingUseElement),3===a.nodeType?a.parentNode:a}var Aa=null,Ta=null,Ka=null;function La(a){if(a=ao(a)){if("function"!==typeof Aa)throw Error(i(280));var e=a.stateNode;e&&(e=no(e),Aa(a.stateNode,a.type,e))}}function za(a){Ta?Ka?Ka.push(a):Ka=[a]:Ta=a}function Na(){if(Ta){var a=Ta,e=Ka;if(Ka=Ta=null,La(a),e)for(a=0;a<e.length;a++)La(e[a])}}function Ea(a,e){return a(e)}function Ra(a,e,n,r,o){return a(e,n,r,o)}function Da(){}var Ga=Ea,Ha=!1,ja=!1;function Oa(){null===Ta&&null===Ka||(Da(),Na())}function xa(a,e){var n=a.stateNode;if(null===n)return null;var r=no(n);if(null===r)return null;n=r[e];a:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(a=a.type)||"input"===a||"select"===a||"textarea"===a)),a=!r;break a;default:a=!1}if(a)return null;if(n&&"function"!==typeof n)throw Error(i(231,e,typeof n));return n}var Fa=!1;if(h)try{var Va={};Object.defineProperty(Va,"passive",{get:function(){Fa=!0}}),window.addEventListener("test",Va,Va),window.removeEventListener("test",Va,Va)}catch(pa){Fa=!1}function Ia(a,e,n,r,o,t,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{e.apply(n,s)}catch(d){this.onError(d)}}var Wa=!1,_a=null,Ja=!1,Ua=null,Za={onError:function(a){Wa=!0,_a=a}};function Ya(a,e,n,r,o,t,i,l,u){Wa=!1,_a=null,Ia.apply(Za,arguments)}function qa(a){var e=a,n=a;if(a.alternate)for(;e.return;)e=e.return;else{a=e;do{0!==(1026&(e=a).flags)&&(n=e.return),a=e.return}while(a)}return 3===e.tag?n:null}function Qa(a){if(13===a.tag){var e=a.memoizedState;if(null===e&&(null!==(a=a.alternate)&&(e=a.memoizedState)),null!==e)return e.dehydrated}return null}function Xa(a){if(qa(a)!==a)throw Error(i(188))}function $a(a){if(!(a=function(a){var e=a.alternate;if(!e){if(null===(e=qa(a)))throw Error(i(188));return e!==a?null:a}for(var n=a,r=e;;){var o=n.return;if(null===o)break;var t=o.alternate;if(null===t){if(null!==(r=o.return)){n=r;continue}break}if(o.child===t.child){for(t=o.child;t;){if(t===n)return Xa(o),a;if(t===r)return Xa(o),e;t=t.sibling}throw Error(i(188))}if(n.return!==r.return)n=o,r=t;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=t;break}if(u===r){l=!0,r=o,n=t;break}u=u.sibling}if(!l){for(u=t.child;u;){if(u===n){l=!0,n=t,r=o;break}if(u===r){l=!0,r=t,n=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?a:e}(a)))return null;for(var e=a;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===a)break;for(;!e.sibling;){if(!e.return||e.return===a)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}function ae(a,e){for(var n=a.alternate;null!==e;){if(e===a||e===n)return!0;e=e.return}return!1}var ee,ne,re,oe,te=!1,ie=[],le=null,ue=null,se=null,de=new Map,he=new Map,ce=[],ge="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function me(a,e,n,r,o){return{blockedOn:a,domEventName:e,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function fe(a,e){switch(a){case"focusin":case"focusout":le=null;break;case"dragenter":case"dragleave":ue=null;break;case"mouseover":case"mouseout":se=null;break;case"pointerover":case"pointerout":de.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":he.delete(e.pointerId)}}function pe(a,e,n,r,o,t){return null===a||a.nativeEvent!==t?(a=me(e,n,r,o,t),null!==e&&(null!==(e=ao(e))&&ne(e)),a):(a.eventSystemFlags|=r,e=a.targetContainers,null!==o&&-1===e.indexOf(o)&&e.push(o),a)}function ye(a){var e=$r(a.target);if(null!==e){var n=qa(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=Qa(n)))return a.blockedOn=e,void oe(a.lanePriority,(function(){t.unstable_runWithPriority(a.priority,(function(){re(n)}))}))}else if(3===e&&n.stateNode.hydrate)return void(a.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}a.blockedOn=null}function ke(a){if(null!==a.blockedOn)return!1;for(var e=a.targetContainers;0<e.length;){var n=$e(a.domEventName,a.eventSystemFlags,e[0],a.nativeEvent);if(null!==n)return null!==(e=ao(n))&&ne(e),a.blockedOn=n,!1;e.shift()}return!0}function be(a,e,n){ke(a)&&n.delete(e)}function ve(){for(te=!1;0<ie.length;){var a=ie[0];if(null!==a.blockedOn){null!==(a=ao(a.blockedOn))&&ee(a);break}for(var e=a.targetContainers;0<e.length;){var n=$e(a.domEventName,a.eventSystemFlags,e[0],a.nativeEvent);if(null!==n){a.blockedOn=n;break}e.shift()}null===a.blockedOn&&ie.shift()}null!==le&&ke(le)&&(le=null),null!==ue&&ke(ue)&&(ue=null),null!==se&&ke(se)&&(se=null),de.forEach(be),he.forEach(be)}function Se(a,e){a.blockedOn===e&&(a.blockedOn=null,te||(te=!0,t.unstable_scheduleCallback(t.unstable_NormalPriority,ve)))}function Ce(a){function e(e){return Se(e,a)}if(0<ie.length){Se(ie[0],a);for(var n=1;n<ie.length;n++){var r=ie[n];r.blockedOn===a&&(r.blockedOn=null)}}for(null!==le&&Se(le,a),null!==ue&&Se(ue,a),null!==se&&Se(se,a),de.forEach(e),he.forEach(e),n=0;n<ce.length;n++)(r=ce[n]).blockedOn===a&&(r.blockedOn=null);for(;0<ce.length&&null===(n=ce[0]).blockedOn;)ye(n),null===n.blockedOn&&ce.shift()}function Me(a,e){var n={};return n[a.toLowerCase()]=e.toLowerCase(),n["Webkit"+a]="webkit"+e,n["Moz"+a]="moz"+e,n}var we={animationend:Me("Animation","AnimationEnd"),animationiteration:Me("Animation","AnimationIteration"),animationstart:Me("Animation","AnimationStart"),transitionend:Me("Transition","TransitionEnd")},Be={},Pe={};function Ae(a){if(Be[a])return Be[a];if(!we[a])return a;var e,n=we[a];for(e in n)if(n.hasOwnProperty(e)&&e in Pe)return Be[a]=n[e];return a}h&&(Pe=document.createElement("div").style,"AnimationEvent"in window||(delete we.animationend.animation,delete we.animationiteration.animation,delete we.animationstart.animation),"TransitionEvent"in window||delete we.transitionend.transition);var Te=Ae("animationend"),Ke=Ae("animationiteration"),Le=Ae("animationstart"),ze=Ae("transitionend"),Ne=new Map,Ee=new Map,Re=["abort","abort",Te,"animationEnd",Ke,"animationIteration",Le,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",ze,"transitionEnd","waiting","waiting"];function De(a,e){for(var n=0;n<a.length;n+=2){var r=a[n],o=a[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),Ee.set(r,e),Ne.set(r,o),s(o,[r])}}(0,t.unstable_now)();var Ge=8;function He(a){if(0!==(1&a))return Ge=15,1;if(0!==(2&a))return Ge=14,2;if(0!==(4&a))return Ge=13,4;var e=24&a;return 0!==e?(Ge=12,e):0!==(32&a)?(Ge=11,32):0!==(e=192&a)?(Ge=10,e):0!==(256&a)?(Ge=9,256):0!==(e=3584&a)?(Ge=8,e):0!==(4096&a)?(Ge=7,4096):0!==(e=4186112&a)?(Ge=6,e):0!==(e=62914560&a)?(Ge=5,e):67108864&a?(Ge=4,67108864):0!==(134217728&a)?(Ge=3,134217728):0!==(e=805306368&a)?(Ge=2,e):0!==(1073741824&a)?(Ge=1,1073741824):(Ge=8,a)}function je(a,e){var n=a.pendingLanes;if(0===n)return Ge=0;var r=0,o=0,t=a.expiredLanes,i=a.suspendedLanes,l=a.pingedLanes;if(0!==t)r=t,o=Ge=15;else if(0!==(t=134217727&n)){var u=t&~i;0!==u?(r=He(u),o=Ge):0!==(l&=t)&&(r=He(l),o=Ge)}else 0!==(t=n&~i)?(r=He(t),o=Ge):0!==l&&(r=He(l),o=Ge);if(0===r)return 0;if(r=n&((0>(r=31-We(r))?0:1<<r)<<1)-1,0!==e&&e!==r&&0===(e&i)){if(He(e),o<=Ge)return e;Ge=o}if(0!==(e=a.entangledLanes))for(a=a.entanglements,e&=r;0<e;)o=1<<(n=31-We(e)),r|=a[n],e&=~o;return r}function Oe(a){return 0!==(a=-1073741825&a.pendingLanes)?a:1073741824&a?1073741824:0}function xe(a,e){switch(a){case 15:return 1;case 14:return 2;case 12:return 0===(a=Fe(24&~e))?xe(10,e):a;case 10:return 0===(a=Fe(192&~e))?xe(8,e):a;case 8:return 0===(a=Fe(3584&~e))&&(0===(a=Fe(4186112&~e))&&(a=512)),a;case 2:return 0===(e=Fe(805306368&~e))&&(e=268435456),e}throw Error(i(358,a))}function Fe(a){return a&-a}function Ve(a){for(var e=[],n=0;31>n;n++)e.push(a);return e}function Ie(a,e,n){a.pendingLanes|=e;var r=e-1;a.suspendedLanes&=r,a.pingedLanes&=r,(a=a.eventTimes)[e=31-We(e)]=n}var We=Math.clz32?Math.clz32:function(a){return 0===a?32:31-(_e(a)/Je|0)|0},_e=Math.log,Je=Math.LN2;var Ue=t.unstable_UserBlockingPriority,Ze=t.unstable_runWithPriority,Ye=!0;function qe(a,e,n,r){Ha||Da();var o=Xe,t=Ha;Ha=!0;try{Ra(o,a,e,n,r)}finally{(Ha=t)||Oa()}}function Qe(a,e,n,r){Ze(Ue,Xe.bind(null,a,e,n,r))}function Xe(a,e,n,r){var o;if(Ye)if((o=0===(4&e))&&0<ie.length&&-1<ge.indexOf(a))a=me(null,a,e,n,r),ie.push(a);else{var t=$e(a,e,n,r);if(null===t)o&&fe(a,r);else{if(o){if(-1<ge.indexOf(a))return a=me(t,a,e,n,r),void ie.push(a);if(function(a,e,n,r,o){switch(e){case"focusin":return le=pe(le,a,e,n,r,o),!0;case"dragenter":return ue=pe(ue,a,e,n,r,o),!0;case"mouseover":return se=pe(se,a,e,n,r,o),!0;case"pointerover":var t=o.pointerId;return de.set(t,pe(de.get(t)||null,a,e,n,r,o)),!0;case"gotpointercapture":return t=o.pointerId,he.set(t,pe(he.get(t)||null,a,e,n,r,o)),!0}return!1}(t,a,e,n,r))return;fe(a,r)}Nr(a,e,r,null,n)}}}function $e(a,e,n,r){var o=Pa(r);if(null!==(o=$r(o))){var t=qa(o);if(null===t)o=null;else{var i=t.tag;if(13===i){if(null!==(o=Qa(t)))return o;o=null}else if(3===i){if(t.stateNode.hydrate)return 3===t.tag?t.stateNode.containerInfo:null;o=null}else t!==o&&(o=null)}}return Nr(a,e,r,o,n),null}var an=null,en=null,nn=null;function rn(){if(nn)return nn;var a,e,n=en,r=n.length,o="value"in an?an.value:an.textContent,t=o.length;for(a=0;a<r&&n[a]===o[a];a++);var i=r-a;for(e=1;e<=i&&n[r-e]===o[t-e];e++);return nn=o.slice(a,1<e?1-e:void 0)}function on(a){var e=a.keyCode;return"charCode"in a?0===(a=a.charCode)&&13===e&&(a=13):a=e,10===a&&(a=13),32<=a||13===a?a:0}function tn(){return!0}function ln(){return!1}function un(a){function e(e,n,r,o,t){for(var i in this._reactName=e,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=t,this.currentTarget=null,a)a.hasOwnProperty(i)&&(e=a[i],this[i]=e?e(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?tn:ln,this.isPropagationStopped=ln,this}return o(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=tn)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=tn)},persist:function(){},isPersistent:tn}),e}var sn,dn,hn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},gn=un(cn),mn=o({},cn,{view:0,detail:0}),fn=un(mn),pn=o({},mn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:An,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){return"movementX"in a?a.movementX:(a!==hn&&(hn&&"mousemove"===a.type?(sn=a.screenX-hn.screenX,dn=a.screenY-hn.screenY):dn=sn=0,hn=a),sn)},movementY:function(a){return"movementY"in a?a.movementY:dn}}),yn=un(pn),kn=un(o({},pn,{dataTransfer:0})),bn=un(o({},mn,{relatedTarget:0})),vn=un(o({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),Sn=un(o({},cn,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}})),Cn=un(o({},cn,{data:0})),Mn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Bn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pn(a){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(a):!!(a=Bn[a])&&!!e[a]}function An(){return Pn}var Tn=un(o({},mn,{key:function(a){if(a.key){var e=Mn[a.key]||a.key;if("Unidentified"!==e)return e}return"keypress"===a.type?13===(a=on(a))?"Enter":String.fromCharCode(a):"keydown"===a.type||"keyup"===a.type?wn[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:An,charCode:function(a){return"keypress"===a.type?on(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?on(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}})),Kn=un(o({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ln=un(o({},mn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:An})),zn=un(o({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nn=un(o({},pn,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0})),En=[9,13,27,32],Rn=h&&"CompositionEvent"in window,Dn=null;h&&"documentMode"in document&&(Dn=document.documentMode);var Gn=h&&"TextEvent"in window&&!Dn,Hn=h&&(!Rn||Dn&&8<Dn&&11>=Dn),jn=String.fromCharCode(32),On=!1;function xn(a,e){switch(a){case"keyup":return-1!==En.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Fn(a){return"object"===typeof(a=a.detail)&&"data"in a?a.data:null}var Vn=!1;var In={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wn(a){var e=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===e?!!In[a.type]:"textarea"===e}function _n(a,e,n,r){za(r),0<(e=Rr(e,"onChange")).length&&(n=new gn("onChange","change",null,n,r),a.push({event:n,listeners:e}))}var Jn=null,Un=null;function Zn(a){Pr(a,0)}function Yn(a){if(Q(eo(a)))return a}function qn(a,e){if("change"===a)return e}var Qn=!1;if(h){var Xn;if(h){var $n="oninput"in document;if(!$n){var ar=document.createElement("div");ar.setAttribute("oninput","return;"),$n="function"===typeof ar.oninput}Xn=$n}else Xn=!1;Qn=Xn&&(!document.documentMode||9<document.documentMode)}function er(){Jn&&(Jn.detachEvent("onpropertychange",nr),Un=Jn=null)}function nr(a){if("value"===a.propertyName&&Yn(Un)){var e=[];if(_n(e,Un,a,Pa(a)),a=Zn,Ha)a(e);else{Ha=!0;try{Ea(a,e)}finally{Ha=!1,Oa()}}}}function rr(a,e,n){"focusin"===a?(er(),Un=n,(Jn=e).attachEvent("onpropertychange",nr)):"focusout"===a&&er()}function or(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Yn(Un)}function tr(a,e){if("click"===a)return Yn(e)}function ir(a,e){if("input"===a||"change"===a)return Yn(e)}var lr="function"===typeof Object.is?Object.is:function(a,e){return a===e&&(0!==a||1/a===1/e)||a!==a&&e!==e},ur=Object.prototype.hasOwnProperty;function sr(a,e){if(lr(a,e))return!0;if("object"!==typeof a||null===a||"object"!==typeof e||null===e)return!1;var n=Object.keys(a),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ur.call(e,n[r])||!lr(a[n[r]],e[n[r]]))return!1;return!0}function dr(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function hr(a,e){var n,r=dr(a);for(a=0;r;){if(3===r.nodeType){if(n=a+r.textContent.length,a<=e&&n>=e)return{node:r,offset:e-a};a=n}a:{for(;r;){if(r.nextSibling){r=r.nextSibling;break a}r=r.parentNode}r=void 0}r=dr(r)}}function cr(a,e){return!(!a||!e)&&(a===e||(!a||3!==a.nodeType)&&(e&&3===e.nodeType?cr(a,e.parentNode):"contains"in a?a.contains(e):!!a.compareDocumentPosition&&!!(16&a.compareDocumentPosition(e))))}function gr(){for(var a=window,e=X();e instanceof a.HTMLIFrameElement;){try{var n="string"===typeof e.contentWindow.location.href}catch(r){n=!1}if(!n)break;e=X((a=e.contentWindow).document)}return e}function mr(a){var e=a&&a.nodeName&&a.nodeName.toLowerCase();return e&&("input"===e&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===e||"true"===a.contentEditable)}var fr=h&&"documentMode"in document&&11>=document.documentMode,pr=null,yr=null,kr=null,br=!1;function vr(a,e,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==pr||pr!==X(r)||("selectionStart"in(r=pr)&&mr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},kr&&sr(kr,r)||(kr=r,0<(r=Rr(yr,"onSelect")).length&&(e=new gn("onSelect","select",null,e,n),a.push({event:e,listeners:r}),e.target=pr)))}De("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),De("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),De(Re,2);for(var Sr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Cr=0;Cr<Sr.length;Cr++)Ee.set(Sr[Cr],0);d("onMouseEnter",["mouseout","mouseover"]),d("onMouseLeave",["mouseout","mouseover"]),d("onPointerEnter",["pointerout","pointerover"]),d("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Mr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),wr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Mr));function Br(a,e,n){var r=a.type||"unknown-event";a.currentTarget=n,function(a,e,n,r,o,t,l,u,s){if(Ya.apply(this,arguments),Wa){if(!Wa)throw Error(i(198));var d=_a;Wa=!1,_a=null,Ja||(Ja=!0,Ua=d)}}(r,e,void 0,a),a.currentTarget=null}function Pr(a,e){e=0!==(4&e);for(var n=0;n<a.length;n++){var r=a[n],o=r.event;r=r.listeners;a:{var t=void 0;if(e)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==t&&o.isPropagationStopped())break a;Br(o,l,s),t=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==t&&o.isPropagationStopped())break a;Br(o,l,s),t=u}}}if(Ja)throw a=Ua,Ja=!1,Ua=null,a}function Ar(a,e){var n=ro(e),r=a+"__bubble";n.has(r)||(zr(e,a,2,!1),n.add(r))}var Tr="_reactListening"+Math.random().toString(36).slice(2);function Kr(a){a[Tr]||(a[Tr]=!0,l.forEach((function(e){wr.has(e)||Lr(e,!1,a,null),Lr(e,!0,a,null)})))}function Lr(a,e,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,t=n;if("selectionchange"===a&&9!==n.nodeType&&(t=n.ownerDocument),null!==r&&!e&&wr.has(a)){if("scroll"!==a)return;o|=2,t=r}var i=ro(t),l=a+"__"+(e?"capture":"bubble");i.has(l)||(e&&(o|=4),zr(t,a,o,e),i.add(l))}function zr(a,e,n,r){var o=Ee.get(e);switch(void 0===o?2:o){case 0:o=qe;break;case 1:o=Qe;break;default:o=Xe}n=o.bind(null,e,n,a),o=void 0,!Fa||"touchstart"!==e&&"touchmove"!==e&&"wheel"!==e||(o=!0),r?void 0!==o?a.addEventListener(e,n,{capture:!0,passive:o}):a.addEventListener(e,n,!0):void 0!==o?a.addEventListener(e,n,{passive:o}):a.addEventListener(e,n,!1)}function Nr(a,e,n,r,o){var t=r;if(0===(1&e)&&0===(2&e)&&null!==r)a:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=$r(l)))return;if(5===(u=i.tag)||6===u){r=t=i;continue a}l=l.parentNode}}r=r.return}!function(a,e,n){if(ja)return a(e,n);ja=!0;try{Ga(a,e,n)}finally{ja=!1,Oa()}}((function(){var r=t,o=Pa(n),i=[];a:{var l=Ne.get(a);if(void 0!==l){var u=gn,s=a;switch(a){case"keypress":if(0===on(n))break a;case"keydown":case"keyup":u=Tn;break;case"focusin":s="focus",u=bn;break;case"focusout":s="blur",u=bn;break;case"beforeblur":case"afterblur":u=bn;break;case"click":if(2===n.button)break a;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=yn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=kn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Ln;break;case Te:case Ke:case Le:u=vn;break;case ze:u=zn;break;case"scroll":u=fn;break;case"wheel":u=Nn;break;case"copy":case"cut":case"paste":u=Sn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Kn}var d=0!==(4&e),h=!d&&"scroll"===a,c=d?null!==l?l+"Capture":null:l;d=[];for(var g,m=r;null!==m;){var f=(g=m).stateNode;if(5===g.tag&&null!==f&&(g=f,null!==c&&(null!=(f=xa(m,c))&&d.push(Er(m,f,g)))),h)break;m=m.return}0<d.length&&(l=new u(l,s,null,n,o),i.push({event:l,listeners:d}))}}if(0===(7&e)){if(u="mouseout"===a||"pointerout"===a,(!(l="mouseover"===a||"pointerover"===a)||0!==(16&e)||!(s=n.relatedTarget||n.fromElement)||!$r(s)&&!s[Qr])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?$r(s):null)&&(s!==(h=qa(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(d=yn,f="onMouseLeave",c="onMouseEnter",m="mouse","pointerout"!==a&&"pointerover"!==a||(d=Kn,f="onPointerLeave",c="onPointerEnter",m="pointer"),h=null==u?l:eo(u),g=null==s?l:eo(s),(l=new d(f,m+"leave",u,n,o)).target=h,l.relatedTarget=g,f=null,$r(o)===r&&((d=new d(c,m+"enter",s,n,o)).target=g,d.relatedTarget=h,f=d),h=f,u&&s)a:{for(c=s,m=0,g=d=u;g;g=Dr(g))m++;for(g=0,f=c;f;f=Dr(f))g++;for(;0<m-g;)d=Dr(d),m--;for(;0<g-m;)c=Dr(c),g--;for(;m--;){if(d===c||null!==c&&d===c.alternate)break a;d=Dr(d),c=Dr(c)}d=null}else d=null;null!==u&&Gr(i,l,u,d,!1),null!==s&&null!==h&&Gr(i,h,s,d,!0)}if("select"===(u=(l=r?eo(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var p=qn;else if(Wn(l))if(Qn)p=ir;else{p=or;var y=rr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(p=tr);switch(p&&(p=p(a,r))?_n(i,p,n,o):(y&&y(a,l,r),"focusout"===a&&(y=l._wrapperState)&&y.controlled&&"number"===l.type&&oa(l,"number",l.value)),y=r?eo(r):window,a){case"focusin":(Wn(y)||"true"===y.contentEditable)&&(pr=y,yr=r,kr=null);break;case"focusout":kr=yr=pr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,vr(i,n,o);break;case"selectionchange":if(fr)break;case"keydown":case"keyup":vr(i,n,o)}var k;if(Rn)a:{switch(a){case"compositionstart":var b="onCompositionStart";break a;case"compositionend":b="onCompositionEnd";break a;case"compositionupdate":b="onCompositionUpdate";break a}b=void 0}else Vn?xn(a,n)&&(b="onCompositionEnd"):"keydown"===a&&229===n.keyCode&&(b="onCompositionStart");b&&(Hn&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Vn&&(k=rn()):(en="value"in(an=o)?an.value:an.textContent,Vn=!0)),0<(y=Rr(r,b)).length&&(b=new Cn(b,a,null,n,o),i.push({event:b,listeners:y}),k?b.data=k:null!==(k=Fn(n))&&(b.data=k))),(k=Gn?function(a,e){switch(a){case"compositionend":return Fn(e);case"keypress":return 32!==e.which?null:(On=!0,jn);case"textInput":return(a=e.data)===jn&&On?null:a;default:return null}}(a,n):function(a,e){if(Vn)return"compositionend"===a||!Rn&&xn(a,e)?(a=rn(),nn=en=an=null,Vn=!1,a):null;switch(a){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return Hn&&"ko"!==e.locale?null:e.data;default:return null}}(a,n))&&(0<(r=Rr(r,"onBeforeInput")).length&&(o=new Cn("onBeforeInput","beforeinput",null,n,o),i.push({event:o,listeners:r}),o.data=k))}Pr(i,e)}))}function Er(a,e,n){return{instance:a,listener:e,currentTarget:n}}function Rr(a,e){for(var n=e+"Capture",r=[];null!==a;){var o=a,t=o.stateNode;5===o.tag&&null!==t&&(o=t,null!=(t=xa(a,n))&&r.unshift(Er(a,t,o)),null!=(t=xa(a,e))&&r.push(Er(a,t,o))),a=a.return}return r}function Dr(a){if(null===a)return null;do{a=a.return}while(a&&5!==a.tag);return a||null}function Gr(a,e,n,r,o){for(var t=e._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,o?null!=(u=xa(n,t))&&i.unshift(Er(n,u,l)):o||null!=(u=xa(n,t))&&i.push(Er(n,u,l))),n=n.return}0!==i.length&&a.push({event:e,listeners:i})}function Hr(){}var jr=null,Or=null;function xr(a,e){switch(a){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function Fr(a,e){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof e.children||"number"===typeof e.children||"object"===typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var Vr="function"===typeof setTimeout?setTimeout:void 0,Ir="function"===typeof clearTimeout?clearTimeout:void 0;function Wr(a){1===a.nodeType?a.textContent="":9===a.nodeType&&(null!=(a=a.body)&&(a.textContent=""))}function _r(a){for(;null!=a;a=a.nextSibling){var e=a.nodeType;if(1===e||3===e)break}return a}function Jr(a){a=a.previousSibling;for(var e=0;a;){if(8===a.nodeType){var n=a.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return a;e--}else"/$"===n&&e++}a=a.previousSibling}return null}var Ur=0;var Zr=Math.random().toString(36).slice(2),Yr="__reactFiber$"+Zr,qr="__reactProps$"+Zr,Qr="__reactContainer$"+Zr,Xr="__reactEvents$"+Zr;function $r(a){var e=a[Yr];if(e)return e;for(var n=a.parentNode;n;){if(e=n[Qr]||n[Yr]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(a=Jr(a);null!==a;){if(n=a[Yr])return n;a=Jr(a)}return e}n=(a=n).parentNode}return null}function ao(a){return!(a=a[Yr]||a[Qr])||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function eo(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(i(33))}function no(a){return a[qr]||null}function ro(a){var e=a[Xr];return void 0===e&&(e=a[Xr]=new Set),e}var oo=[],to=-1;function io(a){return{current:a}}function lo(a){0>to||(a.current=oo[to],oo[to]=null,to--)}function uo(a,e){to++,oo[to]=a.current,a.current=e}var so={},ho=io(so),co=io(!1),go=so;function mo(a,e){var n=a.type.contextTypes;if(!n)return so;var r=a.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var o,t={};for(o in n)t[o]=e[o];return r&&((a=a.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=t),t}function fo(a){return null!==(a=a.childContextTypes)&&void 0!==a}function po(){lo(co),lo(ho)}function yo(a,e,n){if(ho.current!==so)throw Error(i(168));uo(ho,e),uo(co,n)}function ko(a,e,n){var r=a.stateNode;if(a=e.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var t in r=r.getChildContext())if(!(t in a))throw Error(i(108,U(e)||"Unknown",t));return o({},n,r)}function bo(a){return a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||so,go=ho.current,uo(ho,a),uo(co,co.current),!0}function vo(a,e,n){var r=a.stateNode;if(!r)throw Error(i(169));n?(a=ko(a,e,go),r.__reactInternalMemoizedMergedChildContext=a,lo(co),lo(ho),uo(ho,a)):lo(co),uo(co,n)}var So=null,Co=null,Mo=t.unstable_runWithPriority,wo=t.unstable_scheduleCallback,Bo=t.unstable_cancelCallback,Po=t.unstable_shouldYield,Ao=t.unstable_requestPaint,To=t.unstable_now,Ko=t.unstable_getCurrentPriorityLevel,Lo=t.unstable_ImmediatePriority,zo=t.unstable_UserBlockingPriority,No=t.unstable_NormalPriority,Eo=t.unstable_LowPriority,Ro=t.unstable_IdlePriority,Do={},Go=void 0!==Ao?Ao:function(){},Ho=null,jo=null,Oo=!1,xo=To(),Fo=1e4>xo?To:function(){return To()-xo};function Vo(){switch(Ko()){case Lo:return 99;case zo:return 98;case No:return 97;case Eo:return 96;case Ro:return 95;default:throw Error(i(332))}}function Io(a){switch(a){case 99:return Lo;case 98:return zo;case 97:return No;case 96:return Eo;case 95:return Ro;default:throw Error(i(332))}}function Wo(a,e){return a=Io(a),Mo(a,e)}function _o(a,e,n){return a=Io(a),wo(a,e,n)}function Jo(){if(null!==jo){var a=jo;jo=null,Bo(a)}Uo()}function Uo(){if(!Oo&&null!==Ho){Oo=!0;var a=0;try{var e=Ho;Wo(99,(function(){for(;a<e.length;a++){var n=e[a];do{n=n(!0)}while(null!==n)}})),Ho=null}catch(n){throw null!==Ho&&(Ho=Ho.slice(a+1)),wo(Lo,Jo),n}finally{Oo=!1}}}var Zo=S.ReactCurrentBatchConfig;function Yo(a,e){if(a&&a.defaultProps){for(var n in e=o({},e),a=a.defaultProps)void 0===e[n]&&(e[n]=a[n]);return e}return e}var qo=io(null),Qo=null,Xo=null,$o=null;function at(){$o=Xo=Qo=null}function et(a){var e=qo.current;lo(qo),a.type._context._currentValue=e}function nt(a,e){for(;null!==a;){var n=a.alternate;if((a.childLanes&e)===e){if(null===n||(n.childLanes&e)===e)break;n.childLanes|=e}else a.childLanes|=e,null!==n&&(n.childLanes|=e);a=a.return}}function rt(a,e){Qo=a,$o=Xo=null,null!==(a=a.dependencies)&&null!==a.firstContext&&(0!==(a.lanes&e)&&(Ri=!0),a.firstContext=null)}function ot(a,e){if($o!==a&&!1!==e&&0!==e)if("number"===typeof e&&1073741823!==e||($o=a,e=1073741823),e={context:a,observedBits:e,next:null},null===Xo){if(null===Qo)throw Error(i(308));Xo=e,Qo.dependencies={lanes:0,firstContext:e,responders:null}}else Xo=Xo.next=e;return a._currentValue}var tt=!1;function it(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function lt(a,e){a=a.updateQueue,e.updateQueue===a&&(e.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ut(a,e){return{eventTime:a,lane:e,tag:0,payload:null,callback:null,next:null}}function st(a,e){if(null!==(a=a.updateQueue)){var n=(a=a.shared).pending;null===n?e.next=e:(e.next=n.next,n.next=e),a.pending=e}}function dt(a,e){var n=a.updateQueue,r=a.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,t=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===t?o=t=i:t=t.next=i,n=n.next}while(null!==n);null===t?o=t=e:t=t.next=e}else o=t=e;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:t,shared:r.shared,effects:r.effects},void(a.updateQueue=n)}null===(a=n.lastBaseUpdate)?n.firstBaseUpdate=e:a.next=e,n.lastBaseUpdate=e}function ht(a,e,n,r){var t=a.updateQueue;tt=!1;var i=t.firstBaseUpdate,l=t.lastBaseUpdate,u=t.shared.pending;if(null!==u){t.shared.pending=null;var s=u,d=s.next;s.next=null,null===l?i=d:l.next=d,l=s;var h=a.alternate;if(null!==h){var c=(h=h.updateQueue).lastBaseUpdate;c!==l&&(null===c?h.firstBaseUpdate=d:c.next=d,h.lastBaseUpdate=s)}}if(null!==i){for(c=t.baseState,l=0,h=d=s=null;;){u=i.lane;var g=i.eventTime;if((r&u)===u){null!==h&&(h=h.next={eventTime:g,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});a:{var m=a,f=i;switch(u=e,g=n,f.tag){case 1:if("function"===typeof(m=f.payload)){c=m.call(g,c,u);break a}c=m;break a;case 3:m.flags=-4097&m.flags|64;case 0:if(null===(u="function"===typeof(m=f.payload)?m.call(g,c,u):m)||void 0===u)break a;c=o({},c,u);break a;case 2:tt=!0}}null!==i.callback&&(a.flags|=32,null===(u=t.effects)?t.effects=[i]:u.push(i))}else g={eventTime:g,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===h?(d=h=g,s=c):h=h.next=g,l|=u;if(null===(i=i.next)){if(null===(u=t.shared.pending))break;i=u.next,u.next=null,t.lastBaseUpdate=u,t.shared.pending=null}}null===h&&(s=c),t.baseState=s,t.firstBaseUpdate=d,t.lastBaseUpdate=h,jl|=l,a.lanes=l,a.memoizedState=c}}function ct(a,e,n){if(a=e.effects,e.effects=null,null!==a)for(e=0;e<a.length;e++){var r=a[e],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!==typeof o)throw Error(i(191,o));o.call(r)}}}var gt=(new r.Component).refs;function mt(a,e,n,r){n=null===(n=n(r,e=a.memoizedState))||void 0===n?e:o({},e,n),a.memoizedState=n,0===a.lanes&&(a.updateQueue.baseState=n)}var ft={isMounted:function(a){return!!(a=a._reactInternals)&&qa(a)===a},enqueueSetState:function(a,e,n){a=a._reactInternals;var r=su(),o=du(a),t=ut(r,o);t.payload=e,void 0!==n&&null!==n&&(t.callback=n),st(a,t),hu(a,o,r)},enqueueReplaceState:function(a,e,n){a=a._reactInternals;var r=su(),o=du(a),t=ut(r,o);t.tag=1,t.payload=e,void 0!==n&&null!==n&&(t.callback=n),st(a,t),hu(a,o,r)},enqueueForceUpdate:function(a,e){a=a._reactInternals;var n=su(),r=du(a),o=ut(n,r);o.tag=2,void 0!==e&&null!==e&&(o.callback=e),st(a,o),hu(a,r,n)}};function pt(a,e,n,r,o,t,i){return"function"===typeof(a=a.stateNode).shouldComponentUpdate?a.shouldComponentUpdate(r,t,i):!e.prototype||!e.prototype.isPureReactComponent||(!sr(n,r)||!sr(o,t))}function yt(a,e,n){var r=!1,o=so,t=e.contextType;return"object"===typeof t&&null!==t?t=ot(t):(o=fo(e)?go:ho.current,t=(r=null!==(r=e.contextTypes)&&void 0!==r)?mo(a,o):so),e=new e(n,t),a.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=ft,a.stateNode=e,e._reactInternals=a,r&&((a=a.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,a.__reactInternalMemoizedMaskedChildContext=t),e}function kt(a,e,n,r){a=e.state,"function"===typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,r),"function"===typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==a&&ft.enqueueReplaceState(e,e.state,null)}function bt(a,e,n,r){var o=a.stateNode;o.props=n,o.state=a.memoizedState,o.refs=gt,it(a);var t=e.contextType;"object"===typeof t&&null!==t?o.context=ot(t):(t=fo(e)?go:ho.current,o.context=mo(a,t)),ht(a,n,o,r),o.state=a.memoizedState,"function"===typeof(t=e.getDerivedStateFromProps)&&(mt(a,e,t,n),o.state=a.memoizedState),"function"===typeof e.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(e=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),e!==o.state&&ft.enqueueReplaceState(o,o.state,null),ht(a,n,o,r),o.state=a.memoizedState),"function"===typeof o.componentDidMount&&(a.flags|=4)}var vt=Array.isArray;function St(a,e,n){if(null!==(a=n.ref)&&"function"!==typeof a&&"object"!==typeof a){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,a));var o=""+a;return null!==e&&null!==e.ref&&"function"===typeof e.ref&&e.ref._stringRef===o?e.ref:((e=function(a){var e=r.refs;e===gt&&(e=r.refs={}),null===a?delete e[o]:e[o]=a})._stringRef=o,e)}if("string"!==typeof a)throw Error(i(284));if(!n._owner)throw Error(i(290,a))}return a}function Ct(a,e){if("textarea"!==a.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e))}function Mt(a){function e(e,n){if(a){var r=e.lastEffect;null!==r?(r.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!a)return null;for(;null!==r;)e(n,r),r=r.sibling;return null}function r(a,e){for(a=new Map;null!==e;)null!==e.key?a.set(e.key,e):a.set(e.index,e),e=e.sibling;return a}function o(a,e){return(a=Iu(a,e)).index=0,a.sibling=null,a}function t(e,n,r){return e.index=r,a?null!==(r=e.alternate)?(r=r.index)<n?(e.flags=2,n):r:(e.flags=2,n):n}function l(e){return a&&null===e.alternate&&(e.flags=2),e}function u(a,e,n,r){return null===e||6!==e.tag?((e=Uu(n,a.mode,r)).return=a,e):((e=o(e,n)).return=a,e)}function s(a,e,n,r){return null!==e&&e.elementType===n.type?((r=o(e,n.props)).ref=St(a,e,n),r.return=a,r):((r=Wu(n.type,n.key,n.props,null,a.mode,r)).ref=St(a,e,n),r.return=a,r)}function d(a,e,n,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Zu(n,a.mode,r)).return=a,e):((e=o(e,n.children||[])).return=a,e)}function h(a,e,n,r,t){return null===e||7!==e.tag?((e=_u(n,a.mode,r,t)).return=a,e):((e=o(e,n)).return=a,e)}function c(a,e,n){if("string"===typeof e||"number"===typeof e)return(e=Uu(""+e,a.mode,n)).return=a,e;if("object"===typeof e&&null!==e){switch(e.$$typeof){case C:return(n=Wu(e.type,e.key,e.props,null,a.mode,n)).ref=St(a,null,e),n.return=a,n;case M:return(e=Zu(e,a.mode,n)).return=a,e}if(vt(e)||V(e))return(e=_u(e,a.mode,n,null)).return=a,e;Ct(a,e)}return null}function g(a,e,n,r){var o=null!==e?e.key:null;if("string"===typeof n||"number"===typeof n)return null!==o?null:u(a,e,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case C:return n.key===o?n.type===w?h(a,e,n.props.children,r,o):s(a,e,n,r):null;case M:return n.key===o?d(a,e,n,r):null}if(vt(n)||V(n))return null!==o?null:h(a,e,n,r,null);Ct(a,n)}return null}function m(a,e,n,r,o){if("string"===typeof r||"number"===typeof r)return u(e,a=a.get(n)||null,""+r,o);if("object"===typeof r&&null!==r){switch(r.$$typeof){case C:return a=a.get(null===r.key?n:r.key)||null,r.type===w?h(e,a,r.props.children,o,r.key):s(e,a,r,o);case M:return d(e,a=a.get(null===r.key?n:r.key)||null,r,o)}if(vt(r)||V(r))return h(e,a=a.get(n)||null,r,o,null);Ct(e,r)}return null}function f(o,i,l,u){for(var s=null,d=null,h=i,f=i=0,p=null;null!==h&&f<l.length;f++){h.index>f?(p=h,h=null):p=h.sibling;var y=g(o,h,l[f],u);if(null===y){null===h&&(h=p);break}a&&h&&null===y.alternate&&e(o,h),i=t(y,i,f),null===d?s=y:d.sibling=y,d=y,h=p}if(f===l.length)return n(o,h),s;if(null===h){for(;f<l.length;f++)null!==(h=c(o,l[f],u))&&(i=t(h,i,f),null===d?s=h:d.sibling=h,d=h);return s}for(h=r(o,h);f<l.length;f++)null!==(p=m(h,o,f,l[f],u))&&(a&&null!==p.alternate&&h.delete(null===p.key?f:p.key),i=t(p,i,f),null===d?s=p:d.sibling=p,d=p);return a&&h.forEach((function(a){return e(o,a)})),s}function p(o,l,u,s){var d=V(u);if("function"!==typeof d)throw Error(i(150));if(null==(u=d.call(u)))throw Error(i(151));for(var h=d=null,f=l,p=l=0,y=null,k=u.next();null!==f&&!k.done;p++,k=u.next()){f.index>p?(y=f,f=null):y=f.sibling;var b=g(o,f,k.value,s);if(null===b){null===f&&(f=y);break}a&&f&&null===b.alternate&&e(o,f),l=t(b,l,p),null===h?d=b:h.sibling=b,h=b,f=y}if(k.done)return n(o,f),d;if(null===f){for(;!k.done;p++,k=u.next())null!==(k=c(o,k.value,s))&&(l=t(k,l,p),null===h?d=k:h.sibling=k,h=k);return d}for(f=r(o,f);!k.done;p++,k=u.next())null!==(k=m(f,o,p,k.value,s))&&(a&&null!==k.alternate&&f.delete(null===k.key?p:k.key),l=t(k,l,p),null===h?d=k:h.sibling=k,h=k);return a&&f.forEach((function(a){return e(o,a)})),d}return function(a,r,t,u){var s="object"===typeof t&&null!==t&&t.type===w&&null===t.key;s&&(t=t.props.children);var d="object"===typeof t&&null!==t;if(d)switch(t.$$typeof){case C:a:{for(d=t.key,s=r;null!==s;){if(s.key===d){switch(s.tag){case 7:if(t.type===w){n(a,s.sibling),(r=o(s,t.props.children)).return=a,a=r;break a}break;default:if(s.elementType===t.type){n(a,s.sibling),(r=o(s,t.props)).ref=St(a,s,t),r.return=a,a=r;break a}}n(a,s);break}e(a,s),s=s.sibling}t.type===w?((r=_u(t.props.children,a.mode,u,t.key)).return=a,a=r):((u=Wu(t.type,t.key,t.props,null,a.mode,u)).ref=St(a,r,t),u.return=a,a=u)}return l(a);case M:a:{for(s=t.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===t.containerInfo&&r.stateNode.implementation===t.implementation){n(a,r.sibling),(r=o(r,t.children||[])).return=a,a=r;break a}n(a,r);break}e(a,r),r=r.sibling}(r=Zu(t,a.mode,u)).return=a,a=r}return l(a)}if("string"===typeof t||"number"===typeof t)return t=""+t,null!==r&&6===r.tag?(n(a,r.sibling),(r=o(r,t)).return=a,a=r):(n(a,r),(r=Uu(t,a.mode,u)).return=a,a=r),l(a);if(vt(t))return f(a,r,t,u);if(V(t))return p(a,r,t,u);if(d&&Ct(a,t),"undefined"===typeof t&&!s)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,U(a.type)||"Component"))}return n(a,r)}}var wt=Mt(!0),Bt=Mt(!1),Pt={},At=io(Pt),Tt=io(Pt),Kt=io(Pt);function Lt(a){if(a===Pt)throw Error(i(174));return a}function zt(a,e){switch(uo(Kt,e),uo(Tt,a),uo(At,Pt),a=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:ma(null,"");break;default:e=ma(e=(a=8===a?e.parentNode:e).namespaceURI||null,a=a.tagName)}lo(At),uo(At,e)}function Nt(){lo(At),lo(Tt),lo(Kt)}function Et(a){Lt(Kt.current);var e=Lt(At.current),n=ma(e,a.type);e!==n&&(uo(Tt,a),uo(At,n))}function Rt(a){Tt.current===a&&(lo(At),lo(Tt))}var Dt=io(0);function Gt(a){for(var e=a;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!==(64&e.flags))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Ht=null,jt=null,Ot=!1;function xt(a,e){var n=Fu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=a,n.flags=8,null!==a.lastEffect?(a.lastEffect.nextEffect=n,a.lastEffect=n):a.firstEffect=a.lastEffect=n}function Ft(a,e){switch(a.tag){case 5:var n=a.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(a.stateNode=e,!0);case 6:return null!==(e=""===a.pendingProps||3!==e.nodeType?null:e)&&(a.stateNode=e,!0);case 13:default:return!1}}function Vt(a){if(Ot){var e=jt;if(e){var n=e;if(!Ft(a,e)){if(!(e=_r(n.nextSibling))||!Ft(a,e))return a.flags=-1025&a.flags|2,Ot=!1,void(Ht=a);xt(Ht,n)}Ht=a,jt=_r(e.firstChild)}else a.flags=-1025&a.flags|2,Ot=!1,Ht=a}}function It(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Ht=a}function Wt(a){if(a!==Ht)return!1;if(!Ot)return It(a),Ot=!0,!1;var e=a.type;if(5!==a.tag||"head"!==e&&"body"!==e&&!Fr(e,a.memoizedProps))for(e=jt;e;)xt(a,e),e=_r(e.nextSibling);if(It(a),13===a.tag){if(!(a=null!==(a=a.memoizedState)?a.dehydrated:null))throw Error(i(317));a:{for(a=a.nextSibling,e=0;a;){if(8===a.nodeType){var n=a.data;if("/$"===n){if(0===e){jt=_r(a.nextSibling);break a}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}a=a.nextSibling}jt=null}}else jt=Ht?_r(a.stateNode.nextSibling):null;return!0}function _t(){jt=Ht=null,Ot=!1}var Jt=[];function Ut(){for(var a=0;a<Jt.length;a++)Jt[a]._workInProgressVersionPrimary=null;Jt.length=0}var Zt=S.ReactCurrentDispatcher,Yt=S.ReactCurrentBatchConfig,qt=0,Qt=null,Xt=null,$t=null,ai=!1,ei=!1;function ni(){throw Error(i(321))}function ri(a,e){if(null===e)return!1;for(var n=0;n<e.length&&n<a.length;n++)if(!lr(a[n],e[n]))return!1;return!0}function oi(a,e,n,r,o,t){if(qt=t,Qt=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,Zt.current=null===a||null===a.memoizedState?Li:zi,a=n(r,o),ei){t=0;do{if(ei=!1,!(25>t))throw Error(i(301));t+=1,$t=Xt=null,e.updateQueue=null,Zt.current=Ni,a=n(r,o)}while(ei)}if(Zt.current=Ki,e=null!==Xt&&null!==Xt.next,qt=0,$t=Xt=Qt=null,ai=!1,e)throw Error(i(300));return a}function ti(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===$t?Qt.memoizedState=$t=a:$t=$t.next=a,$t}function ii(){if(null===Xt){var a=Qt.alternate;a=null!==a?a.memoizedState:null}else a=Xt.next;var e=null===$t?Qt.memoizedState:$t.next;if(null!==e)$t=e,Xt=a;else{if(null===a)throw Error(i(310));a={memoizedState:(Xt=a).memoizedState,baseState:Xt.baseState,baseQueue:Xt.baseQueue,queue:Xt.queue,next:null},null===$t?Qt.memoizedState=$t=a:$t=$t.next=a}return $t}function li(a,e){return"function"===typeof e?e(a):e}function ui(a){var e=ii(),n=e.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=a;var r=Xt,o=r.baseQueue,t=n.pending;if(null!==t){if(null!==o){var l=o.next;o.next=t.next,t.next=l}r.baseQueue=o=t,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=t=null,s=o;do{var d=s.lane;if((qt&d)===d)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===a?s.eagerState:a(r,s.action);else{var h={lane:d,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=h,t=r):u=u.next=h,Qt.lanes|=d,jl|=d}s=s.next}while(null!==s&&s!==o);null===u?t=r:u.next=l,lr(r,e.memoizedState)||(Ri=!0),e.memoizedState=r,e.baseState=t,e.baseQueue=u,n.lastRenderedState=r}return[e.memoizedState,n.dispatch]}function si(a){var e=ii(),n=e.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=a;var r=n.dispatch,o=n.pending,t=e.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{t=a(t,l.action),l=l.next}while(l!==o);lr(t,e.memoizedState)||(Ri=!0),e.memoizedState=t,null===e.baseQueue&&(e.baseState=t),n.lastRenderedState=t}return[t,r]}function di(a,e,n){var r=e._getVersion;r=r(e._source);var o=e._workInProgressVersionPrimary;if(null!==o?a=o===r:(a=a.mutableReadLanes,(a=(qt&a)===a)&&(e._workInProgressVersionPrimary=r,Jt.push(e))),a)return n(e._source);throw Jt.push(e),Error(i(350))}function hi(a,e,n,r){var o=Ll;if(null===o)throw Error(i(349));var t=e._getVersion,l=t(e._source),u=Zt.current,s=u.useState((function(){return di(o,e,n)})),d=s[1],h=s[0];s=$t;var c=a.memoizedState,g=c.refs,m=g.getSnapshot,f=c.source;c=c.subscribe;var p=Qt;return a.memoizedState={refs:g,source:e,subscribe:r},u.useEffect((function(){g.getSnapshot=n,g.setSnapshot=d;var a=t(e._source);if(!lr(l,a)){a=n(e._source),lr(h,a)||(d(a),a=du(p),o.mutableReadLanes|=a&o.pendingLanes),a=o.mutableReadLanes,o.entangledLanes|=a;for(var r=o.entanglements,i=a;0<i;){var u=31-We(i),s=1<<u;r[u]|=a,i&=~s}}}),[n,e,r]),u.useEffect((function(){return r(e._source,(function(){var a=g.getSnapshot,n=g.setSnapshot;try{n(a(e._source));var r=du(p);o.mutableReadLanes|=r&o.pendingLanes}catch(t){n((function(){throw t}))}}))}),[e,r]),lr(m,n)&&lr(f,e)&&lr(c,r)||((a={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:h}).dispatch=d=Ti.bind(null,Qt,a),s.queue=a,s.baseQueue=null,h=di(o,e,n),s.memoizedState=s.baseState=h),h}function ci(a,e,n){return hi(ii(),a,e,n)}function gi(a){var e=ti();return"function"===typeof a&&(a=a()),e.memoizedState=e.baseState=a,a=(a=e.queue={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:a}).dispatch=Ti.bind(null,Qt,a),[e.memoizedState,a]}function mi(a,e,n,r){return a={tag:a,create:e,destroy:n,deps:r,next:null},null===(e=Qt.updateQueue)?(e={lastEffect:null},Qt.updateQueue=e,e.lastEffect=a.next=a):null===(n=e.lastEffect)?e.lastEffect=a.next=a:(r=n.next,n.next=a,a.next=r,e.lastEffect=a),a}function fi(a){return a={current:a},ti().memoizedState=a}function pi(){return ii().memoizedState}function yi(a,e,n,r){var o=ti();Qt.flags|=a,o.memoizedState=mi(1|e,n,void 0,void 0===r?null:r)}function ki(a,e,n,r){var o=ii();r=void 0===r?null:r;var t=void 0;if(null!==Xt){var i=Xt.memoizedState;if(t=i.destroy,null!==r&&ri(r,i.deps))return void mi(e,n,t,r)}Qt.flags|=a,o.memoizedState=mi(1|e,n,t,r)}function bi(a,e){return yi(516,4,a,e)}function vi(a,e){return ki(516,4,a,e)}function Si(a,e){return ki(4,2,a,e)}function Ci(a,e){return"function"===typeof e?(a=a(),e(a),function(){e(null)}):null!==e&&void 0!==e?(a=a(),e.current=a,function(){e.current=null}):void 0}function Mi(a,e,n){return n=null!==n&&void 0!==n?n.concat([a]):null,ki(4,2,Ci.bind(null,e,a),n)}function wi(){}function Bi(a,e){var n=ii();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&ri(e,r[1])?r[0]:(n.memoizedState=[a,e],a)}function Pi(a,e){var n=ii();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&ri(e,r[1])?r[0]:(a=a(),n.memoizedState=[a,e],a)}function Ai(a,e){var n=Vo();Wo(98>n?98:n,(function(){a(!0)})),Wo(97<n?97:n,(function(){var n=Yt.transition;Yt.transition=1;try{a(!1),e()}finally{Yt.transition=n}}))}function Ti(a,e,n){var r=su(),o=du(a),t={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},i=e.pending;if(null===i?t.next=t:(t.next=i.next,i.next=t),e.pending=t,i=a.alternate,a===Qt||null!==i&&i===Qt)ei=ai=!0;else{if(0===a.lanes&&(null===i||0===i.lanes)&&null!==(i=e.lastRenderedReducer))try{var l=e.lastRenderedState,u=i(l,n);if(t.eagerReducer=i,t.eagerState=u,lr(u,l))return}catch(s){}hu(a,o,r)}}var Ki={readContext:ot,useCallback:ni,useContext:ni,useEffect:ni,useImperativeHandle:ni,useLayoutEffect:ni,useMemo:ni,useReducer:ni,useRef:ni,useState:ni,useDebugValue:ni,useDeferredValue:ni,useTransition:ni,useMutableSource:ni,useOpaqueIdentifier:ni,unstable_isNewReconciler:!1},Li={readContext:ot,useCallback:function(a,e){return ti().memoizedState=[a,void 0===e?null:e],a},useContext:ot,useEffect:bi,useImperativeHandle:function(a,e,n){return n=null!==n&&void 0!==n?n.concat([a]):null,yi(4,2,Ci.bind(null,e,a),n)},useLayoutEffect:function(a,e){return yi(4,2,a,e)},useMemo:function(a,e){var n=ti();return e=void 0===e?null:e,a=a(),n.memoizedState=[a,e],a},useReducer:function(a,e,n){var r=ti();return e=void 0!==n?n(e):e,r.memoizedState=r.baseState=e,a=(a=r.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:e}).dispatch=Ti.bind(null,Qt,a),[r.memoizedState,a]},useRef:fi,useState:gi,useDebugValue:wi,useDeferredValue:function(a){var e=gi(a),n=e[0],r=e[1];return bi((function(){var e=Yt.transition;Yt.transition=1;try{r(a)}finally{Yt.transition=e}}),[a]),n},useTransition:function(){var a=gi(!1),e=a[0];return fi(a=Ai.bind(null,a[1])),[a,e]},useMutableSource:function(a,e,n){var r=ti();return r.memoizedState={refs:{getSnapshot:e,setSnapshot:null},source:a,subscribe:n},hi(r,a,e,n)},useOpaqueIdentifier:function(){if(Ot){var a=!1,e=function(a){return{$$typeof:D,toString:a,valueOf:a}}((function(){throw a||(a=!0,n("r:"+(Ur++).toString(36))),Error(i(355))})),n=gi(e)[1];return 0===(2&Qt.mode)&&(Qt.flags|=516,mi(5,(function(){n("r:"+(Ur++).toString(36))}),void 0,null)),e}return gi(e="r:"+(Ur++).toString(36)),e},unstable_isNewReconciler:!1},zi={readContext:ot,useCallback:Bi,useContext:ot,useEffect:vi,useImperativeHandle:Mi,useLayoutEffect:Si,useMemo:Pi,useReducer:ui,useRef:pi,useState:function(){return ui(li)},useDebugValue:wi,useDeferredValue:function(a){var e=ui(li),n=e[0],r=e[1];return vi((function(){var e=Yt.transition;Yt.transition=1;try{r(a)}finally{Yt.transition=e}}),[a]),n},useTransition:function(){var a=ui(li)[0];return[pi().current,a]},useMutableSource:ci,useOpaqueIdentifier:function(){return ui(li)[0]},unstable_isNewReconciler:!1},Ni={readContext:ot,useCallback:Bi,useContext:ot,useEffect:vi,useImperativeHandle:Mi,useLayoutEffect:Si,useMemo:Pi,useReducer:si,useRef:pi,useState:function(){return si(li)},useDebugValue:wi,useDeferredValue:function(a){var e=si(li),n=e[0],r=e[1];return vi((function(){var e=Yt.transition;Yt.transition=1;try{r(a)}finally{Yt.transition=e}}),[a]),n},useTransition:function(){var a=si(li)[0];return[pi().current,a]},useMutableSource:ci,useOpaqueIdentifier:function(){return si(li)[0]},unstable_isNewReconciler:!1},Ei=S.ReactCurrentOwner,Ri=!1;function Di(a,e,n,r){e.child=null===a?Bt(e,null,n,r):wt(e,a.child,n,r)}function Gi(a,e,n,r,o){n=n.render;var t=e.ref;return rt(e,o),r=oi(a,e,n,r,t,o),null===a||Ri?(e.flags|=1,Di(a,e,r,o),e.child):(e.updateQueue=a.updateQueue,e.flags&=-517,a.lanes&=~o,nl(a,e,o))}function Hi(a,e,n,r,o,t){if(null===a){var i=n.type;return"function"!==typeof i||Vu(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((a=Wu(n.type,null,r,e,e.mode,t)).ref=e.ref,a.return=e,e.child=a):(e.tag=15,e.type=i,ji(a,e,i,r,o,t))}return i=a.child,0===(o&t)&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:sr)(o,r)&&a.ref===e.ref)?nl(a,e,t):(e.flags|=1,(a=Iu(i,r)).ref=e.ref,a.return=e,e.child=a)}function ji(a,e,n,r,o,t){if(null!==a&&sr(a.memoizedProps,r)&&a.ref===e.ref){if(Ri=!1,0===(t&o))return e.lanes=a.lanes,nl(a,e,t);0!==(16384&a.flags)&&(Ri=!0)}return Fi(a,e,n,r,t)}function Oi(a,e,n){var r=e.pendingProps,o=r.children,t=null!==a?a.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0===(4&e.mode))e.memoizedState={baseLanes:0},bu(e,n);else{if(0===(1073741824&n))return a=null!==t?t.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:a},bu(e,a),null;e.memoizedState={baseLanes:0},bu(e,null!==t?t.baseLanes:n)}else null!==t?(r=t.baseLanes|n,e.memoizedState=null):r=n,bu(e,r);return Di(a,e,o,n),e.child}function xi(a,e){var n=e.ref;(null===a&&null!==n||null!==a&&a.ref!==n)&&(e.flags|=128)}function Fi(a,e,n,r,o){var t=fo(n)?go:ho.current;return t=mo(e,t),rt(e,o),n=oi(a,e,n,r,t,o),null===a||Ri?(e.flags|=1,Di(a,e,n,o),e.child):(e.updateQueue=a.updateQueue,e.flags&=-517,a.lanes&=~o,nl(a,e,o))}function Vi(a,e,n,r,o){if(fo(n)){var t=!0;bo(e)}else t=!1;if(rt(e,o),null===e.stateNode)null!==a&&(a.alternate=null,e.alternate=null,e.flags|=2),yt(e,n,r),bt(e,n,r,o),r=!0;else if(null===a){var i=e.stateNode,l=e.memoizedProps;i.props=l;var u=i.context,s=n.contextType;"object"===typeof s&&null!==s?s=ot(s):s=mo(e,s=fo(n)?go:ho.current);var d=n.getDerivedStateFromProps,h="function"===typeof d||"function"===typeof i.getSnapshotBeforeUpdate;h||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==r||u!==s)&&kt(e,i,r,s),tt=!1;var c=e.memoizedState;i.state=c,ht(e,r,i,o),u=e.memoizedState,l!==r||c!==u||co.current||tt?("function"===typeof d&&(mt(e,n,d,r),u=e.memoizedState),(l=tt||pt(e,n,l,r,c,u,s))?(h||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(e.flags|=4)):("function"===typeof i.componentDidMount&&(e.flags|=4),e.memoizedProps=r,e.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"===typeof i.componentDidMount&&(e.flags|=4),r=!1)}else{i=e.stateNode,lt(a,e),l=e.memoizedProps,s=e.type===e.elementType?l:Yo(e.type,l),i.props=s,h=e.pendingProps,c=i.context,"object"===typeof(u=n.contextType)&&null!==u?u=ot(u):u=mo(e,u=fo(n)?go:ho.current);var g=n.getDerivedStateFromProps;(d="function"===typeof g||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==h||c!==u)&&kt(e,i,r,u),tt=!1,c=e.memoizedState,i.state=c,ht(e,r,i,o);var m=e.memoizedState;l!==h||c!==m||co.current||tt?("function"===typeof g&&(mt(e,n,g,r),m=e.memoizedState),(s=tt||pt(e,n,s,r,c,m,u))?(d||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,m,u),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,m,u)),"function"===typeof i.componentDidUpdate&&(e.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(e.flags|=256)):("function"!==typeof i.componentDidUpdate||l===a.memoizedProps&&c===a.memoizedState||(e.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===a.memoizedProps&&c===a.memoizedState||(e.flags|=256),e.memoizedProps=r,e.memoizedState=m),i.props=r,i.state=m,i.context=u,r=s):("function"!==typeof i.componentDidUpdate||l===a.memoizedProps&&c===a.memoizedState||(e.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===a.memoizedProps&&c===a.memoizedState||(e.flags|=256),r=!1)}return Ii(a,e,n,r,t,o)}function Ii(a,e,n,r,o,t){xi(a,e);var i=0!==(64&e.flags);if(!r&&!i)return o&&vo(e,n,!1),nl(a,e,t);r=e.stateNode,Ei.current=e;var l=i&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return e.flags|=1,null!==a&&i?(e.child=wt(e,a.child,null,t),e.child=wt(e,null,l,t)):Di(a,e,l,t),e.memoizedState=r.state,o&&vo(e,n,!0),e.child}function Wi(a){var e=a.stateNode;e.pendingContext?yo(0,e.pendingContext,e.pendingContext!==e.context):e.context&&yo(0,e.context,!1),zt(a,e.containerInfo)}var _i,Ji,Ui,Zi={dehydrated:null,retryLane:0};function Yi(a,e,n){var r,o=e.pendingProps,t=Dt.current,i=!1;return(r=0!==(64&e.flags))||(r=(null===a||null!==a.memoizedState)&&0!==(2&t)),r?(i=!0,e.flags&=-65):null!==a&&null===a.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(t|=1),uo(Dt,1&t),null===a?(void 0!==o.fallback&&Vt(e),a=o.children,t=o.fallback,i?(a=qi(e,a,t,n),e.child.memoizedState={baseLanes:n},e.memoizedState=Zi,a):"number"===typeof o.unstable_expectedLoadTime?(a=qi(e,a,t,n),e.child.memoizedState={baseLanes:n},e.memoizedState=Zi,e.lanes=33554432,a):((n=Ju({mode:"visible",children:a},e.mode,n,null)).return=e,e.child=n)):(a.memoizedState,i?(o=Xi(a,e,o.children,o.fallback,n),i=e.child,t=a.child.memoizedState,i.memoizedState=null===t?{baseLanes:n}:{baseLanes:t.baseLanes|n},i.childLanes=a.childLanes&~n,e.memoizedState=Zi,o):(n=Qi(a,e,o.children,n),e.memoizedState=null,n))}function qi(a,e,n,r){var o=a.mode,t=a.child;return e={mode:"hidden",children:e},0===(2&o)&&null!==t?(t.childLanes=0,t.pendingProps=e):t=Ju(e,o,0,null),n=_u(n,o,r,null),t.return=a,n.return=a,t.sibling=n,a.child=t,n}function Qi(a,e,n,r){var o=a.child;return a=o.sibling,n=Iu(o,{mode:"visible",children:n}),0===(2&e.mode)&&(n.lanes=r),n.return=e,n.sibling=null,null!==a&&(a.nextEffect=null,a.flags=8,e.firstEffect=e.lastEffect=a),e.child=n}function Xi(a,e,n,r,o){var t=e.mode,i=a.child;a=i.sibling;var l={mode:"hidden",children:n};return 0===(2&t)&&e.child!==i?((n=e.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(e.firstEffect=n.firstEffect,e.lastEffect=i,i.nextEffect=null):e.firstEffect=e.lastEffect=null):n=Iu(i,l),null!==a?r=Iu(a,r):(r=_u(r,t,o,null)).flags|=2,r.return=e,n.return=e,n.sibling=r,e.child=n,r}function $i(a,e){a.lanes|=e;var n=a.alternate;null!==n&&(n.lanes|=e),nt(a.return,e)}function al(a,e,n,r,o,t){var i=a.memoizedState;null===i?a.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:t}:(i.isBackwards=e,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=o,i.lastEffect=t)}function el(a,e,n){var r=e.pendingProps,o=r.revealOrder,t=r.tail;if(Di(a,e,r.children,n),0!==(2&(r=Dt.current)))r=1&r|2,e.flags|=64;else{if(null!==a&&0!==(64&a.flags))a:for(a=e.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&$i(a,n);else if(19===a.tag)$i(a,n);else if(null!==a.child){a.child.return=a,a=a.child;continue}if(a===e)break a;for(;null===a.sibling;){if(null===a.return||a.return===e)break a;a=a.return}a.sibling.return=a.return,a=a.sibling}r&=1}if(uo(Dt,r),0===(2&e.mode))e.memoizedState=null;else switch(o){case"forwards":for(n=e.child,o=null;null!==n;)null!==(a=n.alternate)&&null===Gt(a)&&(o=n),n=n.sibling;null===(n=o)?(o=e.child,e.child=null):(o=n.sibling,n.sibling=null),al(e,!1,o,n,t,e.lastEffect);break;case"backwards":for(n=null,o=e.child,e.child=null;null!==o;){if(null!==(a=o.alternate)&&null===Gt(a)){e.child=o;break}a=o.sibling,o.sibling=n,n=o,o=a}al(e,!0,n,null,t,e.lastEffect);break;case"together":al(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function nl(a,e,n){if(null!==a&&(e.dependencies=a.dependencies),jl|=e.lanes,0!==(n&e.childLanes)){if(null!==a&&e.child!==a.child)throw Error(i(153));if(null!==e.child){for(n=Iu(a=e.child,a.pendingProps),e.child=n,n.return=e;null!==a.sibling;)a=a.sibling,(n=n.sibling=Iu(a,a.pendingProps)).return=e;n.sibling=null}return e.child}return null}function rl(a,e){if(!Ot)switch(a.tailMode){case"hidden":e=a.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?a.tail=null:n.sibling=null;break;case"collapsed":n=a.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?e||null===a.tail?a.tail=null:a.tail.sibling=null:r.sibling=null}}function ol(a,e,n){var r=e.pendingProps;switch(e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return fo(e.type)&&po(),null;case 3:return Nt(),lo(co),lo(ho),Ut(),(r=e.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==a&&null!==a.child||(Wt(e)?e.flags|=4:r.hydrate||(e.flags|=256)),null;case 5:Rt(e);var t=Lt(Kt.current);if(n=e.type,null!==a&&null!=e.stateNode)Ji(a,e,n,r),a.ref!==e.ref&&(e.flags|=128);else{if(!r){if(null===e.stateNode)throw Error(i(166));return null}if(a=Lt(At.current),Wt(e)){r=e.stateNode,n=e.type;var l=e.memoizedProps;switch(r[Yr]=e,r[qr]=l,n){case"dialog":Ar("cancel",r),Ar("close",r);break;case"iframe":case"object":case"embed":Ar("load",r);break;case"video":case"audio":for(a=0;a<Mr.length;a++)Ar(Mr[a],r);break;case"source":Ar("error",r);break;case"img":case"image":case"link":Ar("error",r),Ar("load",r);break;case"details":Ar("toggle",r);break;case"input":aa(r,l),Ar("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Ar("invalid",r);break;case"textarea":ua(r,l),Ar("invalid",r)}for(var s in wa(n,l),a=null,l)l.hasOwnProperty(s)&&(t=l[s],"children"===s?"string"===typeof t?r.textContent!==t&&(a=["children",t]):"number"===typeof t&&r.textContent!==""+t&&(a=["children",""+t]):u.hasOwnProperty(s)&&null!=t&&"onScroll"===s&&Ar("scroll",r));switch(n){case"input":q(r),ra(r,l,!0);break;case"textarea":q(r),da(r);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(r.onclick=Hr)}r=a,e.updateQueue=r,null!==r&&(e.flags|=4)}else{switch(s=9===t.nodeType?t:t.ownerDocument,a===ha&&(a=ga(n)),a===ha?"script"===n?((a=s.createElement("div")).innerHTML="<script><\/script>",a=a.removeChild(a.firstChild)):"string"===typeof r.is?a=s.createElement(n,{is:r.is}):(a=s.createElement(n),"select"===n&&(s=a,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):a=s.createElementNS(a,n),a[Yr]=e,a[qr]=r,_i(a,e),e.stateNode=a,s=Ba(n,r),n){case"dialog":Ar("cancel",a),Ar("close",a),t=r;break;case"iframe":case"object":case"embed":Ar("load",a),t=r;break;case"video":case"audio":for(t=0;t<Mr.length;t++)Ar(Mr[t],a);t=r;break;case"source":Ar("error",a),t=r;break;case"img":case"image":case"link":Ar("error",a),Ar("load",a),t=r;break;case"details":Ar("toggle",a),t=r;break;case"input":aa(a,r),t=$(a,r),Ar("invalid",a);break;case"option":t=ta(a,r);break;case"select":a._wrapperState={wasMultiple:!!r.multiple},t=o({},r,{value:void 0}),Ar("invalid",a);break;case"textarea":ua(a,r),t=la(a,r),Ar("invalid",a);break;default:t=r}wa(n,t);var d=t;for(l in d)if(d.hasOwnProperty(l)){var h=d[l];"style"===l?Ca(a,h):"dangerouslySetInnerHTML"===l?null!=(h=h?h.__html:void 0)&&ya(a,h):"children"===l?"string"===typeof h?("textarea"!==n||""!==h)&&ka(a,h):"number"===typeof h&&ka(a,""+h):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=h&&"onScroll"===l&&Ar("scroll",a):null!=h&&v(a,l,h,s))}switch(n){case"input":q(a),ra(a,r,!1);break;case"textarea":q(a),da(a);break;case"option":null!=r.value&&a.setAttribute("value",""+Z(r.value));break;case"select":a.multiple=!!r.multiple,null!=(l=r.value)?ia(a,!!r.multiple,l,!1):null!=r.defaultValue&&ia(a,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof t.onClick&&(a.onclick=Hr)}xr(n,r)&&(e.flags|=4)}null!==e.ref&&(e.flags|=128)}return null;case 6:if(a&&null!=e.stateNode)Ui(0,e,a.memoizedProps,r);else{if("string"!==typeof r&&null===e.stateNode)throw Error(i(166));n=Lt(Kt.current),Lt(At.current),Wt(e)?(r=e.stateNode,n=e.memoizedProps,r[Yr]=e,r.nodeValue!==n&&(e.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Yr]=e,e.stateNode=r)}return null;case 13:return lo(Dt),r=e.memoizedState,0!==(64&e.flags)?(e.lanes=n,e):(r=null!==r,n=!1,null===a?void 0!==e.memoizedProps.fallback&&Wt(e):n=null!==a.memoizedState,r&&!n&&0!==(2&e.mode)&&(null===a&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!==(1&Dt.current)?0===Dl&&(Dl=3):(0!==Dl&&3!==Dl||(Dl=4),null===Ll||0===(134217727&jl)&&0===(134217727&Ol)||fu(Ll,Nl))),(r||n)&&(e.flags|=4),null);case 4:return Nt(),null===a&&Kr(e.stateNode.containerInfo),null;case 10:return et(e),null;case 17:return fo(e.type)&&po(),null;case 19:if(lo(Dt),null===(r=e.memoizedState))return null;if(l=0!==(64&e.flags),null===(s=r.rendering))if(l)rl(r,!1);else{if(0!==Dl||null!==a&&0!==(64&a.flags))for(a=e.child;null!==a;){if(null!==(s=Gt(a))){for(e.flags|=64,rl(r,!1),null!==(l=s.updateQueue)&&(e.updateQueue=l,e.flags|=4),null===r.lastEffect&&(e.firstEffect=null),e.lastEffect=r.lastEffect,r=n,n=e.child;null!==n;)a=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=a,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,a=s.dependencies,l.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),n=n.sibling;return uo(Dt,1&Dt.current|2),e.child}a=a.sibling}null!==r.tail&&Fo()>Il&&(e.flags|=64,l=!0,rl(r,!1),e.lanes=33554432)}else{if(!l)if(null!==(a=Gt(s))){if(e.flags|=64,l=!0,null!==(n=a.updateQueue)&&(e.updateQueue=n,e.flags|=4),rl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Ot)return null!==(e=e.lastEffect=r.lastEffect)&&(e.nextEffect=null),null}else 2*Fo()-r.renderingStartTime>Il&&1073741824!==n&&(e.flags|=64,l=!0,rl(r,!1),e.lanes=33554432);r.isBackwards?(s.sibling=e.child,e.child=s):(null!==(n=r.last)?n.sibling=s:e.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=e.lastEffect,r.renderingStartTime=Fo(),n.sibling=null,e=Dt.current,uo(Dt,l?1&e|2:1&e),n):null;case 23:case 24:return vu(),null!==a&&null!==a.memoizedState!==(null!==e.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(e.flags|=4),null}throw Error(i(156,e.tag))}function tl(a){switch(a.tag){case 1:fo(a.type)&&po();var e=a.flags;return 4096&e?(a.flags=-4097&e|64,a):null;case 3:if(Nt(),lo(co),lo(ho),Ut(),0!==(64&(e=a.flags)))throw Error(i(285));return a.flags=-4097&e|64,a;case 5:return Rt(a),null;case 13:return lo(Dt),4096&(e=a.flags)?(a.flags=-4097&e|64,a):null;case 19:return lo(Dt),null;case 4:return Nt(),null;case 10:return et(a),null;case 23:case 24:return vu(),null;default:return null}}function il(a,e){try{var n="",r=e;do{n+=J(r),r=r.return}while(r);var o=n}catch(t){o="\nError generating stack: "+t.message+"\n"+t.stack}return{value:a,source:e,stack:o}}function ll(a,e){try{console.error(e.value)}catch(n){setTimeout((function(){throw n}))}}_i=function(a,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)a.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ji=function(a,e,n,r){var t=a.memoizedProps;if(t!==r){a=e.stateNode,Lt(At.current);var i,l=null;switch(n){case"input":t=$(a,t),r=$(a,r),l=[];break;case"option":t=ta(a,t),r=ta(a,r),l=[];break;case"select":t=o({},t,{value:void 0}),r=o({},r,{value:void 0}),l=[];break;case"textarea":t=la(a,t),r=la(a,r),l=[];break;default:"function"!==typeof t.onClick&&"function"===typeof r.onClick&&(a.onclick=Hr)}for(h in wa(n,r),n=null,t)if(!r.hasOwnProperty(h)&&t.hasOwnProperty(h)&&null!=t[h])if("style"===h){var s=t[h];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(u.hasOwnProperty(h)?l||(l=[]):(l=l||[]).push(h,null));for(h in r){var d=r[h];if(s=null!=t?t[h]:void 0,r.hasOwnProperty(h)&&d!==s&&(null!=d||null!=s))if("style"===h)if(s){for(i in s)!s.hasOwnProperty(i)||d&&d.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in d)d.hasOwnProperty(i)&&s[i]!==d[i]&&(n||(n={}),n[i]=d[i])}else n||(l||(l=[]),l.push(h,n)),n=d;else"dangerouslySetInnerHTML"===h?(d=d?d.__html:void 0,s=s?s.__html:void 0,null!=d&&s!==d&&(l=l||[]).push(h,d)):"children"===h?"string"!==typeof d&&"number"!==typeof d||(l=l||[]).push(h,""+d):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(u.hasOwnProperty(h)?(null!=d&&"onScroll"===h&&Ar("scroll",a),l||s===d||(l=[])):"object"===typeof d&&null!==d&&d.$$typeof===D?d.toString():(l=l||[]).push(h,d))}n&&(l=l||[]).push("style",n);var h=l;(e.updateQueue=h)&&(e.flags|=4)}},Ui=function(a,e,n,r){n!==r&&(e.flags|=4)};var ul="function"===typeof WeakMap?WeakMap:Map;function sl(a,e,n){(n=ut(-1,n)).tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Ul||(Ul=!0,Zl=r),ll(0,e)},n}function dl(a,e,n){(n=ut(-1,n)).tag=3;var r=a.type.getDerivedStateFromError;if("function"===typeof r){var o=e.value;n.payload=function(){return ll(0,e),r(o)}}var t=a.stateNode;return null!==t&&"function"===typeof t.componentDidCatch&&(n.callback=function(){"function"!==typeof r&&(null===Yl?Yl=new Set([this]):Yl.add(this),ll(0,e));var a=e.stack;this.componentDidCatch(e.value,{componentStack:null!==a?a:""})}),n}var hl="function"===typeof WeakSet?WeakSet:Set;function cl(a){var e=a.ref;if(null!==e)if("function"===typeof e)try{e(null)}catch(n){Hu(a,n)}else e.current=null}function gl(a,e){switch(e.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&e.flags&&null!==a){var n=a.memoizedProps,r=a.memoizedState;e=(a=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:Yo(e.type,n),r),a.__reactInternalSnapshotBeforeUpdate=e}return;case 3:return void(256&e.flags&&Wr(e.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function ml(a,e,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(e=null!==(e=n.updateQueue)?e.lastEffect:null)){a=e=e.next;do{if(3===(3&a.tag)){var r=a.create;a.destroy=r()}a=a.next}while(a!==e)}if(null!==(e=null!==(e=n.updateQueue)?e.lastEffect:null)){a=e=e.next;do{var o=a;r=o.next,0!==(4&(o=o.tag))&&0!==(1&o)&&(Ru(n,a),Eu(n,a)),a=r}while(a!==e)}return;case 1:return a=n.stateNode,4&n.flags&&(null===e?a.componentDidMount():(r=n.elementType===n.type?e.memoizedProps:Yo(n.type,e.memoizedProps),a.componentDidUpdate(r,e.memoizedState,a.__reactInternalSnapshotBeforeUpdate))),void(null!==(e=n.updateQueue)&&ct(n,e,a));case 3:if(null!==(e=n.updateQueue)){if(a=null,null!==n.child)switch(n.child.tag){case 5:a=n.child.stateNode;break;case 1:a=n.child.stateNode}ct(n,e,a)}return;case 5:return a=n.stateNode,void(null===e&&4&n.flags&&xr(n.type,n.memoizedProps)&&a.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Ce(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function fl(a,e){for(var n=a;;){if(5===n.tag){var r=n.stateNode;if(e)"function"===typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=void 0!==o&&null!==o&&o.hasOwnProperty("display")?o.display:null,r.style.display=Sa("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=e?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===a)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===a)break;for(;null===n.sibling;){if(null===n.return||n.return===a)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pl(a,e){if(Co&&"function"===typeof Co.onCommitFiberUnmount)try{Co.onCommitFiberUnmount(So,e)}catch(t){}switch(e.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(a=e.updateQueue)&&null!==(a=a.lastEffect)){var n=a=a.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!==(4&r))Ru(e,n);else{r=e;try{o()}catch(t){Hu(r,t)}}n=n.next}while(n!==a)}break;case 1:if(cl(e),"function"===typeof(a=e.stateNode).componentWillUnmount)try{a.props=e.memoizedProps,a.state=e.memoizedState,a.componentWillUnmount()}catch(t){Hu(e,t)}break;case 5:cl(e);break;case 4:Cl(a,e)}}function yl(a){a.alternate=null,a.child=null,a.dependencies=null,a.firstEffect=null,a.lastEffect=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.return=null,a.updateQueue=null}function kl(a){return 5===a.tag||3===a.tag||4===a.tag}function bl(a){a:{for(var e=a.return;null!==e;){if(kl(e))break a;e=e.return}throw Error(i(160))}var n=e;switch(e=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:e=e.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ka(e,""),n.flags&=-17);a:e:for(n=a;;){for(;null===n.sibling;){if(null===n.return||kl(n.return)){n=null;break a}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break a}}r?vl(a,n,e):Sl(a,n,e)}function vl(a,e,n){var r=a.tag,o=5===r||6===r;if(o)a=o?a.stateNode:a.stateNode.instance,e?8===n.nodeType?n.parentNode.insertBefore(a,e):n.insertBefore(a,e):(8===n.nodeType?(e=n.parentNode).insertBefore(a,n):(e=n).appendChild(a),null!==(n=n._reactRootContainer)&&void 0!==n||null!==e.onclick||(e.onclick=Hr));else if(4!==r&&null!==(a=a.child))for(vl(a,e,n),a=a.sibling;null!==a;)vl(a,e,n),a=a.sibling}function Sl(a,e,n){var r=a.tag,o=5===r||6===r;if(o)a=o?a.stateNode:a.stateNode.instance,e?n.insertBefore(a,e):n.appendChild(a);else if(4!==r&&null!==(a=a.child))for(Sl(a,e,n),a=a.sibling;null!==a;)Sl(a,e,n),a=a.sibling}function Cl(a,e){for(var n,r,o=e,t=!1;;){if(!t){t=o.return;a:for(;;){if(null===t)throw Error(i(160));switch(n=t.stateNode,t.tag){case 5:r=!1;break a;case 3:case 4:n=n.containerInfo,r=!0;break a}t=t.return}t=!0}if(5===o.tag||6===o.tag){a:for(var l=a,u=o,s=u;;)if(pl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break a;for(;null===s.sibling;){if(null===s.return||s.return===u)break a;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(pl(a,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;4===(o=o.return).tag&&(t=!1)}o.sibling.return=o.return,o=o.sibling}}function Ml(a,e){switch(e.tag){case 0:case 11:case 14:case 15:case 22:var n=e.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3===(3&r.tag)&&(a=r.destroy,r.destroy=void 0,void 0!==a&&a()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=e.stateNode)){r=e.memoizedProps;var o=null!==a?a.memoizedProps:r;a=e.type;var t=e.updateQueue;if(e.updateQueue=null,null!==t){for(n[qr]=r,"input"===a&&"radio"===r.type&&null!=r.name&&ea(n,r),Ba(a,o),e=Ba(a,r),o=0;o<t.length;o+=2){var l=t[o],u=t[o+1];"style"===l?Ca(n,u):"dangerouslySetInnerHTML"===l?ya(n,u):"children"===l?ka(n,u):v(n,l,u,e)}switch(a){case"input":na(n,r);break;case"textarea":sa(n,r);break;case"select":a=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(t=r.value)?ia(n,!!r.multiple,t,!1):a!==!!r.multiple&&(null!=r.defaultValue?ia(n,!!r.multiple,r.defaultValue,!0):ia(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===e.stateNode)throw Error(i(162));return void(e.stateNode.nodeValue=e.memoizedProps);case 3:return void((n=e.stateNode).hydrate&&(n.hydrate=!1,Ce(n.containerInfo)));case 12:return;case 13:return null!==e.memoizedState&&(Vl=Fo(),fl(e.child,!0)),void wl(e);case 19:return void wl(e);case 17:return;case 23:case 24:return void fl(e,null!==e.memoizedState)}throw Error(i(163))}function wl(a){var e=a.updateQueue;if(null!==e){a.updateQueue=null;var n=a.stateNode;null===n&&(n=a.stateNode=new hl),e.forEach((function(e){var r=Ou.bind(null,a,e);n.has(e)||(n.add(e),e.then(r,r))}))}}function Bl(a,e){return null!==a&&(null===(a=a.memoizedState)||null!==a.dehydrated)&&(null!==(e=e.memoizedState)&&null===e.dehydrated)}var Pl=Math.ceil,Al=S.ReactCurrentDispatcher,Tl=S.ReactCurrentOwner,Kl=0,Ll=null,zl=null,Nl=0,El=0,Rl=io(0),Dl=0,Gl=null,Hl=0,jl=0,Ol=0,xl=0,Fl=null,Vl=0,Il=1/0;function Wl(){Il=Fo()+500}var _l,Jl=null,Ul=!1,Zl=null,Yl=null,ql=!1,Ql=null,Xl=90,$l=[],au=[],eu=null,nu=0,ru=null,ou=-1,tu=0,iu=0,lu=null,uu=!1;function su(){return 0!==(48&Kl)?Fo():-1!==ou?ou:ou=Fo()}function du(a){if(0===(2&(a=a.mode)))return 1;if(0===(4&a))return 99===Vo()?1:2;if(0===tu&&(tu=Hl),0!==Zo.transition){0!==iu&&(iu=null!==Fl?Fl.pendingLanes:0),a=tu;var e=4186112&~iu;return 0===(e&=-e)&&(0===(e=(a=4186112&~a)&-a)&&(e=8192)),e}return a=Vo(),0!==(4&Kl)&&98===a?a=xe(12,tu):a=xe(a=function(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(a),tu),a}function hu(a,e,n){if(50<nu)throw nu=0,ru=null,Error(i(185));if(null===(a=cu(a,e)))return null;Ie(a,e,n),a===Ll&&(Ol|=e,4===Dl&&fu(a,Nl));var r=Vo();1===e?0!==(8&Kl)&&0===(48&Kl)?pu(a):(gu(a,n),0===Kl&&(Wl(),Jo())):(0===(4&Kl)||98!==r&&99!==r||(null===eu?eu=new Set([a]):eu.add(a)),gu(a,n)),Fl=a}function cu(a,e){a.lanes|=e;var n=a.alternate;for(null!==n&&(n.lanes|=e),n=a,a=a.return;null!==a;)a.childLanes|=e,null!==(n=a.alternate)&&(n.childLanes|=e),n=a,a=a.return;return 3===n.tag?n.stateNode:null}function gu(a,e){for(var n=a.callbackNode,r=a.suspendedLanes,o=a.pingedLanes,t=a.expirationTimes,l=a.pendingLanes;0<l;){var u=31-We(l),s=1<<u,d=t[u];if(-1===d){if(0===(s&r)||0!==(s&o)){d=e,He(s);var h=Ge;t[u]=10<=h?d+250:6<=h?d+5e3:-1}}else d<=e&&(a.expiredLanes|=s);l&=~s}if(r=je(a,a===Ll?Nl:0),e=Ge,0===r)null!==n&&(n!==Do&&Bo(n),a.callbackNode=null,a.callbackPriority=0);else{if(null!==n){if(a.callbackPriority===e)return;n!==Do&&Bo(n)}15===e?(n=pu.bind(null,a),null===Ho?(Ho=[n],jo=wo(Lo,Uo)):Ho.push(n),n=Do):14===e?n=_o(99,pu.bind(null,a)):n=_o(n=function(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,a))}}(e),mu.bind(null,a)),a.callbackPriority=e,a.callbackNode=n}}function mu(a){if(ou=-1,iu=tu=0,0!==(48&Kl))throw Error(i(327));var e=a.callbackNode;if(Nu()&&a.callbackNode!==e)return null;var n=je(a,a===Ll?Nl:0);if(0===n)return null;var r=n,o=Kl;Kl|=16;var t=Mu();for(Ll===a&&Nl===r||(Wl(),Su(a,r));;)try{Pu();break}catch(u){Cu(a,u)}if(at(),Al.current=t,Kl=o,null!==zl?r=0:(Ll=null,Nl=0,r=Dl),0!==(Hl&Ol))Su(a,0);else if(0!==r){if(2===r&&(Kl|=64,a.hydrate&&(a.hydrate=!1,Wr(a.containerInfo)),0!==(n=Oe(a))&&(r=wu(a,n))),1===r)throw e=Gl,Su(a,0),fu(a,n),gu(a,Fo()),e;switch(a.finishedWork=a.current.alternate,a.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:Ku(a);break;case 3:if(fu(a,n),(62914560&n)===n&&10<(r=Vl+500-Fo())){if(0!==je(a,0))break;if(((o=a.suspendedLanes)&n)!==n){su(),a.pingedLanes|=a.suspendedLanes&o;break}a.timeoutHandle=Vr(Ku.bind(null,a),r);break}Ku(a);break;case 4:if(fu(a,n),(4186112&n)===n)break;for(r=a.eventTimes,o=-1;0<n;){var l=31-We(n);t=1<<l,(l=r[l])>o&&(o=l),n&=~t}if(n=o,10<(n=(120>(n=Fo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Pl(n/1960))-n)){a.timeoutHandle=Vr(Ku.bind(null,a),n);break}Ku(a);break;case 5:Ku(a);break;default:throw Error(i(329))}}return gu(a,Fo()),a.callbackNode===e?mu.bind(null,a):null}function fu(a,e){for(e&=~xl,e&=~Ol,a.suspendedLanes|=e,a.pingedLanes&=~e,a=a.expirationTimes;0<e;){var n=31-We(e),r=1<<n;a[n]=-1,e&=~r}}function pu(a){if(0!==(48&Kl))throw Error(i(327));if(Nu(),a===Ll&&0!==(a.expiredLanes&Nl)){var e=Nl,n=wu(a,e);0!==(Hl&Ol)&&(n=wu(a,e=je(a,e)))}else n=wu(a,e=je(a,0));if(0!==a.tag&&2===n&&(Kl|=64,a.hydrate&&(a.hydrate=!1,Wr(a.containerInfo)),0!==(e=Oe(a))&&(n=wu(a,e))),1===n)throw n=Gl,Su(a,0),fu(a,e),gu(a,Fo()),n;return a.finishedWork=a.current.alternate,a.finishedLanes=e,Ku(a),gu(a,Fo()),null}function yu(a,e){var n=Kl;Kl|=1;try{return a(e)}finally{0===(Kl=n)&&(Wl(),Jo())}}function ku(a,e){var n=Kl;Kl&=-2,Kl|=8;try{return a(e)}finally{0===(Kl=n)&&(Wl(),Jo())}}function bu(a,e){uo(Rl,El),El|=e,Hl|=e}function vu(){El=Rl.current,lo(Rl)}function Su(a,e){a.finishedWork=null,a.finishedLanes=0;var n=a.timeoutHandle;if(-1!==n&&(a.timeoutHandle=-1,Ir(n)),null!==zl)for(n=zl.return;null!==n;){var r=n;switch(r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&po();break;case 3:Nt(),lo(co),lo(ho),Ut();break;case 5:Rt(r);break;case 4:Nt();break;case 13:case 19:lo(Dt);break;case 10:et(r);break;case 23:case 24:vu()}n=n.return}Ll=a,zl=Iu(a.current,null),Nl=El=Hl=e,Dl=0,Gl=null,xl=Ol=jl=0}function Cu(a,e){for(;;){var n=zl;try{if(at(),Zt.current=Ki,ai){for(var r=Qt.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}ai=!1}if(qt=0,$t=Xt=Qt=null,ei=!1,Tl.current=null,null===n||null===n.return){Dl=1,Gl=e,zl=null;break}a:{var t=a,i=n.return,l=n,u=e;if(e=Nl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"===typeof u&&"function"===typeof u.then){var s=u;if(0===(2&l.mode)){var d=l.alternate;d?(l.updateQueue=d.updateQueue,l.memoizedState=d.memoizedState,l.lanes=d.lanes):(l.updateQueue=null,l.memoizedState=null)}var h=0!==(1&Dt.current),c=i;do{var g;if(g=13===c.tag){var m=c.memoizedState;if(null!==m)g=null!==m.dehydrated;else{var f=c.memoizedProps;g=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!h)}}if(g){var p=c.updateQueue;if(null===p){var y=new Set;y.add(s),c.updateQueue=y}else p.add(s);if(0===(2&c.mode)){if(c.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var k=ut(-1,1);k.tag=2,st(l,k)}l.lanes|=1;break a}u=void 0,l=e;var b=t.pingCache;if(null===b?(b=t.pingCache=new ul,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var v=ju.bind(null,t,s,l);s.then(v,v)}c.flags|=4096,c.lanes=e;break a}c=c.return}while(null!==c);u=Error((U(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Dl&&(Dl=2),u=il(u,l),c=i;do{switch(c.tag){case 3:t=u,c.flags|=4096,e&=-e,c.lanes|=e,dt(c,sl(0,t,e));break a;case 1:t=u;var S=c.type,C=c.stateNode;if(0===(64&c.flags)&&("function"===typeof S.getDerivedStateFromError||null!==C&&"function"===typeof C.componentDidCatch&&(null===Yl||!Yl.has(C)))){c.flags|=4096,e&=-e,c.lanes|=e,dt(c,dl(c,t,e));break a}}c=c.return}while(null!==c)}Tu(n)}catch(M){e=M,zl===n&&null!==n&&(zl=n=n.return);continue}break}}function Mu(){var a=Al.current;return Al.current=Ki,null===a?Ki:a}function wu(a,e){var n=Kl;Kl|=16;var r=Mu();for(Ll===a&&Nl===e||Su(a,e);;)try{Bu();break}catch(o){Cu(a,o)}if(at(),Kl=n,Al.current=r,null!==zl)throw Error(i(261));return Ll=null,Nl=0,Dl}function Bu(){for(;null!==zl;)Au(zl)}function Pu(){for(;null!==zl&&!Po();)Au(zl)}function Au(a){var e=_l(a.alternate,a,El);a.memoizedProps=a.pendingProps,null===e?Tu(a):zl=e,Tl.current=null}function Tu(a){var e=a;do{var n=e.alternate;if(a=e.return,0===(2048&e.flags)){if(null!==(n=ol(n,e,El)))return void(zl=n);if(24!==(n=e).tag&&23!==n.tag||null===n.memoizedState||0!==(1073741824&El)||0===(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==a&&0===(2048&a.flags)&&(null===a.firstEffect&&(a.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=e.firstEffect),a.lastEffect=e.lastEffect),1<e.flags&&(null!==a.lastEffect?a.lastEffect.nextEffect=e:a.firstEffect=e,a.lastEffect=e))}else{if(null!==(n=tl(e)))return n.flags&=2047,void(zl=n);null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}if(null!==(e=e.sibling))return void(zl=e);zl=e=a}while(null!==e);0===Dl&&(Dl=5)}function Ku(a){var e=Vo();return Wo(99,Lu.bind(null,a,e)),null}function Lu(a,e){do{Nu()}while(null!==Ql);if(0!==(48&Kl))throw Error(i(327));var n=a.finishedWork;if(null===n)return null;if(a.finishedWork=null,a.finishedLanes=0,n===a.current)throw Error(i(177));a.callbackNode=null;var r=n.lanes|n.childLanes,o=r,t=a.pendingLanes&~o;a.pendingLanes=o,a.suspendedLanes=0,a.pingedLanes=0,a.expiredLanes&=o,a.mutableReadLanes&=o,a.entangledLanes&=o,o=a.entanglements;for(var l=a.eventTimes,u=a.expirationTimes;0<t;){var s=31-We(t),d=1<<s;o[s]=0,l[s]=-1,u[s]=-1,t&=~d}if(null!==eu&&0===(24&r)&&eu.has(a)&&eu.delete(a),a===Ll&&(zl=Ll=null,Nl=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=Kl,Kl|=32,Tl.current=null,jr=Ye,mr(l=gr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else a:if(u=(u=l.ownerDocument)&&u.defaultView||window,(d=u.getSelection&&u.getSelection())&&0!==d.rangeCount){u=d.anchorNode,t=d.anchorOffset,s=d.focusNode,d=d.focusOffset;try{u.nodeType,s.nodeType}catch(P){u=null;break a}var h=0,c=-1,g=-1,m=0,f=0,p=l,y=null;e:for(;;){for(var k;p!==u||0!==t&&3!==p.nodeType||(c=h+t),p!==s||0!==d&&3!==p.nodeType||(g=h+d),3===p.nodeType&&(h+=p.nodeValue.length),null!==(k=p.firstChild);)y=p,p=k;for(;;){if(p===l)break e;if(y===u&&++m===t&&(c=h),y===s&&++f===d&&(g=h),null!==(k=p.nextSibling))break;y=(p=y).parentNode}p=k}u=-1===c||-1===g?null:{start:c,end:g}}else u=null;u=u||{start:0,end:0}}else u=null;Or={focusedElem:l,selectionRange:u},Ye=!1,lu=null,uu=!1,Jl=r;do{try{zu()}catch(P){if(null===Jl)throw Error(i(330));Hu(Jl,P),Jl=Jl.nextEffect}}while(null!==Jl);lu=null,Jl=r;do{try{for(l=a;null!==Jl;){var b=Jl.flags;if(16&b&&ka(Jl.stateNode,""),128&b){var v=Jl.alternate;if(null!==v){var S=v.ref;null!==S&&("function"===typeof S?S(null):S.current=null)}}switch(1038&b){case 2:bl(Jl),Jl.flags&=-3;break;case 6:bl(Jl),Jl.flags&=-3,Ml(Jl.alternate,Jl);break;case 1024:Jl.flags&=-1025;break;case 1028:Jl.flags&=-1025,Ml(Jl.alternate,Jl);break;case 4:Ml(Jl.alternate,Jl);break;case 8:Cl(l,u=Jl);var C=u.alternate;yl(u),null!==C&&yl(C)}Jl=Jl.nextEffect}}catch(P){if(null===Jl)throw Error(i(330));Hu(Jl,P),Jl=Jl.nextEffect}}while(null!==Jl);if(S=Or,v=gr(),b=S.focusedElem,l=S.selectionRange,v!==b&&b&&b.ownerDocument&&cr(b.ownerDocument.documentElement,b)){null!==l&&mr(b)&&(v=l.start,void 0===(S=l.end)&&(S=v),"selectionStart"in b?(b.selectionStart=v,b.selectionEnd=Math.min(S,b.value.length)):(S=(v=b.ownerDocument||document)&&v.defaultView||window).getSelection&&(S=S.getSelection(),u=b.textContent.length,C=Math.min(l.start,u),l=void 0===l.end?C:Math.min(l.end,u),!S.extend&&C>l&&(u=l,l=C,C=u),u=hr(b,C),t=hr(b,l),u&&t&&(1!==S.rangeCount||S.anchorNode!==u.node||S.anchorOffset!==u.offset||S.focusNode!==t.node||S.focusOffset!==t.offset)&&((v=v.createRange()).setStart(u.node,u.offset),S.removeAllRanges(),C>l?(S.addRange(v),S.extend(t.node,t.offset)):(v.setEnd(t.node,t.offset),S.addRange(v))))),v=[];for(S=b;S=S.parentNode;)1===S.nodeType&&v.push({element:S,left:S.scrollLeft,top:S.scrollTop});for("function"===typeof b.focus&&b.focus(),b=0;b<v.length;b++)(S=v[b]).element.scrollLeft=S.left,S.element.scrollTop=S.top}Ye=!!jr,Or=jr=null,a.current=n,Jl=r;do{try{for(b=a;null!==Jl;){var M=Jl.flags;if(36&M&&ml(b,Jl.alternate,Jl),128&M){v=void 0;var w=Jl.ref;if(null!==w){var B=Jl.stateNode;switch(Jl.tag){case 5:v=B;break;default:v=B}"function"===typeof w?w(v):w.current=v}}Jl=Jl.nextEffect}}catch(P){if(null===Jl)throw Error(i(330));Hu(Jl,P),Jl=Jl.nextEffect}}while(null!==Jl);Jl=null,Go(),Kl=o}else a.current=n;if(ql)ql=!1,Ql=a,Xl=e;else for(Jl=r;null!==Jl;)e=Jl.nextEffect,Jl.nextEffect=null,8&Jl.flags&&((M=Jl).sibling=null,M.stateNode=null),Jl=e;if(0===(r=a.pendingLanes)&&(Yl=null),1===r?a===ru?nu++:(nu=0,ru=a):nu=0,n=n.stateNode,Co&&"function"===typeof Co.onCommitFiberRoot)try{Co.onCommitFiberRoot(So,n,void 0,64===(64&n.current.flags))}catch(P){}if(gu(a,Fo()),Ul)throw Ul=!1,a=Zl,Zl=null,a;return 0!==(8&Kl)||Jo(),null}function zu(){for(;null!==Jl;){var a=Jl.alternate;uu||null===lu||(0!==(8&Jl.flags)?ae(Jl,lu)&&(uu=!0):13===Jl.tag&&Bl(a,Jl)&&ae(Jl,lu)&&(uu=!0));var e=Jl.flags;0!==(256&e)&&gl(a,Jl),0===(512&e)||ql||(ql=!0,_o(97,(function(){return Nu(),null}))),Jl=Jl.nextEffect}}function Nu(){if(90!==Xl){var a=97<Xl?97:Xl;return Xl=90,Wo(a,Du)}return!1}function Eu(a,e){$l.push(e,a),ql||(ql=!0,_o(97,(function(){return Nu(),null})))}function Ru(a,e){au.push(e,a),ql||(ql=!0,_o(97,(function(){return Nu(),null})))}function Du(){if(null===Ql)return!1;var a=Ql;if(Ql=null,0!==(48&Kl))throw Error(i(331));var e=Kl;Kl|=32;var n=au;au=[];for(var r=0;r<n.length;r+=2){var o=n[r],t=n[r+1],l=o.destroy;if(o.destroy=void 0,"function"===typeof l)try{l()}catch(s){if(null===t)throw Error(i(330));Hu(t,s)}}for(n=$l,$l=[],r=0;r<n.length;r+=2){o=n[r],t=n[r+1];try{var u=o.create;o.destroy=u()}catch(s){if(null===t)throw Error(i(330));Hu(t,s)}}for(u=a.current.firstEffect;null!==u;)a=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=a;return Kl=e,Jo(),!0}function Gu(a,e,n){st(a,e=sl(0,e=il(n,e),1)),e=su(),null!==(a=cu(a,1))&&(Ie(a,1,e),gu(a,e))}function Hu(a,e){if(3===a.tag)Gu(a,a,e);else for(var n=a.return;null!==n;){if(3===n.tag){Gu(n,a,e);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Yl||!Yl.has(r))){var o=dl(n,a=il(e,a),1);if(st(n,o),o=su(),null!==(n=cu(n,1)))Ie(n,1,o),gu(n,o);else if("function"===typeof r.componentDidCatch&&(null===Yl||!Yl.has(r)))try{r.componentDidCatch(e,a)}catch(t){}break}}n=n.return}}function ju(a,e,n){var r=a.pingCache;null!==r&&r.delete(e),e=su(),a.pingedLanes|=a.suspendedLanes&n,Ll===a&&(Nl&n)===n&&(4===Dl||3===Dl&&(62914560&Nl)===Nl&&500>Fo()-Vl?Su(a,0):xl|=n),gu(a,e)}function Ou(a,e){var n=a.stateNode;null!==n&&n.delete(e),0===(e=0)&&(0===(2&(e=a.mode))?e=1:0===(4&e)?e=99===Vo()?1:2:(0===tu&&(tu=Hl),0===(e=Fe(62914560&~tu))&&(e=4194304))),n=su(),null!==(a=cu(a,e))&&(Ie(a,e,n),gu(a,n))}function xu(a,e,n,r){this.tag=a,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Fu(a,e,n,r){return new xu(a,e,n,r)}function Vu(a){return!(!(a=a.prototype)||!a.isReactComponent)}function Iu(a,e){var n=a.alternate;return null===n?((n=Fu(a.tag,e,a.key,a.mode)).elementType=a.elementType,n.type=a.type,n.stateNode=a.stateNode,n.alternate=a,a.alternate=n):(n.pendingProps=e,n.type=a.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=a.childLanes,n.lanes=a.lanes,n.child=a.child,n.memoizedProps=a.memoizedProps,n.memoizedState=a.memoizedState,n.updateQueue=a.updateQueue,e=a.dependencies,n.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=a.sibling,n.index=a.index,n.ref=a.ref,n}function Wu(a,e,n,r,o,t){var l=2;if(r=a,"function"===typeof a)Vu(a)&&(l=1);else if("string"===typeof a)l=5;else a:switch(a){case w:return _u(n.children,o,t,e);case G:l=8,o|=16;break;case B:l=8,o|=1;break;case P:return(a=Fu(12,n,e,8|o)).elementType=P,a.type=P,a.lanes=t,a;case L:return(a=Fu(13,n,e,o)).type=L,a.elementType=L,a.lanes=t,a;case z:return(a=Fu(19,n,e,o)).elementType=z,a.lanes=t,a;case H:return Ju(n,o,t,e);case j:return(a=Fu(24,n,e,o)).elementType=j,a.lanes=t,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case A:l=10;break a;case T:l=9;break a;case K:l=11;break a;case N:l=14;break a;case E:l=16,r=null;break a;case R:l=22;break a}throw Error(i(130,null==a?a:typeof a,""))}return(e=Fu(l,n,e,o)).elementType=a,e.type=r,e.lanes=t,e}function _u(a,e,n,r){return(a=Fu(7,a,r,e)).lanes=n,a}function Ju(a,e,n,r){return(a=Fu(23,a,r,e)).elementType=H,a.lanes=n,a}function Uu(a,e,n){return(a=Fu(6,a,null,e)).lanes=n,a}function Zu(a,e,n){return(e=Fu(4,null!==a.children?a.children:[],a.key,e)).lanes=n,e.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},e}function Yu(a,e,n){this.tag=e,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ve(0),this.expirationTimes=Ve(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ve(0),this.mutableSourceEagerHydrationData=null}function qu(a,e,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:M,key:null==r?null:""+r,children:a,containerInfo:e,implementation:n}}function Qu(a,e,n,r){var o=e.current,t=su(),l=du(o);a:if(n){e:{if(qa(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break e;case 1:if(fo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break e}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var s=n.type;if(fo(s)){n=ko(n,s,u);break a}}n=u}else n=so;return null===e.context?e.context=n:e.pendingContext=n,(e=ut(t,l)).payload={element:a},null!==(r=void 0===r?null:r)&&(e.callback=r),st(o,e),hu(o,l,t),l}function Xu(a){if(!(a=a.current).child)return null;switch(a.child.tag){case 5:default:return a.child.stateNode}}function $u(a,e){if(null!==(a=a.memoizedState)&&null!==a.dehydrated){var n=a.retryLane;a.retryLane=0!==n&&n<e?n:e}}function as(a,e){$u(a,e),(a=a.alternate)&&$u(a,e)}function es(a,e,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Yu(a,e,null!=n&&!0===n.hydrate),e=Fu(3,null,null,2===e?7:1===e?3:0),n.current=e,e.stateNode=n,it(e),a[Qr]=n.current,Kr(8===a.nodeType?a.parentNode:a),r)for(a=0;a<r.length;a++){var o=(e=r[a])._getVersion;o=o(e._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[e,o]:n.mutableSourceEagerHydrationData.push(e,o)}this._internalRoot=n}function ns(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function rs(a,e,n,r,o){var t=n._reactRootContainer;if(t){var i=t._internalRoot;if("function"===typeof o){var l=o;o=function(){var a=Xu(i);l.call(a)}}Qu(e,i,a,o)}else{if(t=n._reactRootContainer=function(a,e){if(e||(e=!(!(e=a?9===a.nodeType?a.documentElement:a.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=a.lastChild;)a.removeChild(n);return new es(a,0,e?{hydrate:!0}:void 0)}(n,r),i=t._internalRoot,"function"===typeof o){var u=o;o=function(){var a=Xu(i);u.call(a)}}ku((function(){Qu(e,i,a,o)}))}return Xu(i)}function os(a,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ns(e))throw Error(i(200));return qu(a,e,null,n)}_l=function(a,e,n){var r=e.lanes;if(null!==a)if(a.memoizedProps!==e.pendingProps||co.current)Ri=!0;else{if(0===(n&r)){switch(Ri=!1,e.tag){case 3:Wi(e),_t();break;case 5:Et(e);break;case 1:fo(e.type)&&bo(e);break;case 4:zt(e,e.stateNode.containerInfo);break;case 10:r=e.memoizedProps.value;var o=e.type._context;uo(qo,o._currentValue),o._currentValue=r;break;case 13:if(null!==e.memoizedState)return 0!==(n&e.child.childLanes)?Yi(a,e,n):(uo(Dt,1&Dt.current),null!==(e=nl(a,e,n))?e.sibling:null);uo(Dt,1&Dt.current);break;case 19:if(r=0!==(n&e.childLanes),0!==(64&a.flags)){if(r)return el(a,e,n);e.flags|=64}if(null!==(o=e.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),uo(Dt,Dt.current),r)break;return null;case 23:case 24:return e.lanes=0,Oi(a,e,n)}return nl(a,e,n)}Ri=0!==(16384&a.flags)}else Ri=!1;switch(e.lanes=0,e.tag){case 2:if(r=e.type,null!==a&&(a.alternate=null,e.alternate=null,e.flags|=2),a=e.pendingProps,o=mo(e,ho.current),rt(e,n),o=oi(null,e,r,a,o,n),e.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof){if(e.tag=1,e.memoizedState=null,e.updateQueue=null,fo(r)){var t=!0;bo(e)}else t=!1;e.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,it(e);var l=r.getDerivedStateFromProps;"function"===typeof l&&mt(e,r,l,a),o.updater=ft,e.stateNode=o,o._reactInternals=e,bt(e,r,a,n),e=Ii(null,e,r,!0,t,n)}else e.tag=0,Di(null,e,o,n),e=e.child;return e;case 16:o=e.elementType;a:{switch(null!==a&&(a.alternate=null,e.alternate=null,e.flags|=2),a=e.pendingProps,o=(t=o._init)(o._payload),e.type=o,t=e.tag=function(a){if("function"===typeof a)return Vu(a)?1:0;if(void 0!==a&&null!==a){if((a=a.$$typeof)===K)return 11;if(a===N)return 14}return 2}(o),a=Yo(o,a),t){case 0:e=Fi(null,e,o,a,n);break a;case 1:e=Vi(null,e,o,a,n);break a;case 11:e=Gi(null,e,o,a,n);break a;case 14:e=Hi(null,e,o,Yo(o.type,a),r,n);break a}throw Error(i(306,o,""))}return e;case 0:return r=e.type,o=e.pendingProps,Fi(a,e,r,o=e.elementType===r?o:Yo(r,o),n);case 1:return r=e.type,o=e.pendingProps,Vi(a,e,r,o=e.elementType===r?o:Yo(r,o),n);case 3:if(Wi(e),r=e.updateQueue,null===a||null===r)throw Error(i(282));if(r=e.pendingProps,o=null!==(o=e.memoizedState)?o.element:null,lt(a,e),ht(e,r,null,n),(r=e.memoizedState.element)===o)_t(),e=nl(a,e,n);else{if((t=(o=e.stateNode).hydrate)&&(jt=_r(e.stateNode.containerInfo.firstChild),Ht=e,t=Ot=!0),t){if(null!=(a=o.mutableSourceEagerHydrationData))for(o=0;o<a.length;o+=2)(t=a[o])._workInProgressVersionPrimary=a[o+1],Jt.push(t);for(n=Bt(e,null,r,n),e.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Di(a,e,r,n),_t();e=e.child}return e;case 5:return Et(e),null===a&&Vt(e),r=e.type,o=e.pendingProps,t=null!==a?a.memoizedProps:null,l=o.children,Fr(r,o)?l=null:null!==t&&Fr(r,t)&&(e.flags|=16),xi(a,e),Di(a,e,l,n),e.child;case 6:return null===a&&Vt(e),null;case 13:return Yi(a,e,n);case 4:return zt(e,e.stateNode.containerInfo),r=e.pendingProps,null===a?e.child=wt(e,null,r,n):Di(a,e,r,n),e.child;case 11:return r=e.type,o=e.pendingProps,Gi(a,e,r,o=e.elementType===r?o:Yo(r,o),n);case 7:return Di(a,e,e.pendingProps,n),e.child;case 8:case 12:return Di(a,e,e.pendingProps.children,n),e.child;case 10:a:{r=e.type._context,o=e.pendingProps,l=e.memoizedProps,t=o.value;var u=e.type._context;if(uo(qo,u._currentValue),u._currentValue=t,null!==l)if(u=l.value,0===(t=lr(u,t)?0:0|("function"===typeof r._calculateChangedBits?r._calculateChangedBits(u,t):1073741823))){if(l.children===o.children&&!co.current){e=nl(a,e,n);break a}}else for(null!==(u=e.child)&&(u.return=e);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var d=s.firstContext;null!==d;){if(d.context===r&&0!==(d.observedBits&t)){1===u.tag&&((d=ut(-1,n&-n)).tag=2,st(u,d)),u.lanes|=n,null!==(d=u.alternate)&&(d.lanes|=n),nt(u.return,n),s.lanes|=n;break}d=d.next}}else l=10===u.tag&&u.type===e.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===e){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Di(a,e,o.children,n),e=e.child}return e;case 9:return o=e.type,r=(t=e.pendingProps).children,rt(e,n),r=r(o=ot(o,t.unstable_observedBits)),e.flags|=1,Di(a,e,r,n),e.child;case 14:return t=Yo(o=e.type,e.pendingProps),Hi(a,e,o,t=Yo(o.type,t),r,n);case 15:return ji(a,e,e.type,e.pendingProps,r,n);case 17:return r=e.type,o=e.pendingProps,o=e.elementType===r?o:Yo(r,o),null!==a&&(a.alternate=null,e.alternate=null,e.flags|=2),e.tag=1,fo(r)?(a=!0,bo(e)):a=!1,rt(e,n),yt(e,r,o),bt(e,r,o,n),Ii(null,e,r,!0,a,n);case 19:return el(a,e,n);case 23:case 24:return Oi(a,e,n)}throw Error(i(156,e.tag))},es.prototype.render=function(a){Qu(a,this._internalRoot,null,null)},es.prototype.unmount=function(){var a=this._internalRoot,e=a.containerInfo;Qu(null,a,null,(function(){e[Qr]=null}))},ee=function(a){13===a.tag&&(hu(a,4,su()),as(a,4))},ne=function(a){13===a.tag&&(hu(a,67108864,su()),as(a,67108864))},re=function(a){if(13===a.tag){var e=su(),n=du(a);hu(a,n,e),as(a,n)}},oe=function(a,e){return e()},Aa=function(a,e,n){switch(e){case"input":if(na(a,n),e=n.name,"radio"===n.type&&null!=e){for(n=a;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==a&&r.form===a.form){var o=no(r);if(!o)throw Error(i(90));Q(r),na(r,o)}}}break;case"textarea":sa(a,n);break;case"select":null!=(e=n.value)&&ia(a,!!n.multiple,e,!1)}},Ea=yu,Ra=function(a,e,n,r,o){var t=Kl;Kl|=4;try{return Wo(98,a.bind(null,e,n,r,o))}finally{0===(Kl=t)&&(Wl(),Jo())}},Da=function(){0===(49&Kl)&&(function(){if(null!==eu){var a=eu;eu=null,a.forEach((function(a){a.expiredLanes|=24&a.pendingLanes,gu(a,Fo())}))}Jo()}(),Nu())},Ga=function(a,e){var n=Kl;Kl|=2;try{return a(e)}finally{0===(Kl=n)&&(Wl(),Jo())}};var ts={Events:[ao,eo,no,za,Na,Nu,{current:!1}]},is={findFiberByHostInstance:$r,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},ls={bundleType:is.bundleType,version:is.version,rendererPackageName:is.rendererPackageName,rendererConfig:is.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:S.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){return null===(a=$a(a))?null:a.stateNode},findFiberByHostInstance:is.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var us=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!us.isDisabled&&us.supportsFiber)try{So=us.inject(ls),Co=us}catch(pa){}}e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ts,e.createPortal=os,e.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var e=a._reactInternals;if(void 0===e){if("function"===typeof a.render)throw Error(i(188));throw Error(i(268,Object.keys(a)))}return a=null===(a=$a(e))?null:a.stateNode},e.flushSync=function(a,e){var n=Kl;if(0!==(48&n))return a(e);Kl|=1;try{if(a)return Wo(99,a.bind(null,e))}finally{Kl=n,Jo()}},e.hydrate=function(a,e,n){if(!ns(e))throw Error(i(200));return rs(null,a,e,!0,n)},e.render=function(a,e,n){if(!ns(e))throw Error(i(200));return rs(null,a,e,!1,n)},e.unmountComponentAtNode=function(a){if(!ns(a))throw Error(i(40));return!!a._reactRootContainer&&(ku((function(){rs(null,null,a,!1,(function(){a._reactRootContainer=null,a[Qr]=null}))})),!0)},e.unstable_batchedUpdates=yu,e.unstable_createPortal=function(a,e){return os(a,e,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},e.unstable_renderSubtreeIntoContainer=function(a,e,n,r){if(!ns(n))throw Error(i(200));if(null==a||void 0===a._reactInternals)throw Error(i(38));return rs(a,e,n,!1,r)},e.version="17.0.1"},function(a,e,n){"use strict";a.exports=n(40)},function(a,e,n){"use strict";var r,o,t,i;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;e.unstable_now=function(){return l.now()}}else{var u=Date,s=u.now();e.unstable_now=function(){return u.now()-s}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var d=null,h=null,c=function a(){if(null!==d)try{var n=e.unstable_now();d(!0,n),d=null}catch(r){throw setTimeout(a,0),r}};r=function(a){null!==d?setTimeout(r,0,a):(d=a,setTimeout(c,0))},o=function(a,e){h=setTimeout(a,e)},t=function(){clearTimeout(h)},e.unstable_shouldYield=function(){return!1},i=e.unstable_forceFrameRate=function(){}}else{var g=window.setTimeout,m=window.clearTimeout;if("undefined"!==typeof console){var f=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof f&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var p=!1,y=null,k=-1,b=5,v=0;e.unstable_shouldYield=function(){return e.unstable_now()>=v},i=function(){},e.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<a?Math.floor(1e3/a):5};var S=new MessageChannel,C=S.port2;S.port1.onmessage=function(){if(null!==y){var a=e.unstable_now();v=a+b;try{y(!0,a)?C.postMessage(null):(p=!1,y=null)}catch(n){throw C.postMessage(null),n}}else p=!1},r=function(a){y=a,p||(p=!0,C.postMessage(null))},o=function(a,n){k=g((function(){a(e.unstable_now())}),n)},t=function(){m(k),k=-1}}function M(a,e){var n=a.length;a.push(e);a:for(;;){var r=n-1>>>1,o=a[r];if(!(void 0!==o&&0<P(o,e)))break a;a[r]=e,a[n]=o,n=r}}function w(a){return void 0===(a=a[0])?null:a}function B(a){var e=a[0];if(void 0!==e){var n=a.pop();if(n!==e){a[0]=n;a:for(var r=0,o=a.length;r<o;){var t=2*(r+1)-1,i=a[t],l=t+1,u=a[l];if(void 0!==i&&0>P(i,n))void 0!==u&&0>P(u,i)?(a[r]=u,a[l]=n,r=l):(a[r]=i,a[t]=n,r=t);else{if(!(void 0!==u&&0>P(u,n)))break a;a[r]=u,a[l]=n,r=l}}}return e}return null}function P(a,e){var n=a.sortIndex-e.sortIndex;return 0!==n?n:a.id-e.id}var A=[],T=[],K=1,L=null,z=3,N=!1,E=!1,R=!1;function D(a){for(var e=w(T);null!==e;){if(null===e.callback)B(T);else{if(!(e.startTime<=a))break;B(T),e.sortIndex=e.expirationTime,M(A,e)}e=w(T)}}function G(a){if(R=!1,D(a),!E)if(null!==w(A))E=!0,r(H);else{var e=w(T);null!==e&&o(G,e.startTime-a)}}function H(a,n){E=!1,R&&(R=!1,t()),N=!0;var r=z;try{for(D(n),L=w(A);null!==L&&(!(L.expirationTime>n)||a&&!e.unstable_shouldYield());){var i=L.callback;if("function"===typeof i){L.callback=null,z=L.priorityLevel;var l=i(L.expirationTime<=n);n=e.unstable_now(),"function"===typeof l?L.callback=l:L===w(A)&&B(A),D(n)}else B(A);L=w(A)}if(null!==L)var u=!0;else{var s=w(T);null!==s&&o(G,s.startTime-n),u=!1}return u}finally{L=null,z=r,N=!1}}var j=i;e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(a){a.callback=null},e.unstable_continueExecution=function(){E||N||(E=!0,r(H))},e.unstable_getCurrentPriorityLevel=function(){return z},e.unstable_getFirstCallbackNode=function(){return w(A)},e.unstable_next=function(a){switch(z){case 1:case 2:case 3:var e=3;break;default:e=z}var n=z;z=e;try{return a()}finally{z=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=j,e.unstable_runWithPriority=function(a,e){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var n=z;z=a;try{return e()}finally{z=n}},e.unstable_scheduleCallback=function(a,n,i){var l=e.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?l+i:l:i=l,a){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return a={id:K++,callback:n,priorityLevel:a,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(a.sortIndex=i,M(T,a),null===w(A)&&a===w(T)&&(R?t():R=!0,o(G,i-l))):(a.sortIndex=u,M(A,a),E||N||(E=!0,r(H))),a},e.unstable_wrapCallback=function(a){var e=z;return function(){var n=z;z=e;try{return a.apply(this,arguments)}finally{z=n}}}},function(a,e,n){a.exports=n(42)()},function(a,e,n){"use strict";var r=n(43);function o(){}function t(){}t.resetWarningCache=o,a.exports=function(){function a(a,e,n,o,t,i){if(i!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function e(){return a}a.isRequired=a;var n={array:a,bool:a,func:a,number:a,object:a,string:a,symbol:a,any:a,arrayOf:e,element:a,elementType:a,instanceOf:e,node:a,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e,checkPropTypes:t,resetWarningCache:o};return n.PropTypes=n,n}},function(a,e,n){"use strict";a.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(a,e,n){"use strict";var r="function"===typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,t=r?Symbol.for("react.portal"):60106,i=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,s=r?Symbol.for("react.provider"):60109,d=r?Symbol.for("react.context"):60110,h=r?Symbol.for("react.async_mode"):60111,c=r?Symbol.for("react.concurrent_mode"):60111,g=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,f=r?Symbol.for("react.suspense_list"):60120,p=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,k=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,v=r?Symbol.for("react.responder"):60118,S=r?Symbol.for("react.scope"):60119;function C(a){if("object"===typeof a&&null!==a){var e=a.$$typeof;switch(e){case o:switch(a=a.type){case h:case c:case i:case u:case l:case m:return a;default:switch(a=a&&a.$$typeof){case d:case g:case y:case p:case s:return a;default:return e}}case t:return e}}}function M(a){return C(a)===c}e.AsyncMode=h,e.ConcurrentMode=c,e.ContextConsumer=d,e.ContextProvider=s,e.Element=o,e.ForwardRef=g,e.Fragment=i,e.Lazy=y,e.Memo=p,e.Portal=t,e.Profiler=u,e.StrictMode=l,e.Suspense=m,e.isAsyncMode=function(a){return M(a)||C(a)===h},e.isConcurrentMode=M,e.isContextConsumer=function(a){return C(a)===d},e.isContextProvider=function(a){return C(a)===s},e.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===o},e.isForwardRef=function(a){return C(a)===g},e.isFragment=function(a){return C(a)===i},e.isLazy=function(a){return C(a)===y},e.isMemo=function(a){return C(a)===p},e.isPortal=function(a){return C(a)===t},e.isProfiler=function(a){return C(a)===u},e.isStrictMode=function(a){return C(a)===l},e.isSuspense=function(a){return C(a)===m},e.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===i||a===c||a===u||a===l||a===m||a===f||"object"===typeof a&&null!==a&&(a.$$typeof===y||a.$$typeof===p||a.$$typeof===s||a.$$typeof===d||a.$$typeof===g||a.$$typeof===b||a.$$typeof===v||a.$$typeof===S||a.$$typeof===k)},e.typeOf=C},function(a,e){a.exports=function(a){if(!a.webpackPolyfill){var e=Object.create(a);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(a,e,n){(function(a){!function(e){"use strict";function n(a,e){a.super_=e,a.prototype=Object.create(e.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}})}function r(a,e){Object.defineProperty(this,"kind",{value:a,enumerable:!0}),e&&e.length&&Object.defineProperty(this,"path",{value:e,enumerable:!0})}function o(a,e,n){o.super_.call(this,"E",a),Object.defineProperty(this,"lhs",{value:e,enumerable:!0}),Object.defineProperty(this,"rhs",{value:n,enumerable:!0})}function t(a,e){t.super_.call(this,"N",a),Object.defineProperty(this,"rhs",{value:e,enumerable:!0})}function i(a,e){i.super_.call(this,"D",a),Object.defineProperty(this,"lhs",{value:e,enumerable:!0})}function l(a,e,n){l.super_.call(this,"A",a),Object.defineProperty(this,"index",{value:e,enumerable:!0}),Object.defineProperty(this,"item",{value:n,enumerable:!0})}function u(a,e,n){var r=a.slice((n||e)+1||a.length);return a.length=e<0?a.length+e:e,a.push.apply(a,r),a}function s(a){var e="undefined"==typeof a?"undefined":L(a);return"object"!==e?e:a===Math?"math":null===a?"null":Array.isArray(a)?"array":"[object Date]"===Object.prototype.toString.call(a)?"date":"function"==typeof a.toString&&/^\/.*\//.test(a.toString())?"regexp":"object"}function d(a,e,n,r,h,c,g){g=g||[];var m=(h=h||[]).slice(0);if("undefined"!=typeof c){if(r){if("function"==typeof r&&r(m,c))return;if("object"===("undefined"==typeof r?"undefined":L(r))){if(r.prefilter&&r.prefilter(m,c))return;if(r.normalize){var f=r.normalize(m,c,a,e);f&&(a=f[0],e=f[1])}}}m.push(c)}"regexp"===s(a)&&"regexp"===s(e)&&(a=a.toString(),e=e.toString());var p="undefined"==typeof a?"undefined":L(a),y="undefined"==typeof e?"undefined":L(e),k="undefined"!==p||g&&g[g.length-1].lhs&&g[g.length-1].lhs.hasOwnProperty(c),b="undefined"!==y||g&&g[g.length-1].rhs&&g[g.length-1].rhs.hasOwnProperty(c);if(!k&&b)n(new t(m,e));else if(!b&&k)n(new i(m,a));else if(s(a)!==s(e))n(new o(m,a,e));else if("date"===s(a)&&a-e!==0)n(new o(m,a,e));else if("object"===p&&null!==a&&null!==e)if(g.filter((function(e){return e.lhs===a})).length)a!==e&&n(new o(m,a,e));else{if(g.push({lhs:a,rhs:e}),Array.isArray(a)){var v;for(a.length,v=0;v<a.length;v++)v>=e.length?n(new l(m,v,new i(void 0,a[v]))):d(a[v],e[v],n,r,m,v,g);for(;v<e.length;)n(new l(m,v,new t(void 0,e[v++])))}else{var S=Object.keys(a),C=Object.keys(e);S.forEach((function(o,t){var i=C.indexOf(o);i>=0?(d(a[o],e[o],n,r,m,o,g),C=u(C,i)):d(a[o],void 0,n,r,m,o,g)})),C.forEach((function(a){d(void 0,e[a],n,r,m,a,g)}))}g.length=g.length-1}else a!==e&&("number"===p&&isNaN(a)&&isNaN(e)||n(new o(m,a,e)))}function h(a,e,n,r){return r=r||[],d(a,e,(function(a){a&&r.push(a)}),n),r.length?r:void 0}function c(a,e,n){if(n.path&&n.path.length){var r,o=a[e],t=n.path.length-1;for(r=0;r<t;r++)o=o[n.path[r]];switch(n.kind){case"A":c(o[n.path[r]],n.index,n.item);break;case"D":delete o[n.path[r]];break;case"E":case"N":o[n.path[r]]=n.rhs}}else switch(n.kind){case"A":c(a[e],n.index,n.item);break;case"D":a=u(a,e);break;case"E":case"N":a[e]=n.rhs}return a}function g(a,e,n){if(a&&e&&n&&n.kind){for(var r=a,o=-1,t=n.path?n.path.length-1:0;++o<t;)"undefined"==typeof r[n.path[o]]&&(r[n.path[o]]="number"==typeof n.path[o]?[]:{}),r=r[n.path[o]];switch(n.kind){case"A":c(n.path?r[n.path[o]]:r,n.index,n.item);break;case"D":delete r[n.path[o]];break;case"E":case"N":r[n.path[o]]=n.rhs}}}function m(a,e,n){if(n.path&&n.path.length){var r,o=a[e],t=n.path.length-1;for(r=0;r<t;r++)o=o[n.path[r]];switch(n.kind){case"A":m(o[n.path[r]],n.index,n.item);break;case"D":case"E":o[n.path[r]]=n.lhs;break;case"N":delete o[n.path[r]]}}else switch(n.kind){case"A":m(a[e],n.index,n.item);break;case"D":case"E":a[e]=n.lhs;break;case"N":a=u(a,e)}return a}function f(a,e,n){if(a&&e&&n&&n.kind){var r,o,t=a;for(o=n.path.length-1,r=0;r<o;r++)"undefined"==typeof t[n.path[r]]&&(t[n.path[r]]={}),t=t[n.path[r]];switch(n.kind){case"A":m(t[n.path[r]],n.index,n.item);break;case"D":case"E":t[n.path[r]]=n.lhs;break;case"N":delete t[n.path[r]]}}}function p(a,e,n){a&&e&&d(a,e,(function(r){n&&!n(a,e,r)||g(a,e,r)}))}function y(a){return"color: "+E[a].color+"; font-weight: bold"}function k(a){var e=a.kind,n=a.path,r=a.lhs,o=a.rhs,t=a.index,i=a.item;switch(e){case"E":return[n.join("."),r,"\u2192",o];case"N":return[n.join("."),o];case"D":return[n.join(".")];case"A":return[n.join(".")+"["+t+"]",i];default:return[]}}function b(a,e,n,r){var o=h(a,e);try{r?n.groupCollapsed("diff"):n.group("diff")}catch(a){n.log("diff")}o?o.forEach((function(a){var e=a.kind,r=k(a);n.log.apply(n,["%c "+E[e].text,y(e)].concat(z(r)))})):n.log("\u2014\u2014 no diff \u2014\u2014");try{n.groupEnd()}catch(a){n.log("\u2014\u2014 diff end \u2014\u2014 ")}}function v(a,e,n,r){switch("undefined"==typeof a?"undefined":L(a)){case"object":return"function"==typeof a[r]?a[r].apply(a,z(n)):a[r];case"function":return a(e);default:return a}}function S(a){var e=a.timestamp,n=a.duration;return function(a,r,o){var t=["action"];return t.push("%c"+String(a.type)),e&&t.push("%c@ "+r),n&&t.push("%c(in "+o.toFixed(2)+" ms)"),t.join(" ")}}function C(a,e){var n=e.logger,r=e.actionTransformer,o=e.titleFormatter,t=void 0===o?S(e):o,i=e.collapsed,l=e.colors,u=e.level,s=e.diff,d="undefined"==typeof e.titleFormatter;a.forEach((function(o,h){var c=o.started,g=o.startedTime,m=o.action,f=o.prevState,p=o.error,y=o.took,k=o.nextState,S=a[h+1];S&&(k=S.prevState,y=S.started-c);var C=r(m),M="function"==typeof i?i((function(){return k}),m,o):i,w=T(g),B=l.title?"color: "+l.title(C)+";":"",P=["color: gray; font-weight: lighter;"];P.push(B),e.timestamp&&P.push("color: gray; font-weight: lighter;"),e.duration&&P.push("color: gray; font-weight: lighter;");var A=t(C,w,y);try{M?l.title&&d?n.groupCollapsed.apply(n,["%c "+A].concat(P)):n.groupCollapsed(A):l.title&&d?n.group.apply(n,["%c "+A].concat(P)):n.group(A)}catch(a){n.log(A)}var K=v(u,C,[f],"prevState"),L=v(u,C,[C],"action"),z=v(u,C,[p,f],"error"),N=v(u,C,[k],"nextState");if(K)if(l.prevState){var E="color: "+l.prevState(f)+"; font-weight: bold";n[K]("%c prev state",E,f)}else n[K]("prev state",f);if(L)if(l.action){var R="color: "+l.action(C)+"; font-weight: bold";n[L]("%c action    ",R,C)}else n[L]("action    ",C);if(p&&z)if(l.error){var D="color: "+l.error(p,f)+"; font-weight: bold;";n[z]("%c error     ",D,p)}else n[z]("error     ",p);if(N)if(l.nextState){var G="color: "+l.nextState(k)+"; font-weight: bold";n[N]("%c next state",G,k)}else n[N]("next state",k);s&&b(f,k,n,M);try{n.groupEnd()}catch(a){n.log("\u2014\u2014 log end \u2014\u2014")}}))}function M(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=Object.assign({},R,a),n=e.logger,r=e.stateTransformer,o=e.errorTransformer,t=e.predicate,i=e.logErrors,l=e.diffPredicate;if("undefined"==typeof n)return function(){return function(a){return function(e){return a(e)}}};if(a.getState&&a.dispatch)return console.error("[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\n// Logger with default options\nimport { logger } from 'redux-logger'\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\nimport createLogger from 'redux-logger'\nconst logger = createLogger({\n  // ...options\n});\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n"),function(){return function(a){return function(e){return a(e)}}};var u=[];return function(a){var n=a.getState;return function(a){return function(s){if("function"==typeof t&&!t(n,s))return a(s);var d={};u.push(d),d.started=K.now(),d.startedTime=new Date,d.prevState=r(n()),d.action=s;var h=void 0;if(i)try{h=a(s)}catch(a){d.error=o(a)}else h=a(s);d.took=K.now()-d.started,d.nextState=r(n());var c=e.diff&&"function"==typeof l?l(n,s):e.diff;if(C(u,Object.assign({},e,{diff:c})),u.length=0,d.error)throw d.error;return h}}}}var w,B,P=function(a,e){return new Array(e+1).join(a)},A=function(a,e){return P("0",e-a.toString().length)+a},T=function(a){return A(a.getHours(),2)+":"+A(a.getMinutes(),2)+":"+A(a.getSeconds(),2)+"."+A(a.getMilliseconds(),3)},K="undefined"!=typeof performance&&null!==performance&&"function"==typeof performance.now?performance:Date,L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},z=function(a){if(Array.isArray(a)){for(var e=0,n=Array(a.length);e<a.length;e++)n[e]=a[e];return n}return Array.from(a)},N=[];w="object"===("undefined"==typeof a?"undefined":L(a))&&a?a:"undefined"!=typeof window?window:{},(B=w.DeepDiff)&&N.push((function(){"undefined"!=typeof B&&w.DeepDiff===h&&(w.DeepDiff=B,B=void 0)})),n(o,r),n(t,r),n(i,r),n(l,r),Object.defineProperties(h,{diff:{value:h,enumerable:!0},observableDiff:{value:d,enumerable:!0},applyDiff:{value:p,enumerable:!0},applyChange:{value:g,enumerable:!0},revertChange:{value:f,enumerable:!0},isConflict:{value:function(){return"undefined"!=typeof B},enumerable:!0},noConflict:{value:function(){return N&&(N.forEach((function(a){a()})),N=null),h},enumerable:!0}});var E={E:{color:"#2196F3",text:"CHANGED:"},N:{color:"#4CAF50",text:"ADDED:"},D:{color:"#F44336",text:"DELETED:"},A:{color:"#2196F3",text:"ARRAY:"}},R={level:"log",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(a){return a},actionTransformer:function(a){return a},errorTransformer:function(a){return a},colors:{title:function(){return"inherit"},prevState:function(){return"#9E9E9E"},action:function(){return"#03A9F4"},nextState:function(){return"#4CAF50"},error:function(){return"#F20404"}},diff:!1,diffPredicate:void 0,transformer:void 0},D=function(){var a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=a.dispatch,n=a.getState;return"function"==typeof e||"function"==typeof n?M()({dispatch:e,getState:n}):void console.error("\n[redux-logger v3] BREAKING CHANGE\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\n[redux-logger v3] Change\n[redux-logger v3] import createLogger from 'redux-logger'\n[redux-logger v3] to\n[redux-logger v3] import { createLogger } from 'redux-logger'\n")};e.defaults=R,e.createLogger=M,e.logger=D,e.default=D,Object.defineProperty(e,"__esModule",{value:!0})}(e)}).call(this,n(23))},function(a,e){},function(a,e,n){(function(a){function n(a,e){for(var n=0,r=a.length-1;r>=0;r--){var o=a[r];"."===o?a.splice(r,1):".."===o?(a.splice(r,1),n++):n&&(a.splice(r,1),n--)}if(e)for(;n--;n)a.unshift("..");return a}function r(a,e){if(a.filter)return a.filter(e);for(var n=[],r=0;r<a.length;r++)e(a[r],r,a)&&n.push(a[r]);return n}e.resolve=function(){for(var e="",o=!1,t=arguments.length-1;t>=-1&&!o;t--){var i=t>=0?arguments[t]:a.cwd();if("string"!==typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(e=i+"/"+e,o="/"===i.charAt(0))}return(o?"/":"")+(e=n(r(e.split("/"),(function(a){return!!a})),!o).join("/"))||"."},e.normalize=function(a){var t=e.isAbsolute(a),i="/"===o(a,-1);return(a=n(r(a.split("/"),(function(a){return!!a})),!t).join("/"))||t||(a="."),a&&i&&(a+="/"),(t?"/":"")+a},e.isAbsolute=function(a){return"/"===a.charAt(0)},e.join=function(){var a=Array.prototype.slice.call(arguments,0);return e.normalize(r(a,(function(a,e){if("string"!==typeof a)throw new TypeError("Arguments to path.join must be strings");return a})).join("/"))},e.relative=function(a,n){function r(a){for(var e=0;e<a.length&&""===a[e];e++);for(var n=a.length-1;n>=0&&""===a[n];n--);return e>n?[]:a.slice(e,n-e+1)}a=e.resolve(a).substr(1),n=e.resolve(n).substr(1);for(var o=r(a.split("/")),t=r(n.split("/")),i=Math.min(o.length,t.length),l=i,u=0;u<i;u++)if(o[u]!==t[u]){l=u;break}var s=[];for(u=l;u<o.length;u++)s.push("..");return(s=s.concat(t.slice(l))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(a){if("string"!==typeof a&&(a+=""),0===a.length)return".";for(var e=a.charCodeAt(0),n=47===e,r=-1,o=!0,t=a.length-1;t>=1;--t)if(47===(e=a.charCodeAt(t))){if(!o){r=t;break}}else o=!1;return-1===r?n?"/":".":n&&1===r?"/":a.slice(0,r)},e.basename=function(a,e){var n=function(a){"string"!==typeof a&&(a+="");var e,n=0,r=-1,o=!0;for(e=a.length-1;e>=0;--e)if(47===a.charCodeAt(e)){if(!o){n=e+1;break}}else-1===r&&(o=!1,r=e+1);return-1===r?"":a.slice(n,r)}(a);return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},e.extname=function(a){"string"!==typeof a&&(a+="");for(var e=-1,n=0,r=-1,o=!0,t=0,i=a.length-1;i>=0;--i){var l=a.charCodeAt(i);if(47!==l)-1===r&&(o=!1,r=i+1),46===l?-1===e?e=i:1!==t&&(t=1):-1!==e&&(t=-1);else if(!o){n=i+1;break}}return-1===e||-1===r||0===t||1===t&&e===r-1&&e===n+1?"":a.slice(e,r)};var o="b"==="ab".substr(-1)?function(a,e,n){return a.substr(e,n)}:function(a,e,n){return e<0&&(e=a.length+e),a.substr(e,n)}}).call(this,n(17))},,function(a,e,n){var r=function(a){"use strict";var e,n=Object.prototype,r=n.hasOwnProperty,o="function"===typeof Symbol?Symbol:{},t=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function u(a,e,n){return Object.defineProperty(a,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),a[e]}try{u({},"")}catch(z){u=function(a,e,n){return a[e]=n}}function s(a,e,n,r){var o=e&&e.prototype instanceof p?e:p,t=Object.create(o.prototype),i=new T(r||[]);return t._invoke=function(a,e,n){var r=h;return function(o,t){if(r===g)throw new Error("Generator is already running");if(r===m){if("throw"===o)throw t;return L()}for(n.method=o,n.arg=t;;){var i=n.delegate;if(i){var l=B(i,n);if(l){if(l===f)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===h)throw r=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=g;var u=d(a,e,n);if("normal"===u.type){if(r=n.done?m:c,u.arg===f)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=m,n.method="throw",n.arg=u.arg)}}}(a,n,i),t}function d(a,e,n){try{return{type:"normal",arg:a.call(e,n)}}catch(z){return{type:"throw",arg:z}}}a.wrap=s;var h="suspendedStart",c="suspendedYield",g="executing",m="completed",f={};function p(){}function y(){}function k(){}var b={};b[t]=function(){return this};var v=Object.getPrototypeOf,S=v&&v(v(K([])));S&&S!==n&&r.call(S,t)&&(b=S);var C=k.prototype=p.prototype=Object.create(b);function M(a){["next","throw","return"].forEach((function(e){u(a,e,(function(a){return this._invoke(e,a)}))}))}function w(a,e){function n(o,t,i,l){var u=d(a[o],a,t);if("throw"!==u.type){var s=u.arg,h=s.value;return h&&"object"===typeof h&&r.call(h,"__await")?e.resolve(h.__await).then((function(a){n("next",a,i,l)}),(function(a){n("throw",a,i,l)})):e.resolve(h).then((function(a){s.value=a,i(s)}),(function(a){return n("throw",a,i,l)}))}l(u.arg)}var o;this._invoke=function(a,r){function t(){return new e((function(e,o){n(a,r,e,o)}))}return o=o?o.then(t,t):t()}}function B(a,n){var r=a.iterator[n.method];if(r===e){if(n.delegate=null,"throw"===n.method){if(a.iterator.return&&(n.method="return",n.arg=e,B(a,n),"throw"===n.method))return f;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return f}var o=d(r,a.iterator,n.arg);if("throw"===o.type)return n.method="throw",n.arg=o.arg,n.delegate=null,f;var t=o.arg;return t?t.done?(n[a.resultName]=t.value,n.next=a.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,f):t:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,f)}function P(a){var e={tryLoc:a[0]};1 in a&&(e.catchLoc=a[1]),2 in a&&(e.finallyLoc=a[2],e.afterLoc=a[3]),this.tryEntries.push(e)}function A(a){var e=a.completion||{};e.type="normal",delete e.arg,a.completion=e}function T(a){this.tryEntries=[{tryLoc:"root"}],a.forEach(P,this),this.reset(!0)}function K(a){if(a){var n=a[t];if(n)return n.call(a);if("function"===typeof a.next)return a;if(!isNaN(a.length)){var o=-1,i=function n(){for(;++o<a.length;)if(r.call(a,o))return n.value=a[o],n.done=!1,n;return n.value=e,n.done=!0,n};return i.next=i}}return{next:L}}function L(){return{value:e,done:!0}}return y.prototype=C.constructor=k,k.constructor=y,y.displayName=u(k,l,"GeneratorFunction"),a.isGeneratorFunction=function(a){var e="function"===typeof a&&a.constructor;return!!e&&(e===y||"GeneratorFunction"===(e.displayName||e.name))},a.mark=function(a){return Object.setPrototypeOf?Object.setPrototypeOf(a,k):(a.__proto__=k,u(a,l,"GeneratorFunction")),a.prototype=Object.create(C),a},a.awrap=function(a){return{__await:a}},M(w.prototype),w.prototype[i]=function(){return this},a.AsyncIterator=w,a.async=function(e,n,r,o,t){void 0===t&&(t=Promise);var i=new w(s(e,n,r,o),t);return a.isGeneratorFunction(n)?i:i.next().then((function(a){return a.done?a.value:i.next()}))},M(C),u(C,l,"Generator"),C[t]=function(){return this},C.toString=function(){return"[object Generator]"},a.keys=function(a){var e=[];for(var n in a)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in a)return n.value=r,n.done=!1,n}return n.done=!0,n}},a.values=K,T.prototype={constructor:T,reset:function(a){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(A),!a)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var a=this.tryEntries[0].completion;if("throw"===a.type)throw a.arg;return this.rval},dispatchException:function(a){if(this.done)throw a;var n=this;function o(r,o){return l.type="throw",l.arg=a,n.next=r,o&&(n.method="next",n.arg=e),!!o}for(var t=this.tryEntries.length-1;t>=0;--t){var i=this.tryEntries[t],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=r.call(i,"catchLoc"),s=r.call(i,"finallyLoc");if(u&&s){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(a,e){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var t=o;break}}t&&("break"===a||"continue"===a)&&t.tryLoc<=e&&e<=t.finallyLoc&&(t=null);var i=t?t.completion:{};return i.type=a,i.arg=e,t?(this.method="next",this.next=t.finallyLoc,f):this.complete(i)},complete:function(a,e){if("throw"===a.type)throw a.arg;return"break"===a.type||"continue"===a.type?this.next=a.arg:"return"===a.type?(this.rval=this.arg=a.arg,this.method="return",this.next="end"):"normal"===a.type&&e&&(this.next=e),f},finish:function(a){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===a)return this.complete(n.completion,n.afterLoc),A(n),f}},catch:function(a){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===a){var r=n.completion;if("throw"===r.type){var o=r.arg;A(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(a,n,r){return this.delegate={iterator:K(a),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),f}},a}(a.exports);try{regeneratorRuntime=r}catch(o){Function("r","regeneratorRuntime = r")(r)}},function(a,e,n){"use strict";var r=n(7),o=n(24),t=n(52),i=n(30);function l(a){var e=new t(a),n=o(t.prototype.request,e);return r.extend(n,t.prototype,e),r.extend(n,e),n}var u=l(n(27));u.Axios=t,u.create=function(a){return l(i(u.defaults,a))},u.Cancel=n(31),u.CancelToken=n(65),u.isCancel=n(26),u.all=function(a){return Promise.all(a)},u.spread=n(66),u.isAxiosError=n(67),a.exports=u,a.exports.default=u},function(a,e,n){"use strict";var r=n(7),o=n(25),t=n(53),i=n(54),l=n(30);function u(a){this.defaults=a,this.interceptors={request:new t,response:new t}}u.prototype.request=function(a){"string"===typeof a?(a=arguments[1]||{}).url=arguments[0]:a=a||{},(a=l(this.defaults,a)).method?a.method=a.method.toLowerCase():this.defaults.method?a.method=this.defaults.method.toLowerCase():a.method="get";var e=[i,void 0],n=Promise.resolve(a);for(this.interceptors.request.forEach((function(a){e.unshift(a.fulfilled,a.rejected)})),this.interceptors.response.forEach((function(a){e.push(a.fulfilled,a.rejected)}));e.length;)n=n.then(e.shift(),e.shift());return n},u.prototype.getUri=function(a){return a=l(this.defaults,a),o(a.url,a.params,a.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(a){u.prototype[a]=function(e,n){return this.request(l(n||{},{method:a,url:e,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(a){u.prototype[a]=function(e,n,r){return this.request(l(r||{},{method:a,url:e,data:n}))}})),a.exports=u},function(a,e,n){"use strict";var r=n(7);function o(){this.handlers=[]}o.prototype.use=function(a,e){return this.handlers.push({fulfilled:a,rejected:e}),this.handlers.length-1},o.prototype.eject=function(a){this.handlers[a]&&(this.handlers[a]=null)},o.prototype.forEach=function(a){r.forEach(this.handlers,(function(e){null!==e&&a(e)}))},a.exports=o},function(a,e,n){"use strict";var r=n(7),o=n(55),t=n(26),i=n(27);function l(a){a.cancelToken&&a.cancelToken.throwIfRequested()}a.exports=function(a){return l(a),a.headers=a.headers||{},a.data=o(a.data,a.headers,a.transformRequest),a.headers=r.merge(a.headers.common||{},a.headers[a.method]||{},a.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(e){delete a.headers[e]})),(a.adapter||i.adapter)(a).then((function(e){return l(a),e.data=o(e.data,e.headers,a.transformResponse),e}),(function(e){return t(e)||(l(a),e&&e.response&&(e.response.data=o(e.response.data,e.response.headers,a.transformResponse))),Promise.reject(e)}))}},function(a,e,n){"use strict";var r=n(7);a.exports=function(a,e,n){return r.forEach(n,(function(n){a=n(a,e)})),a}},function(a,e,n){"use strict";var r=n(7);a.exports=function(a,e){r.forEach(a,(function(n,r){r!==e&&r.toUpperCase()===e.toUpperCase()&&(a[e]=n,delete a[r])}))}},function(a,e,n){"use strict";var r=n(29);a.exports=function(a,e,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?e(r("Request failed with status code "+n.status,n.config,null,n.request,n)):a(n)}},function(a,e,n){"use strict";a.exports=function(a,e,n,r,o){return a.config=e,n&&(a.code=n),a.request=r,a.response=o,a.isAxiosError=!0,a.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},a}},function(a,e,n){"use strict";var r=n(7);a.exports=r.isStandardBrowserEnv()?{write:function(a,e,n,o,t,i){var l=[];l.push(a+"="+encodeURIComponent(e)),r.isNumber(n)&&l.push("expires="+new Date(n).toGMTString()),r.isString(o)&&l.push("path="+o),r.isString(t)&&l.push("domain="+t),!0===i&&l.push("secure"),document.cookie=l.join("; ")},read:function(a){var e=document.cookie.match(new RegExp("(^|;\\s*)("+a+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove:function(a){this.write(a,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(a,e,n){"use strict";var r=n(61),o=n(62);a.exports=function(a,e){return a&&!r(e)?o(a,e):e}},function(a,e,n){"use strict";a.exports=function(a){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(a)}},function(a,e,n){"use strict";a.exports=function(a,e){return e?a.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):a}},function(a,e,n){"use strict";var r=n(7),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];a.exports=function(a){var e,n,t,i={};return a?(r.forEach(a.split("\n"),(function(a){if(t=a.indexOf(":"),e=r.trim(a.substr(0,t)).toLowerCase(),n=r.trim(a.substr(t+1)),e){if(i[e]&&o.indexOf(e)>=0)return;i[e]="set-cookie"===e?(i[e]?i[e]:[]).concat([n]):i[e]?i[e]+", "+n:n}})),i):i}},function(a,e,n){"use strict";var r=n(7);a.exports=r.isStandardBrowserEnv()?function(){var a,e=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(a){var r=a;return e&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return a=o(window.location.href),function(e){var n=r.isString(e)?o(e):e;return n.protocol===a.protocol&&n.host===a.host}}():function(){return!0}},function(a,e,n){"use strict";var r=n(31);function o(a){if("function"!==typeof a)throw new TypeError("executor must be a function.");var e;this.promise=new Promise((function(a){e=a}));var n=this;a((function(a){n.reason||(n.reason=new r(a),e(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var a;return{token:new o((function(e){a=e})),cancel:a}},a.exports=o},function(a,e,n){"use strict";a.exports=function(a){return function(e){return a.apply(null,e)}}},function(a,e,n){"use strict";a.exports=function(a){return"object"===typeof a&&!0===a.isAxiosError}},function(a,e){e.list=[{code:"AD",name:"Andorra",phone:"376",flag:"\ud83c\udde6\ud83c\udde9"},{code:"AE",name:"United Arab Emirates",phone:"971",flag:"\ud83c\udde6\ud83c\uddea"},{code:"AF",name:"Afghanistan",phone:"93",flag:"\ud83c\udde6\ud83c\uddeb"},{code:"AG",name:"Antigua and Barbuda",phone:"1268",flag:"\ud83c\udde6\ud83c\uddec"},{code:"AI",name:"Anguilla",phone:"1264",flag:"\ud83c\udde6\ud83c\uddee"},{code:"AL",name:"Albania",phone:"355",flag:"\ud83c\udde6\ud83c\uddf1"},{code:"AM",name:"Armenia",phone:"374",flag:"\ud83c\udde6\ud83c\uddf2"},{code:"AO",name:"Angola",phone:"244",flag:"\ud83c\udde6\ud83c\uddf4"},{code:"AQ",name:"Antarctica",phone:"672",flag:"\ud83c\udde6\ud83c\uddf6"},{code:"AR",name:"Argentina",phone:"54",flag:"\ud83c\udde6\ud83c\uddf7"},{code:"AS",name:"American Samoa",phone:"1684",flag:"\ud83c\udde6\ud83c\uddf8"},{code:"AT",name:"Austria",phone:"43",flag:"\ud83c\udde6\ud83c\uddf9"},{code:"AU",name:"Australia",phone:"61",flag:"\ud83c\udde6\ud83c\uddfa"},{code:"AW",name:"Aruba",phone:"297",flag:"\ud83c\udde6\ud83c\uddfc"},{code:"AX",name:"\xc5land",phone:"358",flag:"\ud83c\udde6\ud83c\uddfd"},{code:"AZ",name:"Azerbaijan",phone:"994",flag:"\ud83c\udde6\ud83c\uddff"},{code:"BA",name:"Bosnia and Herzegovina",phone:"387",flag:"\ud83c\udde7\ud83c\udde6"},{code:"BB",name:"Barbados",phone:"1246",flag:"\ud83c\udde7\ud83c\udde7"},{code:"BD",name:"Bangladesh",phone:"880",flag:"\ud83c\udde7\ud83c\udde9"},{code:"BE",name:"Belgium",phone:"32",flag:"\ud83c\udde7\ud83c\uddea"},{code:"BF",name:"Burkina Faso",phone:"226",flag:"\ud83c\udde7\ud83c\uddeb"},{code:"BG",name:"Bulgaria",phone:"359",flag:"\ud83c\udde7\ud83c\uddec"},{code:"BH",name:"Bahrain",phone:"973",flag:"\ud83c\udde7\ud83c\udded"},{code:"BI",name:"Burundi",phone:"257",flag:"\ud83c\udde7\ud83c\uddee"},{code:"BJ",name:"Benin",phone:"229",flag:"\ud83c\udde7\ud83c\uddef"},{code:"BL",name:"Saint Barth\xe9lemy",phone:"590",flag:"\ud83c\udde7\ud83c\uddf1"},{code:"BM",name:"Bermuda",phone:"1441",flag:"\ud83c\udde7\ud83c\uddf2"},{code:"BN",name:"Brunei",phone:"673",flag:"\ud83c\udde7\ud83c\uddf3"},{code:"BO",name:"Bolivia",phone:"591",flag:"\ud83c\udde7\ud83c\uddf4"},{code:"BQ",name:"Bonaire",phone:"5997",flag:"\ud83c\udde7\ud83c\uddf6"},{code:"BR",name:"Brazil",phone:"55",flag:"\ud83c\udde7\ud83c\uddf7"},{code:"BS",name:"Bahamas",phone:"1242",flag:"\ud83c\udde7\ud83c\uddf8"},{code:"BT",name:"Bhutan",phone:"975",flag:"\ud83c\udde7\ud83c\uddf9"},{code:"BV",name:"Bouvet Island",phone:"47",flag:"\ud83c\udde7\ud83c\uddfb"},{code:"BW",name:"Botswana",phone:"267",flag:"\ud83c\udde7\ud83c\uddfc"},{code:"BY",name:"Belarus",phone:"375",flag:"\ud83c\udde7\ud83c\uddfe"},{code:"BZ",name:"Belize",phone:"501",flag:"\ud83c\udde7\ud83c\uddff"},{code:"CA",name:"Canada",phone:"1",flag:"\ud83c\udde8\ud83c\udde6"},{code:"CC",name:"Cocos [Keeling] Islands",phone:"61",flag:"\ud83c\udde8\ud83c\udde8"},{code:"CD",name:"Democratic Republic of the Congo",phone:"243",flag:"\ud83c\udde8\ud83c\udde9"},{code:"CF",name:"Central African Republic",phone:"236",flag:"\ud83c\udde8\ud83c\uddeb"},{code:"CG",name:"Republic of the Congo",phone:"242",flag:"\ud83c\udde8\ud83c\uddec"},{code:"CH",name:"Switzerland",phone:"41",flag:"\ud83c\udde8\ud83c\udded"},{code:"CI",name:"Ivory Coast",phone:"225",flag:"\ud83c\udde8\ud83c\uddee"},{code:"CK",name:"Cook Islands",phone:"682",flag:"\ud83c\udde8\ud83c\uddf0"},{code:"CL",name:"Chile",phone:"56",flag:"\ud83c\udde8\ud83c\uddf1"},{code:"CM",name:"Cameroon",phone:"237",flag:"\ud83c\udde8\ud83c\uddf2"},{code:"CN",name:"China",phone:"86",flag:"\ud83c\udde8\ud83c\uddf3"},{code:"CO",name:"Colombia",phone:"57",flag:"\ud83c\udde8\ud83c\uddf4"},{code:"CR",name:"Costa Rica",phone:"506",flag:"\ud83c\udde8\ud83c\uddf7"},{code:"CU",name:"Cuba",phone:"53",flag:"\ud83c\udde8\ud83c\uddfa"},{code:"CV",name:"Cape Verde",phone:"238",flag:"\ud83c\udde8\ud83c\uddfb"},{code:"CW",name:"Curacao",phone:"5999",flag:"\ud83c\udde8\ud83c\uddfc"},{code:"CX",name:"Christmas Island",phone:"61",flag:"\ud83c\udde8\ud83c\uddfd"},{code:"CY",name:"Cyprus",phone:"357",flag:"\ud83c\udde8\ud83c\uddfe"},{code:"CZ",name:"Czech Republic",phone:"420",flag:"\ud83c\udde8\ud83c\uddff"},{code:"DE",name:"Germany",phone:"49",flag:"\ud83c\udde9\ud83c\uddea"},{code:"DJ",name:"Djibouti",phone:"253",flag:"\ud83c\udde9\ud83c\uddef"},{code:"DK",name:"Denmark",phone:"45",flag:"\ud83c\udde9\ud83c\uddf0"},{code:"DM",name:"Dominica",phone:"1767",flag:"\ud83c\udde9\ud83c\uddf2"},{code:"DO",name:"Dominican Republic",phone:"1809,1829,1849",flag:"\ud83c\udde9\ud83c\uddf4"},{code:"DZ",name:"Algeria",phone:"213",flag:"\ud83c\udde9\ud83c\uddff"},{code:"EC",name:"Ecuador",phone:"593",flag:"\ud83c\uddea\ud83c\udde8"},{code:"EE",name:"Estonia",phone:"372",flag:"\ud83c\uddea\ud83c\uddea"},{code:"EG",name:"Egypt",phone:"20",flag:"\ud83c\uddea\ud83c\uddec"},{code:"EH",name:"Western Sahara",phone:"212",flag:"\ud83c\uddea\ud83c\udded"},{code:"ER",name:"Eritrea",phone:"291",flag:"\ud83c\uddea\ud83c\uddf7"},{code:"ES",name:"Spain",phone:"34",flag:"\ud83c\uddea\ud83c\uddf8"},{code:"ET",name:"Ethiopia",phone:"251",flag:"\ud83c\uddea\ud83c\uddf9"},{code:"FI",name:"Finland",phone:"358",flag:"\ud83c\uddeb\ud83c\uddee"},{code:"FJ",name:"Fiji",phone:"679",flag:"\ud83c\uddeb\ud83c\uddef"},{code:"FK",name:"Falkland Islands",phone:"500",flag:"\ud83c\uddeb\ud83c\uddf0"},{code:"FM",name:"Micronesia",phone:"691",flag:"\ud83c\uddeb\ud83c\uddf2"},{code:"FO",name:"Faroe Islands",phone:"298",flag:"\ud83c\uddeb\ud83c\uddf4"},{code:"FR",name:"France",phone:"33",flag:"\ud83c\uddeb\ud83c\uddf7"},{code:"GA",name:"Gabon",phone:"241",flag:"\ud83c\uddec\ud83c\udde6"},{code:"GB",name:"United Kingdom",phone:"44",flag:"\ud83c\uddec\ud83c\udde7"},{code:"GD",name:"Grenada",phone:"1473",flag:"\ud83c\uddec\ud83c\udde9"},{code:"GE",name:"Georgia",phone:"995",flag:"\ud83c\uddec\ud83c\uddea"},{code:"GF",name:"French Guiana",phone:"594",flag:"\ud83c\uddec\ud83c\uddeb"},{code:"GG",name:"Guernsey",phone:"44",flag:"\ud83c\uddec\ud83c\uddec"},{code:"GH",name:"Ghana",phone:"233",flag:"\ud83c\uddec\ud83c\udded"},{code:"GI",name:"Gibraltar",phone:"350",flag:"\ud83c\uddec\ud83c\uddee"},{code:"GL",name:"Greenland",phone:"299",flag:"\ud83c\uddec\ud83c\uddf1"},{code:"GM",name:"Gambia",phone:"220",flag:"\ud83c\uddec\ud83c\uddf2"},{code:"GN",name:"Guinea",phone:"224",flag:"\ud83c\uddec\ud83c\uddf3"},{code:"GP",name:"Guadeloupe",phone:"590",flag:"\ud83c\uddec\ud83c\uddf5"},{code:"GQ",name:"Equatorial Guinea",phone:"240",flag:"\ud83c\uddec\ud83c\uddf6"},{code:"GR",name:"Greece",phone:"30",flag:"\ud83c\uddec\ud83c\uddf7"},{code:"GS",name:"South Georgia and the South Sandwich Islands",phone:"500",flag:"\ud83c\uddec\ud83c\uddf8"},{code:"GT",name:"Guatemala",phone:"502",flag:"\ud83c\uddec\ud83c\uddf9"},{code:"GU",name:"Guam",phone:"1671",flag:"\ud83c\uddec\ud83c\uddfa"},{code:"GW",name:"Guinea-Bissau",phone:"245",flag:"\ud83c\uddec\ud83c\uddfc"},{code:"GY",name:"Guyana",phone:"592",flag:"\ud83c\uddec\ud83c\uddfe"},{code:"HK",name:"Hong Kong",phone:"852",flag:"\ud83c\udded\ud83c\uddf0"},{code:"HM",name:"Heard Island and McDonald Islands",phone:"61",flag:"\ud83c\udded\ud83c\uddf2"},{code:"HN",name:"Honduras",phone:"504",flag:"\ud83c\udded\ud83c\uddf3"},{code:"HR",name:"Croatia",phone:"385",flag:"\ud83c\udded\ud83c\uddf7"},{code:"HT",name:"Haiti",phone:"509",flag:"\ud83c\udded\ud83c\uddf9"},{code:"HU",name:"Hungary",phone:"36",flag:"\ud83c\udded\ud83c\uddfa"},{code:"ID",name:"Indonesia",phone:"62",flag:"\ud83c\uddee\ud83c\udde9"},{code:"IE",name:"Ireland",phone:"353",flag:"\ud83c\uddee\ud83c\uddea"},{code:"IL",name:"Israel",phone:"972",flag:"\ud83c\uddee\ud83c\uddf1"},{code:"IM",name:"Isle of Man",phone:"44",flag:"\ud83c\uddee\ud83c\uddf2"},{code:"IN",name:"India",phone:"91",flag:"\ud83c\uddee\ud83c\uddf3"},{code:"IO",name:"British Indian Ocean Territory",phone:"246",flag:"\ud83c\uddee\ud83c\uddf4"},{code:"IQ",name:"Iraq",phone:"964",flag:"\ud83c\uddee\ud83c\uddf6"},{code:"IR",name:"Iran",phone:"98",flag:"\ud83c\uddee\ud83c\uddf7"},{code:"IS",name:"Iceland",phone:"354",flag:"\ud83c\uddee\ud83c\uddf8"},{code:"IT",name:"Italy",phone:"39",flag:"\ud83c\uddee\ud83c\uddf9"},{code:"JE",name:"Jersey",phone:"44",flag:"\ud83c\uddef\ud83c\uddea"},{code:"JM",name:"Jamaica",phone:"1876",flag:"\ud83c\uddef\ud83c\uddf2"},{code:"JO",name:"Jordan",phone:"962",flag:"\ud83c\uddef\ud83c\uddf4"},{code:"JP",name:"Japan",phone:"81",flag:"\ud83c\uddef\ud83c\uddf5"},{code:"KE",name:"Kenya",phone:"254",flag:"\ud83c\uddf0\ud83c\uddea"},{code:"KG",name:"Kyrgyzstan",phone:"996",flag:"\ud83c\uddf0\ud83c\uddec"},{code:"KH",name:"Cambodia",phone:"855",flag:"\ud83c\uddf0\ud83c\udded"},{code:"KI",name:"Kiribati",phone:"686",flag:"\ud83c\uddf0\ud83c\uddee"},{code:"KM",name:"Comoros",phone:"269",flag:"\ud83c\uddf0\ud83c\uddf2"},{code:"KN",name:"Saint Kitts and Nevis",phone:"1869",flag:"\ud83c\uddf0\ud83c\uddf3"},{code:"KP",name:"North Korea",phone:"850",flag:"\ud83c\uddf0\ud83c\uddf5"},{code:"KR",name:"South Korea",phone:"82",flag:"\ud83c\uddf0\ud83c\uddf7"},{code:"KW",name:"Kuwait",phone:"965",flag:"\ud83c\uddf0\ud83c\uddfc"},{code:"KY",name:"Cayman Islands",phone:"1345",flag:"\ud83c\uddf0\ud83c\uddfe"},{code:"KZ",name:"Kazakhstan",phone:"76,77",flag:"\ud83c\uddf0\ud83c\uddff"},{code:"LA",name:"Laos",phone:"856",flag:"\ud83c\uddf1\ud83c\udde6"},{code:"LB",name:"Lebanon",phone:"961",flag:"\ud83c\uddf1\ud83c\udde7"},{code:"LC",name:"Saint Lucia",phone:"1758",flag:"\ud83c\uddf1\ud83c\udde8"},{code:"LI",name:"Liechtenstein",phone:"423",flag:"\ud83c\uddf1\ud83c\uddee"},{code:"LK",name:"Sri Lanka",phone:"94",flag:"\ud83c\uddf1\ud83c\uddf0"},{code:"LR",name:"Liberia",phone:"231",flag:"\ud83c\uddf1\ud83c\uddf7"},{code:"LS",name:"Lesotho",phone:"266",flag:"\ud83c\uddf1\ud83c\uddf8"},{code:"LT",name:"Lithuania",phone:"370",flag:"\ud83c\uddf1\ud83c\uddf9"},{code:"LU",name:"Luxembourg",phone:"352",flag:"\ud83c\uddf1\ud83c\uddfa"},{code:"LV",name:"Latvia",phone:"371",flag:"\ud83c\uddf1\ud83c\uddfb"},{code:"LY",name:"Libya",phone:"218",flag:"\ud83c\uddf1\ud83c\uddfe"},{code:"MA",name:"Morocco",phone:"212",flag:"\ud83c\uddf2\ud83c\udde6"},{code:"MC",name:"Monaco",phone:"377",flag:"\ud83c\uddf2\ud83c\udde8"},{code:"MD",name:"Moldova",phone:"373",flag:"\ud83c\uddf2\ud83c\udde9"},{code:"ME",name:"Montenegro",phone:"382",flag:"\ud83c\uddf2\ud83c\uddea"},{code:"MF",name:"Saint Martin",phone:"590",flag:"\ud83c\uddf2\ud83c\uddeb"},{code:"MG",name:"Madagascar",phone:"261",flag:"\ud83c\uddf2\ud83c\uddec"},{code:"MH",name:"Marshall Islands",phone:"692",flag:"\ud83c\uddf2\ud83c\udded"},{code:"MK",name:"North Macedonia",phone:"389",flag:"\ud83c\uddf2\ud83c\uddf0"},{code:"ML",name:"Mali",phone:"223",flag:"\ud83c\uddf2\ud83c\uddf1"},{code:"MM",name:"Myanmar [Burma]",phone:"95",flag:"\ud83c\uddf2\ud83c\uddf2"},{code:"MN",name:"Mongolia",phone:"976",flag:"\ud83c\uddf2\ud83c\uddf3"},{code:"MO",name:"Macao",phone:"853",flag:"\ud83c\uddf2\ud83c\uddf4"},{code:"MP",name:"Northern Mariana Islands",phone:"1670",flag:"\ud83c\uddf2\ud83c\uddf5"},{code:"MQ",name:"Martinique",phone:"596",flag:"\ud83c\uddf2\ud83c\uddf6"},{code:"MR",name:"Mauritania",phone:"222",flag:"\ud83c\uddf2\ud83c\uddf7"},{code:"MS",name:"Montserrat",phone:"1664",flag:"\ud83c\uddf2\ud83c\uddf8"},{code:"MT",name:"Malta",phone:"356",flag:"\ud83c\uddf2\ud83c\uddf9"},{code:"MU",name:"Mauritius",phone:"230",flag:"\ud83c\uddf2\ud83c\uddfa"},{code:"MV",name:"Maldives",phone:"960",flag:"\ud83c\uddf2\ud83c\uddfb"},{code:"MW",name:"Malawi",phone:"265",flag:"\ud83c\uddf2\ud83c\uddfc"},{code:"MX",name:"Mexico",phone:"52",flag:"\ud83c\uddf2\ud83c\uddfd"},{code:"MY",name:"Malaysia",phone:"60",flag:"\ud83c\uddf2\ud83c\uddfe"},{code:"MZ",name:"Mozambique",phone:"258",flag:"\ud83c\uddf2\ud83c\uddff"},{code:"NA",name:"Namibia",phone:"264",flag:"\ud83c\uddf3\ud83c\udde6"},{code:"NC",name:"New Caledonia",phone:"687",flag:"\ud83c\uddf3\ud83c\udde8"},{code:"NE",name:"Niger",phone:"227",flag:"\ud83c\uddf3\ud83c\uddea"},{code:"NF",name:"Norfolk Island",phone:"672",flag:"\ud83c\uddf3\ud83c\uddeb"},{code:"NG",name:"Nigeria",phone:"234",flag:"\ud83c\uddf3\ud83c\uddec"},{code:"NI",name:"Nicaragua",phone:"505",flag:"\ud83c\uddf3\ud83c\uddee"},{code:"NL",name:"Netherlands",phone:"31",flag:"\ud83c\uddf3\ud83c\uddf1"},{code:"NO",name:"Norway",phone:"47",flag:"\ud83c\uddf3\ud83c\uddf4"},{code:"NP",name:"Nepal",phone:"977",flag:"\ud83c\uddf3\ud83c\uddf5"},{code:"NR",name:"Nauru",phone:"674",flag:"\ud83c\uddf3\ud83c\uddf7"},{code:"NU",name:"Niue",phone:"683",flag:"\ud83c\uddf3\ud83c\uddfa"},{code:"NZ",name:"New Zealand",phone:"64",flag:"\ud83c\uddf3\ud83c\uddff"},{code:"OM",name:"Oman",phone:"968",flag:"\ud83c\uddf4\ud83c\uddf2"},{code:"PA",name:"Panama",phone:"507",flag:"\ud83c\uddf5\ud83c\udde6"},{code:"PE",name:"Peru",phone:"51",flag:"\ud83c\uddf5\ud83c\uddea"},{code:"PF",name:"French Polynesia",phone:"689",flag:"\ud83c\uddf5\ud83c\uddeb"},{code:"PG",name:"Papua New Guinea",phone:"675",flag:"\ud83c\uddf5\ud83c\uddec"},{code:"PH",name:"Philippines",phone:"63",flag:"\ud83c\uddf5\ud83c\udded"},{code:"PK",name:"Pakistan",phone:"92",flag:"\ud83c\uddf5\ud83c\uddf0"},{code:"PL",name:"Poland",phone:"48",flag:"\ud83c\uddf5\ud83c\uddf1"},{code:"PM",name:"Saint Pierre and Miquelon",phone:"508",flag:"\ud83c\uddf5\ud83c\uddf2"},{code:"PN",name:"Pitcairn Islands",phone:"64",flag:"\ud83c\uddf5\ud83c\uddf3"},{code:"PR",name:"Puerto Rico",phone:"1787,1939",flag:"\ud83c\uddf5\ud83c\uddf7"},{code:"PS",name:"Palestine",phone:"970",flag:"\ud83c\uddf5\ud83c\uddf8"},{code:"PT",name:"Portugal",phone:"351",flag:"\ud83c\uddf5\ud83c\uddf9"},{code:"PW",name:"Palau",phone:"680",flag:"\ud83c\uddf5\ud83c\uddfc"},{code:"PY",name:"Paraguay",phone:"595",flag:"\ud83c\uddf5\ud83c\uddfe"},{code:"QA",name:"Qatar",phone:"974",flag:"\ud83c\uddf6\ud83c\udde6"},{code:"RE",name:"R\xe9union",phone:"262",flag:"\ud83c\uddf7\ud83c\uddea"},{code:"RO",name:"Romania",phone:"40",flag:"\ud83c\uddf7\ud83c\uddf4"},{code:"RS",name:"Serbia",phone:"381",flag:"\ud83c\uddf7\ud83c\uddf8"},{code:"RU",name:"Russia",phone:"7",flag:"\ud83c\uddf7\ud83c\uddfa"},{code:"RW",name:"Rwanda",phone:"250",flag:"\ud83c\uddf7\ud83c\uddfc"},{code:"SA",name:"Saudi Arabia",phone:"966",flag:"\ud83c\uddf8\ud83c\udde6"},{code:"SB",name:"Solomon Islands",phone:"677",flag:"\ud83c\uddf8\ud83c\udde7"},{code:"SC",name:"Seychelles",phone:"248",flag:"\ud83c\uddf8\ud83c\udde8"},{code:"SD",name:"Sudan",phone:"249",flag:"\ud83c\uddf8\ud83c\udde9"},{code:"SE",name:"Sweden",phone:"46",flag:"\ud83c\uddf8\ud83c\uddea"},{code:"SG",name:"Singapore",phone:"65",flag:"\ud83c\uddf8\ud83c\uddec"},{code:"SH",name:"Saint Helena",phone:"290",flag:"\ud83c\uddf8\ud83c\udded"},{code:"SI",name:"Slovenia",phone:"386",flag:"\ud83c\uddf8\ud83c\uddee"},{code:"SJ",name:"Svalbard and Jan Mayen",phone:"4779",flag:"\ud83c\uddf8\ud83c\uddef"},{code:"SK",name:"Slovakia",phone:"421",flag:"\ud83c\uddf8\ud83c\uddf0"},{code:"SL",name:"Sierra Leone",phone:"232",flag:"\ud83c\uddf8\ud83c\uddf1"},{code:"SM",name:"San Marino",phone:"378",flag:"\ud83c\uddf8\ud83c\uddf2"},{code:"SN",name:"Senegal",phone:"221",flag:"\ud83c\uddf8\ud83c\uddf3"},{code:"SO",name:"Somalia",phone:"252",flag:"\ud83c\uddf8\ud83c\uddf4"},{code:"SR",name:"Suriname",phone:"597",flag:"\ud83c\uddf8\ud83c\uddf7"},{code:"SS",name:"South Sudan",phone:"211",flag:"\ud83c\uddf8\ud83c\uddf8"},{code:"ST",name:"S\xe3o Tom\xe9 and Pr\xedncipe",phone:"239",flag:"\ud83c\uddf8\ud83c\uddf9"},{code:"SV",name:"El Salvador",phone:"503",flag:"\ud83c\uddf8\ud83c\uddfb"},{code:"SX",name:"Sint Maarten",phone:"1721",flag:"\ud83c\uddf8\ud83c\uddfd"},{code:"SY",name:"Syria",phone:"963",flag:"\ud83c\uddf8\ud83c\uddfe"},{code:"SZ",name:"Swaziland",phone:"268",flag:"\ud83c\uddf8\ud83c\uddff"},{code:"TC",name:"Turks and Caicos Islands",phone:"1649",flag:"\ud83c\uddf9\ud83c\udde8"},{code:"TD",name:"Chad",phone:"235",flag:"\ud83c\uddf9\ud83c\udde9"},{code:"TF",name:"French Southern Territories",phone:"262",flag:"\ud83c\uddf9\ud83c\uddeb"},{code:"TG",name:"Togo",phone:"228",flag:"\ud83c\uddf9\ud83c\uddec"},{code:"TH",name:"Thailand",phone:"66",flag:"\ud83c\uddf9\ud83c\udded"},{code:"TJ",name:"Tajikistan",phone:"992",flag:"\ud83c\uddf9\ud83c\uddef"},{code:"TK",name:"Tokelau",phone:"690",flag:"\ud83c\uddf9\ud83c\uddf0"},{code:"TL",name:"East Timor",phone:"670",flag:"\ud83c\uddf9\ud83c\uddf1"},{code:"TM",name:"Turkmenistan",phone:"993",flag:"\ud83c\uddf9\ud83c\uddf2"},{code:"TN",name:"Tunisia",phone:"216",flag:"\ud83c\uddf9\ud83c\uddf3"},{code:"TO",name:"Tonga",phone:"676",flag:"\ud83c\uddf9\ud83c\uddf4"},{code:"TR",name:"Turkey",phone:"90",flag:"\ud83c\uddf9\ud83c\uddf7"},{code:"TT",name:"Trinidad and Tobago",phone:"1868",flag:"\ud83c\uddf9\ud83c\uddf9"},{code:"TV",name:"Tuvalu",phone:"688",flag:"\ud83c\uddf9\ud83c\uddfb"},{code:"TW",name:"Taiwan",phone:"886",flag:"\ud83c\uddf9\ud83c\uddfc"},{code:"TZ",name:"Tanzania",phone:"255",flag:"\ud83c\uddf9\ud83c\uddff"},{code:"UA",name:"Ukraine",phone:"380",flag:"\ud83c\uddfa\ud83c\udde6"},{code:"UG",name:"Uganda",phone:"256",flag:"\ud83c\uddfa\ud83c\uddec"},{code:"UM",name:"U.S. Minor Outlying Islands",phone:"1",flag:"\ud83c\uddfa\ud83c\uddf2"},{code:"US",name:"United States",phone:"1",flag:"\ud83c\uddfa\ud83c\uddf8"},{code:"UY",name:"Uruguay",phone:"598",flag:"\ud83c\uddfa\ud83c\uddfe"},{code:"UZ",name:"Uzbekistan",phone:"998",flag:"\ud83c\uddfa\ud83c\uddff"},{code:"VA",name:"Vatican City",phone:"39066,379",flag:"\ud83c\uddfb\ud83c\udde6"},{code:"VC",name:"Saint Vincent and the Grenadines",phone:"1784",flag:"\ud83c\uddfb\ud83c\udde8"},{code:"VE",name:"Venezuela",phone:"58",flag:"\ud83c\uddfb\ud83c\uddea"},{code:"VG",name:"British Virgin Islands",phone:"1284",flag:"\ud83c\uddfb\ud83c\uddec"},{code:"VI",name:"U.S. Virgin Islands",phone:"1340",flag:"\ud83c\uddfb\ud83c\uddee"},{code:"VN",name:"Vietnam",phone:"84",flag:"\ud83c\uddfb\ud83c\uddf3"},{code:"VU",name:"Vanuatu",phone:"678",flag:"\ud83c\uddfb\ud83c\uddfa"},{code:"WF",name:"Wallis and Futuna",phone:"681",flag:"\ud83c\uddfc\ud83c\uddeb"},{code:"WS",name:"Samoa",phone:"685",flag:"\ud83c\uddfc\ud83c\uddf8"},{code:"XK",name:"Kosovo",phone:"377,381,383,386",flag:"\ud83c\uddfd\ud83c\uddf0"},{code:"YE",name:"Yemen",phone:"967",flag:"\ud83c\uddfe\ud83c\uddea"},{code:"YT",name:"Mayotte",phone:"262",flag:"\ud83c\uddfe\ud83c\uddf9"},{code:"ZA",name:"South Africa",phone:"27",flag:"\ud83c\uddff\ud83c\udde6"},{code:"ZM",name:"Zambia",phone:"260",flag:"\ud83c\uddff\ud83c\uddf2"},{code:"ZW",name:"Zimbabwe",phone:"263",flag:"\ud83c\uddff\ud83c\uddfc"}]},function(a){a.exports=JSON.parse('{"AF":["Kabul","Kandah\u0101r","Maz\u0101r-e Shar\u012bf","Her\u0101t","Jal\u0101l\u0101b\u0101d","Kunduz","Ghazni","Balkh","Baghl\u0101n","Gardez","Kh\u014dst","Maymana","Khanabad","B\u0101z\u0101r-e Yak\u0101wlang","B\u0101z\u0101rak","Khulm","Taloqan","B\u0101my\u0101n","Pul-e Khumr\u012b","Shibirgh\u0101n","Charikar","Sar-e Pul","Zaranj","Paghm\u0101n","Asad\u0101b\u0101d","A\u012bbak","Fayzabad","Lashkar G\u0101h","Gereshk","Farah","Ghormach","Sh\u012bn\u1e0fan\u1e0f","Andkh\u014dy","Rust\u0101q","Qar\u0101wul","Nahr\u012bn","Baraki Barak"],"AX":[],"AL":["Tirana","Durr\xebs","Elbasan","Vlor\xeb","Shkod\xebr","Pogradec","Fier-\xc7if\xe7i","Patos","Kor\xe7\xeb","Fier","Berat","Lushnj\xeb","Kavaj\xeb","La\xe7","Gjirokast\xebr","Patos Fshat","Kruj\xeb"],"DZ":["Algiers","Boumerdas","Oran","T\xe9bessa","Constantine","Biskra","S\xe9tif","Batna","Bab Ezzouar","Annaba","Sidi Bel Abb\xe8s","Blida","Tiaret","Chlef","Bordj Bou Arreridj","Ech Chettia","Beja\xefa","Skikda","El Achir","Souk Ahras","Djelfa","Mascara","Jijel","M\xe9d\xe9a","Tizi Ouzou","B\xe9char","El Oued","Tlemcen","Relizane","Mostaganem","Ouargla","El Eulma","Sa\xefda","Guelma","Bordj el Kiffan","A\xefn Oussera","Khenchela","Laghouat","A\xefn Be\xefda","Baraki","Oum el Bouaghi","M\u2019Sila","Messaad","Barika","Gharda\xefa","Beni Mered","Aflou","El Khroub","Rouissat","Berrouaghia","Ksar el Boukhari","Khemis Miliana","Azzaba","Tamanrasset","A\xefn Touta","Cheria","Birkhadem","Chelghoum el A\xefd","Sidi A\xefssa","Larba\xe2","Mila","Bir el Ater","Sougueur","A\xefn Fakroun","Tolga","Es Senia","Bir el Djir","Akbou","Besbes","El Bayadh","Sidi Khaled","A\xefn Sefra","Frenda","Bougara","Hamma Bouziane","Reguiba","Tissemsilt","Meftah","Oued Rhiou","Boufarik","Sig","Ksar Chellala","Sidi Moussa","A\xefn Temouchent","R\xe2s el Oued","Lakhdaria","Drean","Regha\xefa","Boghni","Dar Chioukh","Sedrata","Hassi Messaoud","Djamaa","Bou\xefra","Manso\xfbra","A\xefn Defla","Telerghma","Remchi","Birine","Sour el Ghozlane","Metlili Chaamba","Khemis el Khechna","Timimoun","I-n-Salah","Touggourt","Merouana","Karkira","El Hadjar","Beni Saf","Tindouf","\u2019A\xefn el Turk","Boudouaou","Berriane","Oued Fodda","Bo\xfb Arfa","Adrar","El Attaf","El Affroun","\u2018A\xefn el Hadjel","Hennaya","Tazoult-Lambese","Draa el Mizan","Timizart","Sebdou","Tebesbest","Souma","Azazga","Rouached","H\xe9liopolis","Chetouane","\u2019A\xefn el Melh","El Hadjira","El Abiodh Sidi Cheikh","Mehdia daira de meghila","El Idrissia","Bougaa","Draa Ben Khedda","Dar el Be\xefda","A\xefn el Bya","Nedroma","Debila","Arris","\u2019A\xefn Deheb","Hammam Bou Hadjar","Sidi ech Chahmi","El Kala","A\xefn Arnat","Sidi Okba","Makouda","\u2019A\xefn Merane","R\xe2s el A\xefoun","Bordj Ghdir","Ouled Mimoun","Beni Douala","BABOR - VILLE","Mouza\xefa","Reggane","El Aouinet","Tamalous","A\xefn Kercha","Djidiouia","Barbacha","\u2019A\xefn el Bell","el hed","Kolea","Megarine","\u2019A\xefn Benian","Sfizef","Freha","L\u2019Arbaa Na\xeft Irathen","Oued Sly","Robbah","Bouinan","Meskiana","Lardjem","Sidi Amrane","Mekla","\u2019A\xefn Abid","A\xefn Bessem","A\xefn Smara","El Abadia","Hammamet","Ben Mehidi","\u2019A\xefn el Hammam","Tizi Gheniff","Cheraga","Charef","Theniet el Had","Bou Hanifia el Hamamat","Hadjout","Douera","Boukadir","Sidi Akkacha","El Amria","Dellys","Tirmitine","Bou Tlelis","El Kseur","Amizour","Didouche Mourad","Melouza","Tipasa","Sidi M\xe9rouane","Aoulef","Abou el Hassan","Arhribs","Sidi Abdelli","Salah Bey","Chiffa","Zeribet el Oued","Boumahra Ahmed","Ammi Moussa","Oued el Abtal","Bou Isma\xefl","Tizi-n-Tleta","Mazouna","Mansourah","A\xefn Taya","Zemoura","Feraoun","Chemini","Bensekrane","Oued el Alleug","Ta\xefbet","Tadma\xeft","Rouiba","Boudjima","Chorfa","El Tarf","Mers el Kebir"],"AS":[],"AD":["Andorra la Vella"],"AO":["Luanda","N\u2019dalatando","Huambo","Lobito","Benguela","Cuito","Lubango","Malanje","Namibe","Soio","Cabinda","U\xedge","Saurimo","Sumbe","Menongue","Caxito","Longonjo","Mbanza Kongo","Ca\xe1la","Luena","Lucapa"],"AI":[],"AQ":[],"AG":["Saint John\u2019s"],"AR":["Buenos Aires","C\xf3rdoba","Rosario","Mendoza","San Miguel de Tucum\xe1n","La Plata","Mar del Plata","Salta","Santa Fe","San Juan","Resistencia","Santiago del Estero","Corrientes","Posadas","Mor\xf3n","San Salvador de Jujuy","Bah\xeda Blanca","Paran\xe1","Merlo","Neuqu\xe9n","Jos\xe9 C. Paz","Quilmes","Pilar","Formosa","San Fernando del Valle de Catamarca","San Luis","Berazategui","La Rioja","San Miguel","R\xedo Cuarto","Balvanera","Concordia","Comodoro Rivadavia","Belgrano","San Nicol\xe1s de los Arroyos","Villa Lugano","Santa Rosa","San Rafael","Tandil","Villa Mercedes","San Carlos de Bariloche","Trelew","Villa Mar\xeda","Reconquista","Z\xe1rate","Rafaela","Pergamino","Olavarr\xeda","R\xedo Gallegos","Jun\xedn","San Mart\xedn","Presidencia Roque S\xe1enz Pe\xf1a","Luj\xe1n","Campana","Necochea","Gualeguaych\xfa","Barracas","Cipolletti","Gobernador G\xe1lvez","San Ram\xf3n de la Nueva Or\xe1n","Chimbas","General Roca","Venado Tuerto","Goya","Villa Carlos Paz","Concepci\xf3n del Uruguay","Don Torcuato","Puerto Madryn","Tartagal","Hurlingham","Santo Tom\xe9","San Francisco","San Pedro de Jujuy","Ushuaia","Punta Alta","General Pico","Colegiales","Ober\xe1","Chivilcoy","Puerto Eldorado","Azul","R\xedo Tercero","Los Polvorines","Mercedes","R\xedo Grande","Barranqueras","Yerba Buena","Libertador General San Mart\xedn","Viedma","Taf\xed Viejo","Boedo","Palpal\xe1","San Lorenzo","San Pedro","Cutral-C\xf3","Tres Arroyos","San Isidro","Villa Constituci\xf3n","Paso de los Libres","Santa Luc\xeda","Villa \xc1ngela","Villa de Mayo","General Pacheco","Chilecito","Lincoln","Tortuguitas","Pocito","Alta Gracia","Balcarce","Retiro","Ingeniero Pablo Nogu\xe9s","Alderetes","San Vicente","Castelli","Curuz\xfa Cuati\xe1","Caleta Olivia","Ca\xf1ada de G\xf3mez","Esperanza","Bell Ville","Nueve de Julio","Chacabuco","Villa Santa Rita","Caucete","Pontevedra","Gualeguay","Aguilares","Granadero Baigorria","Quitilipi","Puerto Iguaz\xfa","Villaguay","Casilda","General Jos\xe9 de San Mart\xedn","Zapala","Villa Regina","Tigre","Famaill\xe1","Chajar\xed","Mercedes","Centenario","Garup\xe1","Gobernador Virasora","Esquel","Adrogu\xe9","Cruz del Eje","Machagai","Villa Dolores","Termas de R\xedo Hondo","Charata","Capit\xe1n Berm\xfadez","Coronel Su\xe1rez","Las Bre\xf1as","Jes\xfas Mar\xeda","Fontana","Esquina","Rawson","Mu\xf1iz","Allen","Dolores","Plottier","Victoria","Jard\xedn Am\xe9rica","La Calera","Tres Isletas","La Paz","Monte Caseros","Veinticinco de Mayo","P\xe9rez","Marcos Ju\xe1rez","Embarcaci\xf3n","Monteros","San Pedro","San Mart\xedn de los Andes","Villa Gesell","Avellaneda","Santo Tom\xe9","Villa Ort\xfazar","Montecarlo","San Justo","Villa Allende","San Jos\xe9 de J\xe1chal","Arist\xf3bulo del Valle","Albard\xf3n","A\xf1atuya","De\xe1n Funes","Arroyo Seco"],"AM":["Yerevan","Gyumri","Vanadzor","Vagharshapat","Hrazdan","Abovyan","Kapan","Ararat","Armavir","Step\u2019anavan","Gavarr","Artashat","Goris"],"AW":["Oranjestad","Tanki Leendert"],"AU":["Sydney","Melbourne","Brisbane","Perth","Adelaide","Gold Coast","Canberra","Newcastle","Wollongong","Logan City","Geelong","Hobart","Townsville","Cairns","Toowoomba","Darwin","Rockingham","Launceston","Bendigo","Ballarat","Mandurah","Mackay","Bundaberg","Bunbury","Maitland","Rockhampton","Adelaide Hills","Melbourne City Centre","Hervey Bay","Reservoir","Craigieburn","Point Cook","Tamworth","Berwick","Blacktown","Pakenham","Port Macquarie","Glen Waverley","Werribee","Dubbo","Castle Hill","Orange","Hoppers Crossing","St Albans","Auburn","Baulkham Hills","Frankston","Sunbury","Saint Albans","Frankston East","Tarneit","Albany","Rowville","Mount Waverley","Bathurst","Southport","Mildura","Epping","Canning Vale","Preston","Bankstown","Shepparton","Surfers Paradise","Noble Park","Randwick","Gladstone","Baldivis","Kwinana","Maroubra","Dandenong","Narre Warren South","Hurstville","Merrylands","Mill Park","Warrnambool","Bundoora","Buderim","Doncaster East","Richmond","Mosman","Kellyville","Liverpool","Bentleigh East","Quakers Hill","Parramatta","Geraldton","Coffs Harbour","Croydon","Narre Warren","Ryde","Caboolture","Marrickville","Ferntree Gully","Coburg","Strathfield","Sydney Central Business District","Keysborough","Hampton Park","South Yarra","Alice Springs","Chatswood","Mount Gambier","Palmerston","Upper Coomera","Glen Iris","Traralgon","Kew","Campsie","Greenacre","Brunswick","Carlingford","Endeavour Hills","Northcote","Caroline Springs","South Morang","Ashfield","Armidale","Epping","Mornington","Robina","Wyndham Vale","Hawthorn","Dianella","Granville","Glenmore Park","Morphett Vale","Mount Isa","Thornlie","Brighton","Goulburn","Greystanes","Forest Lake","Lalor","Southbank","Hornsby","Dandenong North","Ellenbrook","Langwarrin","Glenroy","Busselton","Boronia","Cheltenham","Camberwell","Roxburgh Park","Cabramatta","Springvale","Mooroolbark","Malvern East","North Lakes","Morayfield","Hawthorn South","Glenferrie","Dee Why","Morley","Kirwan","Doreen","Doncaster","Truganina","Carrum Downs","Thomastown","Saint Kilda","Greensborough","Essendon","Kallangur","Punchbowl","Clayton","Balwyn North","Gawler"],"AT":["Vienna","Graz","Linz","Favoriten","Donaustadt","Floridsdorf","Salzburg","Innsbruck","Ottakring","Simmering","Meidling","Klagenfurt am W\xf6rthersee","Villach","Hernals","Hietzing","Dornbirn","Wiener Neustadt","Steyr","H\xf6tting","Feldkirch","Jakomini","Pradl","Lend","Bregenz","Gries","Baden","Geidorf","Weinzierl bei Krems","Lustenau","Sankt P\xf6lten","M\xf6dling","Eggenberg","Sankt Peter"],"AZ":["Baku","Ganja","Sumqay\u0131t","Lankaran","Yevlakh","Mingelchaur","Saatl\u0131","Qara\xe7uxur","\u015eirvan","Bak\u0131xanov","Nakhchivan","Sheki","Xankandi","Bilajari","Ma\u015fta\u011fa","A\u011fdam","Khirdalan","Barda","Xa\xe7maz","Salyan","H\xf6vsan","Jalilabad","Shamkhor","Geoktschai","Agdzhabedy","Imishli","L\xf6kbatan","Shamakhi","Sabirabad","Amirdzhan","Fizuli","Buzovna","Biny Selo","A\u011fda\u015f","Divichibazar","Hac\u0131qabul","Quba","Zabrat","Sabun\xe7u"],"BS":["Nassau","Lucaya","Freeport"],"BH":["Manama","Al Muharraq","Ar Rif\u0101\u2018","D\u0101r Kulayb","Mad\u012bnat \u1e28amad","Mad\u012bnat \u2018\u012as\xe1","Sitrah","Jidd \u1e28af\u015f"],"BD":["Dhaka","Chittagong","Khulna","R\u0101jsh\u0101hi","Comilla","Shibganj","Natore","Rangpur","Tungi","Narsingdi","Bagerhat","Cox\u2019s B\u0101z\u0101r","Jessore","N\u0101garpur","Sylhet","Mymensingh","N\u0101r\u0101yanganj","Bogra","Din\u0101jpur","Baris\u0101l","Saidpur","P\u0101r Naogaon","P\u0101bna","Paltan","T\u0101ng\u0101il","Jam\u0101lpur","Puthia","Naw\u0101bganj","Kushtia","Son\u0101rgaon","S\u0101tkhira","Sirajganj","Far\u012bdpur","Sherpur","Bhairab B\u0101z\u0101r","Sh\u0101hz\u0101dpur","Bhola","Azimpur","Kishorganj","Bibir Hat","Habiganj","Madaripur","Feni","L\u0101ksh\u0101m","Ishurdi","Sarish\u0101b\u0101ri","Netrakona","Joypur H\u0101t","Th\u0101kurgaon","P\u0101lang","Lalmonirhat","R\u0101ipur","Tungip\u0101ra","Lakshm\u012bpur","Maulavi B\u0101z\u0101r","Joymontop","R\u0101mganj","Narail","Pirojpur","Sandw\u012bp","S\u0101tkania","Patiya","Khagrachhari","Chilm\u0101ri","Nageswari","Panchagarh","Uttar Char Fasson","Parbatipur","Burh\u0101nuddin","K\u0101l\u012bganj","Doh\u0101r","H\u0101j\u012bganj","Bh\u0101tp\u0101ra Abhaynagar","L\u0101lmohan","Jhingerg\u0101cha","Mirz\u0101pur","Sakhipur","Tekn\u0101f","Gaurnadi","K\u0101lia","Bera","Mehendiganj","Chh\u0101galn\u0101iya","Chh\u0101tak","N\u0101lchiti","Bher\u0101m\u0101ra","Phultala","Baniachang","Sarankhola","Shibganj","P\u012brgaaj","B\u0101jitpur","Char Bhadr\u0101san","Gafargaon","Badarganj","B\u0101ndarban","Nab\u012bnagar","Morrelgonj","Kesabpur","Bh\u0101nd\u0101ria","Mathba","Raoj\u0101n","Manikchari","Mukt\u0101g\u0101cha"],"BB":["Bridgetown"],"BY":["Minsk","Homyel\'","Mahilyow","Vitebsk","Hrodna","Brest","Babruysk","Baranovichi","Barysaw","Pinsk","Orsha","Mazyr","Salihorsk","Maladzyechna","Navapolatsk","Lida","Polatsk","Zhlobin","Svyetlahorsk","Rechytsa","Slutsk","Horad Zhodzina","Slonim","Kobryn","Volkovysk","Kalinkavichy","Smarhon\u2019","Rahachow","Asipovichy","Horki","Novogrudok","Vilyeyka","Byaroza","Krychaw","Luninyets","Dzyarzhynsk","Ivatsevichy","Hlybokaye","Pastavy","Mar\u2019\u2019ina Horka"],"BE":["Brussels","Antwerpen","Gent","Charleroi","Li\xe8ge","Brugge","Namur","Leuven","Mons","Deurne","Aalst","Mechelen","La Louvi\xe8re","Kortrijk","Hasselt","Ostend","Sint-Niklaas","Tournai","Genk","Seraing","Roeselare","Verviers","Mouscron","Beveren","Dendermonde","Wilrijk","Beringen","Dilbeek","Heist-op-den-Berg","Sint-Truiden","Lokeren","Braine-l\'Alleud","Brasschaat","Vilvoorde","Herstal","Maasmechelen","Waregem","Ch\xe2telet","Ieper","Ninove","Geel","Halle","Hoboken","Knokke-Heist","Schoten","Lier","Mol","Wavre","Binche","Lommel","Menen","Tienen","Evergem","Heusden","Wevelgem","Geraardsbergen","Sint-Pieters-Leeuw","Blauwput","Houthalen","Helchteren","Tongeren","Deinze","Waterloo","Bilzen","Louvain-la-Neuve","Courcelles","Asse","Zaventem","Oudenaarde","Aarschot","Ans","Ath","Kapellen","Izegem","Arlon","Temse","Harelbeke","Herentals","Fl\xe9malle-Haute","Soignies","Lanaken","Mortsel","Zottegem","Ronse","Nivelles","Andenne","Maaseik","Oupeye","Overijse","Zwevegem","Ekeren","Heverlee","Beersel","Wetteren","Hamme","Willebroek","Saint-Nicolas","Westerlo","Diest","Saint-Ghislain","Manage","Maldegem","Fleurus","Zedelgem","Edegem","Gembloux","Rixensart","Oostkamp","Zemst","Koksijde","Chaudfontaine","Nijlen","Tervuren","Frameries","Schilde","Kontich","Zele","Braine-le-Comte","Boussu","Gilly"],"BZ":["Belize City"],"BJ":["Cotonou","Abomey-Calavi","Djougou","Porto-Novo","Parakou","Bohicon","Kandi","Lokossa","Ouidah","Abomey","Natitingou","Sav\xe9","Nikki","Dogbo","Cov\xe9","Malanville","Pob\xe9","Savalou","Sak\xe9t\xe9","Com\xe9","Bemb\xe8r\xe8k\xe8","Bassila","Banikoara","K\xe9tou","Dassa-Zoum\xe9","Tchaourou","Allada"],"BM":[],"BT":["Thimphu","Pun\u0101kha"],"BO":["Santa Cruz de la Sierra","Cochabamba","La Paz","Sucre","Oruro","Tarija","Potos\xed","Sacaba","Montero","Quillacollo","Trinidad","Yacuiba","Riberalta","Tiquipaya","Guayaramer\xedn","Bermejo","Mizque","Villaz\xf3n","Llallagua","Camiri","Cobija","San Borja","San Ignacio de Velasco","Tupiza","Warnes"],"BA":["Sarajevo","Banja Luka","Zenica","Tuzla","Mostar","Biha\u0107","Bugojno","Br\u010dko","Bijeljina","Prijedor","Trebinje","Travnik","Doboj","Cazin"],"BW":["Gaborone","Francistown","Molepolole","Selebi-Phikwe","Maun","Serowe","Kanye","Mahalapye","Mogoditshane","Mochudi","Lobatse","Palapye","Ramotswa","Thamaga"],"BV":[],"BR":["S\xe3o Paulo","Rio de Janeiro","Salvador","Fortaleza","Belo Horizonte","Bras\xedlia","Curitiba","Manaus","Recife","Bel\xe9m","Porto Alegre","Goi\xe2nia","Guarulhos","Campinas","Nova Igua\xe7u","Macei\xf3","S\xe3o Lu\xeds","Duque de Caxias","Natal","Teresina","S\xe3o Bernardo do Campo","Campo Grande","Jaboat\xe3o","Osasco","Santo Andr\xe9","Jo\xe3o Pessoa","Jaboat\xe3o dos Guararapes","Contagem","Ribeir\xe3o Preto","S\xe3o Jos\xe9 dos Campos","Uberl\xe2ndia","Sorocaba","Cuiab\xe1","Aparecida de Goi\xe2nia","Aracaju","Feira de Santana","Londrina","Juiz de Fora","Belford Roxo","Joinville","Niter\xf3i","S\xe3o Jo\xe3o de Meriti","Ananindeua","Florian\xf3polis","Santos","Ribeir\xe3o das Neves","Vila Velha","Serra","Diadema","Campos dos Goytacazes","Mau\xe1","Betim","Caxias do Sul","S\xe3o Jos\xe9 do Rio Preto","Olinda","Carapicu\xedba","Campina Grande","Piracicaba","Macap\xe1","Itaquaquecetuba","Bauru","Montes Claros","Canoas","Mogi das Cruzes","S\xe3o Vicente","Jundia\xed","Pelotas","An\xe1polis","Vit\xf3ria","Maring\xe1","Guaruj\xe1","Porto Velho","Franca","Blumenau","Foz do Igua\xe7u","Ponta Grossa","Paulista","Limeira","Viam\xe3o","Suzano","Caucaia","Petr\xf3polis","Uberaba","Rio Branco","Cascavel","Novo Hamburgo","Vit\xf3ria da Conquista","Barueri","Taubat\xe9","Governador Valadares","Praia Grande","V\xe1rzea Grande","Volta Redonda","Santa Maria","Santa Luzia","Gravata\xed","Caruaru","Boa Vista","Rio Verde","Ipatinga","Sumar\xe9","Juazeiro do Norte","Embu","Imperatriz","Colombo","Tabo\xe3o da Serra","Jacare\xed","Mar\xedlia","Presidente Prudente","S\xe3o Leopoldo","Itabuna","S\xe3o Carlos","Hortol\xe2ndia","Mossor\xf3","Itapevi","Sete Lagoas","S\xe3o Jos\xe9","Palmas","Parauapebas","Americana","Petrolina","Divin\xf3polis","Maracana\xfa","Planaltina","Santar\xe9m","Cama\xe7ari","Santa B\xe1rbara d\'Oeste","Rio Grande","Cachoeiro de Itapemirim","Itabora\xed","Rio Claro","Indaiatuba","Passo Fundo","Cotia","Francisco Morato","Ara\xe7atuba","Araraquara","Ferraz de Vasconcelos","Arapiraca","Lages","Barra Mansa","Nossa Senhora do Socorro","Dourados","Crici\xfama","Chapec\xf3","Barreiras","Sobral","Itaja\xed","Ilh\xe9us","Angra dos Reis","Nova Friburgo","Rondon\xf3polis","Itapecerica da Serra","Guarapuava","Parnamirim","Caxias","Nil\xf3polis","Po\xe7os de Caldas","Marab\xe1","Luzi\xe2nia","Cabo","Maca\xe9","Ibirit\xe9","Lauro de Freitas","Paranagu\xe1","Parna\xedba","Itu","Castanhal","S\xe3o Caetano do Sul","Queimados","Pindamonhangaba","Sapucaia","Jaragu\xe1 do Sul","Mogi Gua\xe7u","Jequi\xe9","Itapetininga","Patos de Minas","Bragan\xe7a Paulista","Timon","S\xe3o Jos\xe9 dos Pinhais","Teres\xf3polis","Uruguaiana","Porto Seguro","Alagoinhas","Palho\xe7a","Barbacena","Cachoeirinha","Santa Rita","Toledo","Ja\xfa","Cubat\xe3o","Pinhais","Sim\xf5es Filho","Varginha","Sinop","Pouso Alegre","Eun\xe1polis","Botucatu","Jandira","Ribeir\xe3o Pires","Conselheiro Lafaiete","Resende","Arauc\xe1ria","Atibaia","V\xe1rzea Paulista","Garanhuns","Araruama","Catanduva","Franco da Rocha","Cabo Frio","Ji Paran\xe1","Araras","Po\xe1","Vit\xf3ria de Santo Ant\xe3o","Umuarama","Apucarana","Santa Cruz do Sul","Guaratinguet\xe1","Linhares","Aragua\xedna","Esmeraldas","Birigui","Assis","Barretos","Colatina","Te\xf3filo Otoni","Gua\xedba","Guarapari","Coronel Fabriciano","Itagua\xed","Rio das Ostras","Itabira","Votorantim","Sert\xe3ozinho","Santana de Parna\xedba","Bag\xe9","Passos","Salto","Ub\xe1","Ourinhos","Trindade","Arapongas","Araguari","Corumb\xe1","Erechim","Japeri","Vespasiano","Campo Largo","Tatu\xed","Patos","Tim\xf3teo","Muria\xe9","Camb\xe9","Bayeux","Bento Gon\xe7alves","Caraguatatuba","Itanha\xe9m","Santana do Livramento","Almirante Tamandar\xe9","Planaltina","Crato","Valinhos","S\xe3o Louren\xe7o da Mata","Nova Lima","Brusque","Barra do Pira\xed","Alegrete","Caieiras","Barra do Corda","Igarassu","Paulo Afonso","Ituiutaba","Esteio","Sarandi","Itaperuna","Santana","Jardim Paulista","Cod\xf3","Arax\xe1","Reden\xe7\xe3o","Abreu e Lima","Itajub\xe1","Lavras","Avar\xe9","Formosa","Leme","Cruzeiro do Sul","Itumbiara","Maric\xe1","Ubatuba","Tr\xeas Lagoas","S\xe3o Jo\xe3o del Rei","Mogi Mirim","Abaetetuba","S\xe3o Bento do Sul","Ita\xfana","S\xe3o Mateus","Jata\xed","S\xe3o Jo\xe3o da Boa Vista","Lorena","Santa Cruz do Capibaribe","S\xe3o Sebasti\xe3o","Tucuru\xed","Embu Gua\xe7u","Sapiranga","Par\xe1 de Minas","Campo Mour\xe3o","Cachoeira do Sul","Santo Ant\xf4nio de Jesus","Paranava\xed","Jo\xe3o Monlevade","Mat\xe3o","Bacabal","Ca\xe7apava","Aruj\xe1","Cruzeiro","Patroc\xednio","Tr\xeas Rios","Bebedouro","S\xe3o Crist\xf3v\xe3o","Alfenas","Iju\xed","Altamira","Paracatu","Carpina","Iguatu","Votuporanga","Paragominas","Lins","Jaboticabal","Vi\xe7osa","S\xe3o Sebasti\xe3o do Para\xedso","Balsas","Itatiba","Santa In\xeas","Tubar\xe3o","Pato Branco","Paul\xednia","Lajeado","Cruz Alta","Aquiraz","Itacoatiara","Gurupi","Itaituba","Santo \xc2ngelo","Parintins","Curvelo","Itabaiana","Ca\xe7ador","Ouro Preto","Caldas Novas","Irec\xea","Catal\xe3o","Tr\xeas Cora\xe7\xf5es","Rio Largo","Valen\xe7a","Vilhena","Peru\xedbe","Itapeva","Cataguases","Saquarema","Tup\xe3","Fernand\xf3polis","Senador Canedo","Itapira","Gravat\xe1","Valen\xe7a","Pirassununga","Una\xed","Caratinga","Itapetinga","Mococa","S\xe3o Borja","Carazinho","Santa Rosa","Tel\xeamaco Borba","Guanambi","Aracruz","Ariquemes","Farroupilha","Francisco Beltr\xe3o","Picos","Len\xe7\xf3is Paulista","Bragan\xe7a","Arcoverde","Vacaria","Cajamar","Jana\xfaba","Vinhedo","Formiga","Cianorte","Itapipoca","Ponta Por\xe3","Est\xe2ncia","Cacoal","S\xe3o Gabriel","Conc\xf3rdia","Pacatuba","Viana","S\xe3o Pedro da Aldeia","Caic\xf3","Serop\xe9dica","Cabedelo","Manhua\xe7u","Pen\xe1polis","Mairipor\xe3","Montenegro","Ipojuca","Campos do Jord\xe3o","Camaqu\xe3","Crate\xfas","Manacapuru","Andradina","Barra do Gar\xe7as","Cascavel","Bigua\xe7u","Batatais","Rio do Sul","Pirapora","I\xe7ara","Bezerros","Serra Talhada","Horizonte","Rol\xe2ndia","Marechal Deodoro","S\xe3o Roque","Coari","Taquaritinga","Belo Jardim","Benevides","Nova Odessa","Quixad\xe1","Pedro Leopoldo","Porto Ferreira","Balne\xe1rio Cambori\xfa","Serrinha","Ibitinga","Congonhas","Boituva","Uni\xe3o da Vit\xf3ria","Floriano","Parob\xe9","Corn\xe9lio Proc\xf3pio","Senhor do Bonfim","Ponte Nova","Escada","Taquara","Sousa","Guaxup\xe9","Goian\xe9sia","Cruz das Almas","Navegantes","Cosm\xf3polis","Capanema","Jacobina","Itamaraju","Campo Belo","Itaberaba","S\xe3o Jos\xe9 do Rio Pardo","Santo Amaro","Leopoldina","Santiago","Breves","Cachoeiras de Macacu","Mongagu\xe1","Irati","Registro","Tiangu\xe1","Lagarto","Moreno","Mariana","Camet\xe1","Ol\xedmpia","Timba\xfaba","Tef\xe9","Piripiri","Itarar\xe9","Ibipor\xe3","Orl\xe2ndia","Camocim","Mairinque","Indaial","Aracati","Inhumas","Monte Carmelo","Goiana","Cajazeiras","Jales","Guarabira","Tr\xeas Pontas","Xinguara","Imbituba","Ararangu\xe1","Lagoa da Prata","Marechal C\xe2ndido Rondon","Canind\xe9","S\xe3o Joaquim da Barra","Videira","Limoeiro","Salgueiro","Penedo","Castro","Brumado","Rio Negrinho","Pesqueira","Monte Alto","Palmares","Santos Dumont","Pacajus","Jaguaquara","Amparo","Gar\xe7a","Uni\xe3o dos Palmares","Piraquara","S\xe3o Louren\xe7o","Porto Feliz","Salin\xf3polis","Frutal","S\xe3o Miguel dos Campos","Sirinha\xe9m","Chapadinha","Bom Jesus da Lapa","Ven\xe2ncio Aires","Artur Nogueira","Est\xe2ncia Velha","Bom Despacho","Monte Mor","Mafra","Maca\xedba","Catu","Serrana","Laguna","Russas","Itabirito","Pedreira","Palmas","Paragua\xe7u Paulista","Mineiros","Pinheiro","Canoinhas","Ipia\xfa","Presidente Epit\xe1cio","Cabre\xfava","Araripina","Tucum\xe3","Lagoa Santa","Mandaguari","Rio Grande da Serra","Pederneiras","P\xf4sto Fiscal Rolim de Moura","Nanuque","Esp\xedrito Santo do Pinhal","Morada Nova","Diamantina","Santa Cruz do Rio Pardo","Eus\xe9bio","Barra Bonita","Cap\xe2o Bonito","Beberibe","Ituverava","Dom Pedrito","Itapema","Ros\xe1rio do Sul","Cristalina","Navira\xed","S\xe3o Francisco do Sul","Vargem Grande do Sul","Coelho Neto","A\xe7u","Paracambi","Rio Bonito","Cap\xe3o da Canoa","Bertioga","Oriximin\xe1","Barreiros","Currais Novos","Capivari","Para\xedba do Sul","Xique Xique","Cerquilho","Aquidauana","Santo Ant\xf4nio da Platina","Delmiro Gouveia","Po\xe7\xf5es","Concei\xe7\xe3o do Coit\xe9","Jacarezinho","Itapecuru Mirim","Janu\xe1ria","Tramanda\xed","Jardin\xf3polis","Oliveira","Itaqui","Os\xf3rio","Surubim","It\xe1polis","Pai\xe7andu","Am\xe9rico Brasiliense","Quixeramobim","Santa Helena de Goi\xe1s","Aparecida","S\xe3o Gotardo","Morrinhos","Coroat\xe1","Guajar\xe1 Mirim","Gua\xedra","Medianeira","Tom\xe9 A\xe7u","Presidente Venceslau","Barbalha","Al\xe9m Para\xedba","Boa Esperan\xe7a","Timb\xf3","Santa Isabel","Gaspar","S\xe3o Manuel","Canela","Arcos","Caet\xe9","Santo Ant\xf4nio de P\xe1dua","S\xe3o Francisco","Machado","Xanxer\xea","Ilhabela","Torres","Porangatu","Capit\xe3o Po\xe7o","Cravinhos","Cear\xe1 Mirim","Pontal","Coaraci","Salto de Pirapora","Parana\xedba","Curitibanos","Bocai\xfava","Quirin\xf3polis","Charqueadas","Tiet\xea","Itapag\xe9","Ouril\xe2ndia do Norte","S\xe3o Luiz Gonzaga","Campo Maior","Trememb\xe9","Jaguari\xfana","Coruripe","Barra do Bugres","Humait\xe1","Tucano","Guapimirim","Campina Grande do Sul","Louveira","Adamantina","S\xe3o Sebasti\xe3o do Pass\xe9","Mina\xe7u","Palmeira das Miss\xf5es","Itaitinga","Matozinhos","Bom Jesus do Itabapoana","Agudos","Jaguaria\xedva","Pilar","Vera Cruz","Guariba","Jaragu\xe1","Panambi","Garibaldi","Presidente Dutra","Graja\xfa","Coxim","Candel\xe1ria","Novo Horizonte","Urua\xe7u","Barcarena","Ribeir\xe3o","Iturama","Tobias Barreto","Euclides da Cunha","Jaguar\xe3o","Ibat\xe9","Bandeirantes","Limoeiro do Norte","Pontes e Lacerda","Almenara","Ouricuri","Vigia","S\xe3o Jo\xe3o dos Inhamuns","Igarapava","Visconde do Rio Branco","Porto Uni\xe3o","Bariri","Altos","Santa Rita do Sapuca\xed","V\xe1rzea da Palma","Igrejinha","Barra dos Coqueiros","Pitangueiras","Acara\xfa","Ubaitaba","Nova Ven\xe9cia","Ic\xf3","S\xe3o Miguel do Guam\xe1","Ipor\xe1","Ribeira do Pombal","S\xe3o Mateus do Maranh\xe3o","Tabatinga","C\xe2ndido Mota","Jo\xe3o Pinheiro","Jaru","Piedade","Jos\xe9 Bonif\xe1cio","Bom Conselho","S\xe3o Fid\xe9lis","S\xe3o Jos\xe9 de Ribamar","Santa Cruz","Santa Vit\xf3ria do Palmar","Lucas","Mamanguape","Cajati","Brumadinho","Guararapes","Niquel\xe2ndia","Agua\xed","Entre Rios","Brejo Santo","Brejo da Madre de Deus","Piu\xed","Santo Est\xeav\xe3o","Ipir\xe1","Caetit\xe9","Concei\xe7\xe3o do Araguaia","Taquari","S\xe3o Pedro","Promiss\xe3o","Mangaratiba","Rio Pardo","Aripuan\xe3","Barrinha","Marau","Igarap\xe9 Miri","Mucuri","Andradas","Viana","Ouro Branco","Miracema","Ouro Preto do Oeste","Mata de S\xe3o Jo\xe3o","Ipu","Itaperu\xe7u","Carmo do Parana\xedba","Nazar\xe9 da Mata","Biritiba Mirim","Rio Branco do Sul","Canavieiras","Alenquer","Arraial do Cabo","Santana do Ipanema","Descalvado","Piracaia","Marialva","Lago da Pedra","Goiatuba","Granja","Santa F\xe9 do Sul","Santa Cruz das Palmeiras","Ibaiti","Pimenta Bueno","Salinas","Osvaldo Cruz","Cordeir\xf3polis","Lapa","Nazar\xe9","Rancharia","Santana do Para\xedso","Marataizes","S\xe3o Louren\xe7o do Sul","Carangola","Pomp\xe9u","Piraju","Morro Agudo","Lajedo","Colinas","Buritizeiro","Afogados da Ingazeira","Ilha Solteira","\xd3bidos","S\xe3o Mateus do Sul","Mateus Leme","Pires do Rio","Soledade","S\xe3o Bento","Santaluz","Boa Viagem","S\xe3o Francisco do Conde","Santa Rita do Passa Quatro","Acopiara","Juatuba","Lagoa Vermelha","Uru\xe7uca","Tupaciguara","Santa Quit\xe9ria","Taiobeiras","Rio Preto da Eva","Socorro","Estrela","Igarap\xe9 A\xe7u","Rio Real","Toritama","Campo Formoso","Miguel Pereira","Capinzal","Propri\xe1","Iguape","Jardim","Tangu\xe1","Guanh\xe3es","Rio das Pedras","S\xe3o Lu\xeds de Montes Belos","S\xe3o Gon\xe7alo do Amarante","Guararema","Itamb\xe9","Joa\xe7aba","Santa Maria da Vit\xf3ria","Arma\xe7\xe3o de B\xfazios","Mirandop\xf3lis","Catende","Laranjeiras","Quara\xed","Nova Cruz","S\xe3o Jo\xe3o Nepomuceno","Trairi","Jaguaribe","Palotina","Rio Negro","Forquilhinha","Pindar\xe9 Mirim","Santa Luzia","Ibi\xfana","Monte Alegre","Goianira","Campo Verde","Dois Vizinhos","Igara\xe7u do Tiet\xea","Jaciara","Caxambu","Maracaju","Ia\xe7u","Coromandel","Serra Negra","Una","Jaguarari","Santo Ant\xf4nio do Monte","\xc1guas Belas","Campos Novos","Pereira Barreto","Amargosa","Casa Branca","Tijucas","Mau\xe9s","Baturit\xe9","Muritiba","Bar\xe3o de Cocais","Bra\xe7o do Norte","Ita\xed","Campos Gerais","Posto da Mata","Itabera\xed","Corinto","Marac\xe1s","Pedro II","Cururupu","Ara\xe7ua\xed","Nova Russas","Pomerode","Ner\xf3polis","V\xe1rzea Alegre","Teut\xf4nia","Cl\xe1udio","Guai\xfaba","Jaguaruana","Pombal","Pirapozinho","Morro do Chap\xe9u","\xc1lvares Machado","Barras","Concei\xe7\xe3o do Jacu\xedpe","Gandu","Moju","Taquarituba","Pocon\xe9","Santa Rosa de Viterbo","Jos\xe9 de Freitas","Igarap\xe9","Guaramirim","Vargem Grande","Cambar\xe1","Conchal","Portel","Itupiranga","Laranjal Paulista","Cambu\xed","Paracuru","Vassouras","Ruy Barbosa","Oeiras","Tr\xeas Coroas","Port\xe3o","Esperantina","Ribeir\xe3o da Ilha","Freguesia do Ribeirao da Ilha","Dois C\xf3rregos","Maragogipe","Pedra Azul","Frederico Westphalen","Barra","Sarzedo","Barra de S\xe3o Francisco","Paty do Alferes","Nova Xavantina","S\xe3o Jo\xe3o da Barra","Itupeva","Jatob\xe1","S\xe3o Lu\xeds do Quitunde","Flores da Cunha","Sena Madureira","Almeirim","Colorado","S\xe3o Pedro","Murici","J\xfalio de Castilhos","Abaet\xe9","Bu\xedque","Castelo","Cangu\xe7u","Astorga","Itaparica","Nova Vi\xe7osa","Penha","Capelinha","Pedra Branca","Guapor\xe9","Posse"],"IO":[],"BN":["Bandar Seri Begawan","Kuala Belait","Seria"],"BG":["Sofia","Plovdiv","Varna","Burgas","Ruse","Stara Zagora","Pleven","Sliven","Dobrich","Shumen","Pernik","Yambol","Haskovo","Pazardzhik","Blagoevgrad","Veliko T\u016drnovo","Gabrovo","Vratsa","Kazanlak","Vidin","Asenovgrad","Kardzhali","Kyustendil","Montana","Dimitrovgrad","Lovech","Silistra","Razgrad","Targovishte","Dupnitsa","Gorna Oryahovitsa","Svishtov","Smolyan","Petrich","Asparuhovo","Samokov","Lom","Sandanski","Sevlievo","Nova Zagora","Velingrad","Troyan","Aytos","Botevgrad","Gotse Delchev"],"BF":["Ouagadougou","Bobo-Dioulasso","Koudougou","Ouahigouya","Banfora","D\xe9dougou","Kaya","Dori","Tenkodogo","R\xe9o","Hound\xe9","Fada N\'gourma","Koup\xe9la","Kombissiri","Garango","Nouna","L\xe9o","Kongoussi","Diapaga","Kokologo","Zorgo","Yako","Djibo"],"BI":["Bujumbura","Muyinga","Gitega","Ruyigi","Ngozi","Rutana"],"KH":["Phnom Penh","Takeo","Sihanoukville","Battambang","Siem Reap","Paoy Paet","Kampong Chhnang","Kampong Cham","Pursat","Ta Khmau","Phum\u012d V\xe9al Sr\xea","Kampong Speu","Koh Kong","Prey Veng","Suong","Smach Mean Chey","Stung Treng","Tbeng Meanchey","Svay Rieng","Sisophon","Kampot"],"CM":["Douala","Yaound\xe9","Garoua","Kouss\xe9ri","Bamenda","Maroua","Bafoussam","Mokolo","Ngaound\xe9r\xe9","Bertoua","Ed\xe9a","Loum","Kumba","Nkongsamba","Mbouda","Dschang","Foumban","\xc9bolowa","Guider","Foumbot","Bafang","Yagoua","Mbalmayo","Me\xefganga","Bali","Limbe","Bafia","Wum","Bangangt\xe9","Tiko","Kribi","Mora","Sangm\xe9lima","Kumbo","Nkoteng","Mutengene","Buea","Garoua Boula\xef","Batouri","Fundong","Fontem","Mbanga","Banyo","Manjo","Melong","Tibati","Muyuka","Obala","Nanga Eboko","Penja","Mbandjok","Ka\xe9l\xe9","Bamusso","Lagdo","Tchollir\xe9","B\xe9labo","Lolodorf","Es\xe9ka"],"CA":["Toronto","Montr\xe9al","Calgary","Ottawa","Edmonton","Mississauga","North York","Winnipeg","Vancouver","Scarborough","Qu\xe9bec","Hamilton","Brampton","Surrey","Laval","Halifax","Etobicoke","London","Oshawa","Okanagan","Victoria","Windsor","Markham","Gatineau","Vaughan","Kitchener","Longueuil","Burnaby","Ladner","Saskatoon","Richmond Hill","Barrie","Richmond","Nepean","Regina","Oakville","Burlington","Greater Sudbury","Abbotsford","Saguenay","Coquitlam","St. Catharines","Sherbrooke","L\xe9vis","Kelowna","Cambridge","Trois-Rivi\xe8res","Guelph","East York","Kingston","Moncton","Sydney","Milton","Delta","Dartmouth","Thunder Bay","St. John\'s","Waterloo","Terrebonne","Ajax","Kanata","Saint John","Pickering","Brantford","Nanaimo","Niagara Falls","Willowdale","Saint-Laurent","Chilliwack","Repentigny","Fort McMurray","Peterborough","Newmarket","La Haute-Saint-Charles","Red Deer","Saint-L\xe9onard","Sarnia","Saint-Jean-sur-Richelieu","Lethbridge","Maple Ridge","Brossard","Kamloops","Notre-Dame-de-Gr\xe2ce","White Rock","Sault Ste. Marie","Prince George","Medicine Hat","Norfolk County","Drummondville","New Westminster","Port Coquitlam","St. Albert","Aurora","Sherwood Park","Saint-J\xe9r\xf4me","Jonqui\xe8re","Granby","Fredericton","North Bay","Welland","Saint-Hyacinthe","Belleville","Dollard-Des Ormeaux","Cornwall","Vernon","North Vancouver","Vernon","Blainville","West End","Chatham","Timmins","Ch\xe2teauguay","Quinte West","West Vancouver","Charlottetown","Rimouski","Saint-Eustache","Sorel-Tracy","Grande Prairie","Woodstock","Boucherville","Salaberry-de-Valleyfield","Shawinigan","Penticton","Spruce Grove","St. Thomas","Rock Forest","Prince Albert","Joliette","Mascouche","Mirabel","Victoriaville","Brant","Campbell River","Mission","Ancaster","Leamington","Courtenay","North Cowichan","Moose Jaw","Lloydminster","C\xf4te-Saint-Luc","Saint-Georges","Orangeville","Stratford","Orillia","Pointe-Claire","Baie-Comeau","Alma","Sainte-Julie","West Kelowna","Port Moody","Boisbriand","Brandon","Vaudreuil-Dorion","Thetford-Mines","Walnut Grove","Val-d\'Or","Prince Edward","Sainte-Th\xe9r\xe8se","Fallingbrook","Airdrie","Mount Pearl","Saint-Bruno-de-Montarville","Midland","East Gwillimbury","Saint-Constant","Brockville","Langley","Rouyn-Noranda","Whitehorse","Owen Sound","Chambly","Sept-\xceles","Langford","Duncan","La Prairie","Tsawwassen","Lower Sackville","Keswick","Varennes","Clarence-Rockland","Port Alberni","Truro","Westmount","Kirkland","Lindsay"],"CV":["Praia","Mindelo"],"KY":["George Town"],"CF":["Bangui","Bimbo","Mba\xefki","Berb\xe9rati","Kaga Bandoro","Bozoum","Carnot","Sibut","Bambari","Bria","Bouar","Bossangoa","Nola","Bangassou","Damara"],"TD":["N\'Djamena","Moundou","Sarh","Ab\xe9ch\xe9","Kelo","Koumra","Pala","Am Timan","Bongor","Mongo","Doba","Ati","Fada"],"CL":["Santiago","Puente Alto","Antofagasta","Vi\xf1a del Mar","Valpara\xedso","Talcahuano","San Bernardo","Temuco","Iquique","Concepci\xf3n","Rancagua","La Pintana","Talca","Arica","Coquimbo","Puerto Montt","La Serena","Chill\xe1n","Calama","Osorno","Valdivia","Quilpu\xe9","Copiap\xf3","Los \xc1ngeles","Punta Arenas","Lo Prado","Curic\xf3","Villa Alemana","Coronel","San Antonio","Chiguayante","Ovalle","Linares","Quillota","Pe\xf1aflor","Melipilla","San Felipe","Los Andes","Buin","Talagante","Lota","Hacienda La Calera","Tom\xe9","Penco","Coyhaique","Vallenar","Angol","Rengo","Constituci\xf3n","Limache","Santa Cruz","Paine","Villarrica","San Carlos","Cauquenes","Curanilahue","Las Animas","Castro","San Vicente de Tagua Tagua","Lampa","Molina","Ancud","Machal\xed","Puc\xf3n","Parral","La Uni\xf3n","Puerto Varas","La Ligua","Arauco","Victoria","Tocopilla","Graneros","El Monte","Illapel","San Vicente","San Javier","Lebu","Mulch\xe9n","Quell\xf3n","Lautaro","Nacimiento","Ca\xf1ete"],"CN":["Shanghai","Beijing","Tianjin","Guangzhou","Shenzhen","Wuhan","Dongguan","Chongqing","Chengdu","Nanjing","Nanchong","Xi\u2019an","Shenyang","Hangzhou","Harbin","Tai\u2019an","Suzhou","Shantou","Jinan","Zhengzhou","Changchun","Dalian","Kunming","Qingdao","Foshan","Puyang","Wuxi","Xiamen","Tianshui","Ningbo","Shiyan","Taiyuan","Tangshan","Hefei","Zibo","Zhongshan","Changsha","\xdcr\xfcmqi","Shijiazhuang","Lanzhou","Yunfu","Nanchang","Dadonghai","Ordos","Jilin","Bayan Nur","Kunshan","Xinyang","Fushun","Luoyang","Guankou","Handan","Baotou","Xuchang","Yueyang","Anshan","Tongshan","Fuzhou","Guiyang","Lijiang","Datong","Changshu City","Xianyang","Huainan","Jieyang","Zhu Cheng City","Baoding","Benxi","Changzhou","Huaibei","Kaifeng","Pingdingshan","Qiqihar","Wenzhou","Zhabei","Nanning","Anyang","Hohhot","Shangyu","Xining","Qinhuangdao","Hengyang","Xinxiang","Hegang","Langfang","Zhumadian","Yantai","Zhuzhou","Changzhi","Zhangjiakou","Zigong","Fuxin","Huangshi","Liaoyang","Xiangtan","Puyang Chengguanzhen","Nantong","Mudanjiang","Guilin","Zhanjiang","Zhenjiang","Dandong","Shaoguan","Yancheng","Panshan","Haikou","Taizhou","Xingtai","Jinzhou","Shuangyashan","Luancheng","Yingkou","Zhangzhou","Bengbu","Shihezi","Siping","Huai\'an","Jiamusi","Neijiang","Yangzhou","Guli","Tanggu","Jiangmen","Cangzhou","Changde","Jiaozuo","Tonghua","Wuhu","Zhuhai","Shashi","Wuwei","Jianshui","Qionghai","Yichang","Yinchuan","Jiaojiang","Zunyi","Jiaxing","Liaoyuan","Xiangyang","Dadukou","Hengshui","Jining","Wenshan City","Chengde","Bei\u2019an","Luqiao","Chaozhou","Shaoxing","Luohe","Yangquan","Chaoyang","Jixi","Yangjiang","Weifang","Xinpu","Dezhou","Zhoukou","Putian","Zhangjiakou Shi Xuanhua Qu","Pingxiang","Fenghuang","Zhaoqing","Huocheng","Anqing","Anshun","Chifeng","Taihecun","Shiqi","Aksu","Tieling","Jincheng","Yanji","Suizhou","Shangrao","Baicheng","Lianshan","Wusong","Jingdezhen","Shengli","Xinyuan","Yangshuo","Xiuying","Beihai","Huizhou","Chuzhou","Kashgar","Linyi","Chengzhong","Wuzhou","Hulan Ergi","Mianyang","Tongliao","Karamay","Aral","Jiujiang","Jining","Turpan","Heze","Laohekou","Suihua","Liupanshui","Nanyang","Wafangdian","Rizhao","Ji\u2019an","Hebi","Huayin","Yibin","Xiantao","Yuci","Linfen","Liaocheng","Fendou","Huanggang","Jingling","Tongchuanshi","Xintai","Wuxue","Wuhai","Jinzhou","Guangyuan","Hailar","Daliang","Sanming","Hangu","Suzhou","Gaoping","Daqing","Yiyang","Linxia Chengguanzhen","Yuncheng","Changji","Kaiyuan","Mentougou","Xinhui","Ezhou","Humen","Haicheng","Zoucheng","Wanxian","Donghai","Baiyin","Laizhou","Zaoyang","Quanzhou","Baishan","Zaozhuang","Anda","Shangqiu","Xianning","Korla","Qianjiang","Chenzhou","Jingzhou","Zhenzhou","Xindi","Jiutai","Bozhou","Licheng","Weinan","Nanping","Dongling","Fuyang","Laiyang","Jingmen","Fuling","Gaozhou","Ulanhot","Shanwei","Jiaozhou","Fendou","Tongzhou","Anbu","Xiaogan","Qapqal","Zhicheng","Huzhou","Nanpiao","Yichun","Lianghu","Beipiao","Guangshui","Leshan","Zhaodong","Xinzhou","Sanshui","Boshan","Yangchun","Linhai","Dingzhou","Weihai","Chenghua","Deyang","Yichun","Longfeng","Qingyuan","Gaomi","Loudi","Huangyan","Dunhua","Yulin","Chizhou","Sujiatun","Honggang","Qujing","Hanzhong","Xinji","Taishan","Sanya","Acheng","Jinchang","Meizhou","Jinhua","Jieshou","Gongzhuling","Shanhaiguan","Altay","Huadian","Fuyu","Chaohu","Jieshi","Jiashan","Hami","Shizuishan","Gejiu","Jiagedaqi","Shiqiao","Dali","Puqi","Ankang","Zhalantun","Dawukou","Majie","Hepo","Dazhou","Shuangcheng","Dongyang","Jiazi","Songjiang","Shangri-La","Wuda","Leiyang","Xuanzhou","Huaihua","Jiangyou","Xichang","Danshui","Macheng","Huicheng","Xiazhen","Haimen","Shahecheng","Suining","Yushu","Lecheng","Laiwu","Jiupu","Baoshan","Luoyang","Minzhu","Huangzhou","Xiulin","Zhoucun","Jiayuguan","Lianhe","Xilin Hot","Fengcheng","Zhaoyuan","Lhasa","Puning","Shunyi","Longjing","Qingzhou","Dasha","Yakeshi","Binzhou","Lengshuijiang","Tianfu","Wenchang","Mingshui","Yuyao","Hotan","Pingshan","Songyuan","Maba","Guangming","Haikou","Shaowu","Kaiyuan","Beibei","Dongtai","Encheng","Zhuji","Qingnian","Mizhou","Linshui","Hailun","Shilong","Tieli","Dongxing","Heihe","Zhaotong","Hulan","Zhongxiang","Dehui","Nehe","Pingliang","Jiangyin","Jalai Nur","Shaping","Lianran","Longjiang","Buhe","Xinghua","Anqiu","Chengtangcun","Daxing","Pulandian","Wuchuan","Jishu","Yuxi","Qianzhou","Qinzhou","Lianjiang","Linxi","Zhangye","Kangding","Dongsheng","Meihekou","Xingcheng","Lishui","Renqiu","Xinshi","Xinyi","Chengzihe","Xishan","Hechuan","Xinyu","Fangshan","Lubu","Jinsha","Yicheng","Ducheng","Shenjiamen","Boli","Xiaoshan","Enshi","Wuchang","Yongchuan","Ximeicun","Yishui","Heyuan","Baijiantan","Zhengjiatun","Dalai","Changping","Lianzhou","Dongcun","Danjiangkou","Zhongshu","Huazhou","Longquan","Yatou","Lingyuan","Duyun","Pingdu","Gaoyou","Yulinshi","Hanting","Baise City","Tongren","Xihe","Duobao","Sishui","Gantang","Huaidian","Yiwu","Jinjiang","Fujin","Huaicheng","Lucheng","Hede","Lengshuitan","Wangqing","Yingchuan","Hanchuan","Qiongshan","Xiangxiang","Deqing","Yanjiang","Mishan","Nenjiang","Shizilu","Zhaogezhuang","Qamdo","Nanfeng","Zhangjiajie","Helong","Hailin","Nanding","Guozhen","Dengzhou","Qufu","Laojunmiao","Zhoushan","Dazhong","Jinxiang","Xiann\xfc","Lingdong","Nanzhang Chengguanzhen","Xucheng","Hecun","Ningyang","Jinshi","Yuanping","Pizhou","Changqing","Xindian","Shache","Yima","Shangzhi","Nangong","L\xfcshun","Quzhou","Shiwan","Tangping","Yudong","Feicheng","Shanting","Zhuanghe","Loushanguan","Baoying","Dashiqiao","Panshi","Rikaze","Taixing","Tangjiazhuang","Shouguang","Yanta","Zhuangyuan","Wuyang","Xiongzhou","Xinzhou","Shitanjing","Tumen","Youhao","Pingyi","Linping","Linkou","Bijie","Huangmei","Feicheng","Songling","Jishui","Linqu","Shulan","Yanzhou","Jiexiu","Hunchun","Huangshan","Liangxiang","Fenghua","Guigang","Yangliuqing","Qingquan","Lintong","Laixi","Yinzhu","Chaoyang","Shangmei","Fuyu","Huilong","Beidao","Yanggu","Shancheng","Nanma","Suixi","Xinmin","Gucheng Chengguanzhen","Xianshuigu","Yunyang","Guixi","Lanxi","Genhe","Luocheng","Juegang","Shixing","Dongdu","Dongkan","Jiuquan","Dingcheng","Lichuan","Lanxi","Miyang","Beichengqu","Xinzhi","Licheng","Zhoucheng","Caidian","Xiuyan","Lianzhou","Changtu","Anlu","Yilan","Guiping","Fu\u2019an","Kuandian","Poyang","Yongfeng","Gongchangling","Jimo","Baiquan","Jiangyan","Shiguai","Fuyang","Haining","Mengcheng Chengguanzhen","Wangkui","Jiehu","Linjiang","Tantou","Xiaoshi","Jinjiang","Heishan","Binhe","Pengcheng","Shima","Mingguang","Ninghai","Kuqa","Chaihe","Minggang","Tangzhai","Dongfeng","Zhenlai","Songjianghe","Luorong","Wenling","Fuqing","Caohe","Pingzhuang","Fengkou","Liuhe","Wacheng","Tailai","Chengyang","Sanchazi","Lianyuan","Wuxi","Huinan","Luoyang","Bamiantong","Huanren","Qionghu","Huanan","Zhangjiagang","Xiaolingwei","Beidaihehaibin","Mengyin","Xiangcheng Chengguanzhen","Dashitou","Qingyang","Babu","Yebaishou","Huaiyuan Chengguanzhen","Xincheng","Bianzhuang","Hepingjie","Ningde","Fengrun","Kunyang","Wanning","Lincheng","Salaqi","Xunchang","Changli","Kaihua","Yunmeng Chengguanzhen","Qinggang","Yangcun","Zhicheng","Baihe","Mabai","Nanlong","Xiazhuang","Fuding","Botou","Baoqing","Kaitong","Pingnan","D\xeaq\xean","Songyang","Zhaozhou","Yucheng","Shuangyang","Nianzishan","Jinghong","Pingyin","Binzhou","Qingshuping","Zhaobaoshan","Hushitai","Huoqiu Chengguanzhen","Mudu","Nandu","Daye","Yingshang Chengguanzhen","Pumiao","Hancheng","Lishu","Oroqen Zizhiqi","Xianju","Jianguang","Dongning","Suicheng","Tianchang","Jijiang","Xifeng","Datong","Yicheng","Yanliang","Tahe","Erdaojiang","Tianpeng","Xixiang","Mujiayingzi","Langzhong","Longgang","Gushu","Wucheng","Yuxia","Runing","Zhijiang","Taozhuang","Zhujiajiao","Wuzhen","Jiangkou","Laibin","Pucheng","Wenshang","Zhaoyuan","Mingshui","Huazhou","Gannan","Hongjiang","Jian\u2019ou","Fuli","Haizhou","Yigou","Langtoucun","Xiaoweizhai","Mingyue","Suozhen","Jidong","Fenyi","Chonglong","Xinglongshan","Tongchuan","Hongqiao","Dingtao","Juye","Hancheng","Santangpu","Anxiang","Huangpi","Shanhecun","Yantongshan","Guiren","Zhongxing","Langxiang","Fengxian","Suileng","Wenxing","Baishishan","Ninghai","Jinji","Weining","Daokou","Yashan","Nantai","Changleng","Hutang","Gaogou","Linghai","Zijinglu","Qinnan","Dalianwan","Changling","Linqiong","Anjiang","Xinqing","Taikang","Yutan","Bayan","Shilin","Huangnihe","Lingcheng","Manzhouli","Liaozhong","Nanzhou","Wulingyuan","Songling","Fengxiang","Gutao","Guye","Nagqu","Fuyuan","Bojia","Gantang","Wuyishan","Hoxtolgay","Zhouzhuang"],"CX":[],"CC":[],"CO":["Bogot\xe1","Cali","Medell\xedn","Barranquilla","Cartagena","C\xfacuta","Bucaramanga","Pereira","Santa Marta","Ibagu\xe9","Bello","Pasto","Manizales","Neiva","Soledad","Villavicencio","Armenia","Soacha","Valledupar","Itag\xfc\xed","Monter\xeda","Sincelejo","Popay\xe1n","Floridablanca","Palmira","Buenaventura","Barrancabermeja","Dosquebradas","Tulu\xe1","Envigado","Cartago","Maicao","Florencia","Girardot City","Sogamoso","Guadalajara de Buga","Tunja","Gir\xf3n","Malambo","Magangu\xe9","Facatativ\xe1","Riohacha","Duitama","Zipaquir\xe1","Fusagasug\xe1","Ci\xe9naga","Tumaco","Apartad\xf3","Piedecuesta","Montel\xedbano","Oca\xf1a","La Dorada","Ipiales","Quibd\xf3","Aguachica","Yumbo","Arauca","Sabanalarga","Chinchin\xe1","Caldas","Villa del Rosario","Ch\xeda","Rionegro","Calarc\xe1","Yopal","Sahag\xfan","Fundaci\xf3n","Los Patios","San Andr\xe9s","Caucasia","Santa Rosa de Cabal","Espinal","Turbaco","Ceret\xe9","El Banco","Funza","Pitalito","Puerto Tejada","Pamplona","Agust\xedn Codazzi","Turbo","Madrid","Arjona","La Estrella","Copacabana","Plato","Chigorod\xf3","El Carmen de Bol\xedvar","Florida","Chiquinquir\xe1","Jamund\xed","Pradera","Baranoa","Piendamo","Sevilla","Santander de Quilichao","El Bagre","Acac\xedas","Lorica","Segovia","Corozal","El Cerrito","Payand\xe9","Planeta Rica","La Ceja","San Marcos","Montenegro","Villamar\xeda","Sabaneta","Puerto Berr\xedo","La Virginia","San Gil","Pivijay","San Onofre","Caicedonia","Granada","Belalc\xe1zar","Quimbaya","Momp\xf3s","San Luis de Sinc\xe9","Puerto As\xeds","Leticia","San Juan Nepomuceno","Morales","Garz\xf3n","Tame","Zarzal","El Charco","L\xedbano","Honda","Palmar de Varela","Aracataca","Roldanillo","Santiago de Tol\xfa","Puerto Boyac\xe1","La Tebaida","Mosquera","San Juan del Cesar","La Mesa","Ariguan\xed","Tierralta","Puerto Colombia","Melgar","Santo Tom\xe1s","Anaime","Anserma","Cajic\xe1","Sabanagrande","Buenaventura","San Carlos","Marinilla","Cumaribo","Candelaria","Fonseca","La Uni\xf3n","Mar\xeda la Baja","Sucre","Sibat\xe9","San Sebasti\xe1n de Mariquita","Campo de la Cruz","San Carlos","Ayapel","Campoalegre","Yarumal","San Jos\xe9 del Guaviare","Curuman\xed","Mocoa","Sampu\xe9s","Carmen de Viboral","Flandes","Pat\xeda","Villeta","Carepa","Villa de San Diego de Ubat\xe9","Morales","Barbosa","San Jacinto","T\xfaquerres","Circasia","L\xe9rida","Villanueva"],"KM":["Moroni","Moutsamoudou"],"CG":["Brazzaville","Pointe-Noire","Dolisie","Kayes","Owando","Ou\xe9sso","Loandjili","Madingou","Gamboma","Impfondo"],"CD":["Kinshasa","Lubumbashi","Mbuji-Mayi","Kisangani","Masina","Kananga","Likasi","Kolwezi","Tshikapa","Beni","Bukavu","Mwene-Ditu","Kikwit","Mbandaka","Matadi","Uvira","Boma","Butembo","Gandajika","Kalemie","Goma","Kindu","Isiro","Bandundu","Gemena","Ilebo","Bunia","Bumba","Mbanza-Ngungu","Kamina","Lisala","Lodja","Kipushi","Kabinda","Kasongo","Mweka","Gbadolite","Buta","Moanda","Bulungu","Basoko","Lubao","Lusambo","Nioki","Inongo","Tshela","Bukama","Mangai","Kampene","Kabare","Kambove","Yangambi","Luebo","Aketi","Mushie","Boende","Kongolo","Kabalo","Businga","Kasangulu","Bolobo","Libenge","Watsa","Demba","Kasongo-Lunda"],"CK":[],"CR":["San Jos\xe9","Lim\xf3n","San Francisco","Alajuela","Liberia","Para\xedso","Puntarenas","San Isidro","Curridabat","San Vicente","San Vicente de Moravia","San Jos\xe9","Purral","Turrialba","San Miguel","San Pedro","San Rafael Abajo","Quesada","Ip\xeds","Cartago","Chacarita","San Juan","Mercedes","Guadalupe","Aserr\xed","San Rafael","San Felipe","Patarr\xe1","Tejar","Heredia","San Pablo","Calle Blancos","Ca\xf1as"],"CI":["Abidjan","Abobo","Bouak\xe9","Daloa","San-P\xe9dro","Yamoussoukro","Korhogo","Man","Divo","Gagnoa","Abengourou","Anyama","Agboville","Grand-Bassam","Dabou","Dimbokro","Ferkess\xe9dougou","Adzop\xe9","Bouafl\xe9","Sinfra","Katiola","Bondoukou","Danan\xe9","Oum\xe9","S\xe9gu\xe9la","Bingerville","Issia","Odienn\xe9","Duekou\xe9","Agnibil\xe9krou","Daoukro","Tengr\xe9la","Guiglo","Toumodi","Boundiali","Lakota","Aboisso","Arrah","Bonoua","Akoup\xe9","Tiassal\xe9","Zu\xe9noula","Bongouanou","Vavoua","Affery","Touba","Bouna","Sassandra","B\xe9oumi","Biankouma","Tanda"],"HR":["Zagreb","Split","Rijeka","Osijek","Zadar","Slavonski Brod","Pula","Sesvete","Karlovac","Vara\u017edin","Stenjevec","\u0160ibenik","Centar","Sisak","Velika Gorica","Vinkovci","Vukovar","Dubrovnik","Bjelovar","Koprivnica","Po\u017eega","Solin"],"CU":["Havana","Santiago de Cuba","Camag\xfcey","Holgu\xedn","Guant\xe1namo","Santa Clara","Diez de Octubre","Arroyo Naranjo","Las Tunas","Bayamo","Boyeros","Pinar del R\xedo","Cienfuegos","Ciudad Camilo Cienfuegos","San Miguel del Padr\xf3n","Centro Habana","Matanzas","Ciego de \xc1vila","Cerro","Manzanillo","Sancti Sp\xedritus","Guanabacoa","Palma Soriano","Alamar","C\xe1rdenas","La Habana Vieja","Moa","Puerto Padre","Contramaestre","G\xfcira de Melena","Consolaci\xf3n del Sur","G\xfcines","Artemisa","San Luis","Mor\xf3n","Col\xf3n","Florida","Sagua la Grande","Trinidad","San Cristobal","Placetas","San Jos\xe9 de las Lajas","Jag\xfcey Grande","Nuevitas","Banes","Bartolom\xe9 Mas\xf3","Corralillo","Jes\xfas Men\xe9ndez","Jobabo","Baracoa","Jovellanos","Bauta","Santo Domingo","Cabaigu\xe1n","Regla","San Germ\xe1n","Ranchuelo","San Antonio de los Ba\xf1os","Cacocum","Yaguajay","Manicaragua","Amancio","Jiguan\xed","Cifuentes","Gu\xe1imaro","Caibari\xe9n","Cumanayagua","Condado","Camajuan\xed","Santiago de las Vegas","Santa Cruz del Sur","Minas de Matahambre","Remedios","Madruga","Uni\xf3n de Reyes","Vertientes","Ciro Redondo","Mariel","Yara","La Salud","Mais\xed","Gibara","Vi\xf1ales","Pedro Betancourt","Cueto","Encrucijada","R\xedo Guayabal de Yateras","Los Palacios","Limonar","Guanajay","Campechuela","Cruces","Chambas","Perico","R\xedo Cauto","Aguada de Pasajeros","Calimete","Palmira","Lajas","Jimaguay\xfa","Cauto Cristo","Minas","Esmeralda","Nueva Gerona","Jaruco","Colombia"],"CY":["Nicosia","Limassol","Larnaca","Str\xf3volos","Famagusta","Paphos","Kyrenia","Protaras"],"CZ":["Prague","Brno","Ostrava","Pilsen","Olomouc","Liberec","\u010cesk\xe9 Bud\u011bjovice","Hradec Kr\xe1lov\xe9","\xdast\xed nad Labem","Pardubice","Hav\xed\u0159ov","Zl\xedn","Kladno","Most","Karvin\xe1","Opava","Fr\xfddek-M\xedstek","D\u011b\u010d\xedn","Karlovy Vary","Teplice","Chomutov","Jihlava","Prost\u011bjov","P\u0159erov","Jablonec nad Nisou","Mlad\xe1 Boleslav","\u010cesk\xe1 L\xedpa","T\u0159eb\xed\u010d","T\u0159inec","T\xe1bor","Znojmo","P\u0159\xedbram","Orlov\xe1","Cheb","Mod\u0159any","Libe\u0148","Trutnov","P\xedsek","Kol\xedn","Krom\u011b\u0159\xed\u017e","\u0160umperk","Vset\xedn","Vala\u0161sk\xe9 Mezi\u0159\xed\u010d\xed","Litv\xednov","Nov\xfd Ji\u010d\xedn","Uhersk\xe9 Hradi\u0161t\u011b","Hodon\xedn","B\u0159eclav","\u010cesk\xfd T\u011b\u0161\xedn","Krnov","Sokolov","Litom\u011b\u0159ice","Havl\xed\u010dk\u016fv Brod","Chrudim","Strakonice","Kop\u0159ivnice","Klatovy","Bohum\xedn","Star\xfd Bohum\xedn","Jind\u0159ich\u016fv Hradec","Vy\u0161kov","\u010cern\xfd Most","Kutn\xe1 Hora","N\xe1chod","Jirkov","\u017d\u010f\xe1r nad S\xe1zavou","Blansko"],"DK":["Copenhagen","\xc5rhus","Odense","Aalborg","Frederiksberg","Esbjerg","Horsens","Randers","Kolding","Vejle","Hvidovre","Greve","Herning","Roskilde","Silkeborg","N\xe6stved","Charlottenlund","Ballerup","Vanl\xf8se","Fredericia","H\xf8rsholm","Helsing\xf8r","Viborg","K\xf8ge","Holstebro","Slagelse","Taastrup","Hiller\xf8d","R\xf8dovre","Albertslund","Svendborg","S\xf8nderborg","Hj\xf8rring","Holb\xe6k","Frederikshavn","N\xf8rresundby","Haderslev","Skive","Glostrup","Ringsted"],"DJ":["Djibouti","\'Ali Sabieh","Tadjourah"],"DM":[],"DO":["Santo Domingo","Santiago de los Caballeros","Santo Domingo Oeste","Santo Domingo Este","San Pedro de Macor\xeds","La Romana","Bella Vista","San Crist\xf3bal","Puerto Plata","San Francisco de Macor\xeds","Salvale\xf3n de Hig\xfcey","Concepci\xf3n de La Vega","Punta Cana","Santa Cruz de Barahona","Bonao","San Juan de la Maguana","Bajos de Haina","Ban\xed","Moca","Azua","Villa Francisca","Mao","Boca Chica","Salcedo","Esperanza","Cotu\xed","Villa Altagracia","Hato Mayor del Rey","Nagua","Villa Bison\xf3","Jarabacoa","Constanza","Villa Consuelo","Santa Cruz de El Seibo","Tamboril","Las Matas de Farf\xe1n","San Jos\xe9 de Ocoa","Bayaguana","R\xedo Grande"],"EC":["Guayaquil","Quito","Cuenca","Santo Domingo de los Colorados","Machala","Manta","Portoviejo","Eloy Alfaro","Esmeraldas","Ambato","Tutamandahostel","Milagro","Ibarra","Riobamba","Quevedo","Loja","Tulc\xe1n","Babahoyo","La Libertad","Latacunga","Velasco Ibarra","Puerto Francisco de Orellana","Ventanas","Pasaje","Chone","Salinas","Santa Elena","Rosa Zarate","Santa Rosa","Balzar","Huaquillas","Bah\xeda de Car\xe1quez","La Troncal","Jipijapa","Azogues","Naranjito","Vinces","Otavalo","El Triunfo","Naranjal","Playas","Yaguachi Nuevo","Cayambe","Machachi","Puyo","Nueva Loja","Samborond\xf3n","Macas","Pedro Carbo","Guaranda","Boca Suno","San Lorenzo de Esmeraldas"],"EG":["Cairo","Alexandria","Giza","Port Said","Suez","Al Ma\u1e29allah al Kubr\xe1","Luxor","Asy\u016b\u0163","Al Man\u015f\u016brah","Tanda","Al Fayy\u016bm","Zagazig","Ismailia","Kafr ad Daww\u0101r","Aswan","Qin\u0101","\u1e28alw\u0101n","Damanh\u016br","Al Miny\u0101","Idk\u016b","Sohag","New Cairo","Ban\u012b Suwayf","Shib\u012bn al Kawm","Banh\u0101","\u0162alkh\u0101","Kafr ash Shaykh","Mallaw\u012b","Dikirnis","Idf\u016b","Bilbays","Arish","Jirj\u0101","Al \u1e28aw\u0101mid\u012byah","Bilq\u0101s","Dis\u016bq","Ab\u016b Kab\u012br","Qaly\u016bb","Akhm\u012bm","Al Ma\u0163ar\u012byah","Hurghada","Zefta","\u0162ah\u0163\u0101","Sam\u0101l\u016b\u0163","B\u016bsh","\u1e28awsh \u2018\u012as\xe1","Mun\u016bf","Ashm\u016bn","Manfal\u016b\u0163","Damietta","Kafr az Zayy\u0101t","Ab\u016b T\u012bj","Isn\u0101","Abn\u016bb","Al Q\u016b\u015f\u012byah","Al Jamm\u0101l\u012byah","Dayr\u016b\u0163","Al Kh\u0101rijah","Toukh","Al Manzalah","Rosetta","Aws\u012bm","Al Fashn","Fuwwah","F\u0101q\u016bs","Al Kh\u0101nkah","Mersa Matruh","Al Qurayn","Ab\u016b Qurq\u0101\u015f","Al Mansh\u0101h","Kousa","Kawm Umb\u016b","F\u0101rask\u016br","Ban\u012b Maz\u0101r","Minyat an Na\u015fr","Shib\u012bn al Qan\u0101\u1e6dir","Al Qan\u0101\u0163ir al Khayr\u012byah","Basy\u016bn","Samann\u016bd","Shirb\u012bn","Dishn\u0101","Farsh\u016b\u0163","Diyarb Najm","At Tall al Kab\u012br","Tal\u0101","Ibshaw\u0101y","Al Balyan\u0101","Ash Shuhad\u0101\u2019","S\u012bd\u012b S\u0101lim","Juhaynah","\u0162\u0101miyah","Masht\u016bl as S\u016bq","Al \u1e28\u0101m\u016bl","Ain Sukhna","I\u0163s\u0101","Ma\u0163\u0101y","Al Bad\u0101r\u012b","Hihy\u0101","Al Qan\u0101y\u0101t","Quwaysin\u0101","Mad\u012bnat Sittah Ukt\u016bbar","Ab\u016b al Ma\u0163\u0101m\u012br","Naja\' \u1e24amm\u0101d\u012b","Dayr Maw\u0101s","Ad Dilinj\u0101t","Az Zarq\u0101","A\u015f \u015eaff","\u2018Izbat al Burj","Al W\u0101si\u0163ah","Sumus\u0163\u0101 as Sul\u0163\u0101n\u012b","Kawm \u1e28am\u0101dah","Al B\u0101j\u016br","Kafr \u015eaqr","Al \u2018Ayy\u0101\u0163","Aj\u0101","Al Ibr\u0101h\u012bm\u012byah","Safaga","Ras Gharib","Al Qu\u015fayr","Qu\u0163\u016br"],"SV":["San Salvador","Soyapango","Santa Ana","San Miguel","Mejicanos","Santa Tecla","Apopa","Delgado","Sonsonate","San Marcos","Usulut\xe1n","Cojutepeque","Cuscatancingo","San Vicente","Zacatecoluca","San Mart\xedn","Ilopango","Ahuachap\xe1n","Antiguo Cuscatl\xe1n","Chalchuapa","Quezaltepeque","La Uni\xf3n","Ayutuxtepeque","Acajutla","Aguilares","Sensuntepeque"],"GQ":["Bata","Malabo","Ebebiyin"],"ER":["Asmara","Keren","Massawa","Assab"],"EE":["Tallinn","Tartu","Narva","Kohtla-J\xe4rve","P\xe4rnu","Viljandi"],"ET":["Addis Ababa","Dire Dawa","Mek\'ele","Nazr\u0113t","Bahir Dar","Gondar","Des\u0113","Hawassa","Jimma","Bishoftu","Kombolcha","Harar","Sodo","Shashemen\u0113","Hosa\u2019ina","Arba Minch","\u0100d\u012bgrat","Debre Mark\u2019os","Debre Birhan","Jijiga","Inda Silas\u0113","Ziway","D\u012bla","H\u0101gere Hiywet","Gamb\u0113la","Axum","Waliso","Yirga \u2018Alem","Mojo","Goba","Shakiso","Felege Neway","\u0100reka","Bod\u012bt\u012b","Debre Tabor","Jinka","Gimbi","\u0100sbe Tefer\u012b","Korem","\u0100sosa","Butaj\u012bra","Metu","\u0100garo","Kibre Mengist","Maych\u2019ew","Werota","Demb\u012b Dolo","Dubti","Fich\u0113","K\u2019ol\u012bto","Mend\u012b","Debark\u2019","Tippi","Kemis\u0113","\u0100sasa","Genet","Finote Selam","Metah\u0101ra","Dodola","Addiet Canna","\u0100d\u012bs Zemen","Hagere Maryam","Bur\u0113","Rob\u012bt","Asaita","Bedel\u0113","Nejo"],"FK":[],"FO":[],"FJ":["Suva","Lautoka","Nadi","Labasa"],"FI":["Helsinki","Espoo","Tampere","Vantaa","Turku","Oulu","Lahti","Kuopio","Jyv\xe4skyl\xe4","Pori","Lappeenranta","Vaasa","Kotka","Joensuu","H\xe4meenlinna","Porvoo","Mikkeli","Hyvinge","J\xe4rvenp\xe4\xe4","Nurmij\xe4rvi","Rauma","Mellunkyl\xe4","Lohja","Vuosaari","Kokkola","Kajaani","Rovaniemi","Tuusula","Kirkkonummi","Sein\xe4joki","Kerava","Kouvola","Imatra","Nokia","Savonlinna","Kallio","Riihim\xe4ki","Kaarela","Vihti","Salo","Kangasala","Raisio","Karhula","Kemi","Iisalmi","Varkaus","Raahe","Yl\xf6j\xe4rvi","Hamina","Kaarina","Tornio","Heinola","Hollola","Valkeakoski","Siilinj\xe4rvi"],"FR":["Paris","Marseille","Lyon","Toulouse","Nice","Nantes","Strasbourg","Montpellier","Bordeaux","Lille","Rennes","Reims","Le Havre","Cergy-Pontoise","Saint-\xc9tienne","Toulon","Angers","Grenoble","Dijon","N\xeemes","Aix-en-Provence","Saint-Quentin-en-Yvelines","Brest","Le Mans","Amiens","Tours","Limoges","Clermont-Ferrand","Villeurbanne","Besan\xe7on","Orl\xe9ans","Metz","Rouen","Mulhouse","Perpignan","Caen","Boulogne-Billancourt","Nancy","Argenteuil","Saint-Denis","Roubaix","Tourcoing","Montreuil","Avignon","Marseille 13","Asni\xe8res-sur-Seine","Nanterre","Poitiers","Versailles","Courbevoie","Cr\xe9teil","Pau","Colombes","Vitry-sur-Seine","Aulnay-sous-Bois","Marseille 08","Marseille 15","Marseille 09","La Rochelle","Champigny-sur-Marne","Rueil-Malmaison","Antibes","Saint-Maur-des-Foss\xe9s","Calais","B\xe9ziers","Dunkerque","Aubervilliers","Cannes","M\xe9rignac","Bourges","Saint-Nazaire","Colmar","Valence","Quimper","Drancy","Noisy-le-Grand","Villeneuve-d\'Ascq","La Seyne-sur-Mer","Levallois-Perret","Marseille 14","Chamb\xe9ry","Issy-les-Moulineaux","Neuilly-sur-Seine","Troyes","Antony","La Roche-sur-Yon","Marseille 12","Lorient","Sarcelles","Pessac","Ivry-sur-Seine","\xc9vreux","V\xe9nissieux","Cergy","Clichy","Marseille 11","Saint-Quentin","Niort","Belfort","Ajaccio","Vannes","Sartrouville","Maisons-Alfort","Meaux","Blois","Brive-la-Gaillarde","Arles","Beauvais","Ch\xe2teauroux","Cholet","Fr\xe9jus","Pantin","Saint-Brieuc","Montauban","Charleville-M\xe9zi\xe8res","Albi","Tarbes","Fontenay-sous-Bois","\xc9vry","Clamart","Marseille 10","Ch\xe2lons-en-Champagne","Narbonne","Saint-Malo","Laval","Hy\xe8res","Carcassonne","Angoul\xeame","Annecy","Bondy","Le Blanc-Mesnil","Villejuif","Grasse","Sevran","Castres","Chalon-sur-Sa\xf4ne","Marseille 04","Arras","Boulogne-sur-Mer","Chelles","Cagnes-sur-Mer","Saint-Herblain","Douai","\xc9pinay-sur-Seine","Vincennes","Martigues","Marseille 03","Bourg-en-Bresse","Bobigny","Montlu\xe7on","Aubagne","Valenciennes","Suresnes","Meudon","Marseille 05","Bayonne","Istres","Thionville","Mantes-la-Jolie","Compi\xe8gne","Nevers","Chartres","Marseille 06","Le Cannet","Wattrelos","Caluire-et-Cuire","Gap","Talence","Al\xe8s","Gennevilliers","Saint-Priest","Rosny-sous-Bois","Auxerre","Salon-de-Provence","Saint-Germain-en-Laye","Bastia","Marseille 01","S\xe8te","Anglet","Puteaux","Corbeil-Essonnes","Garges-l\xe8s-Gonesse","Roanne","Savigny-sur-Orge","Livry-Gargan","\xc9pinal","Saint-Ouen","Rez\xe9","Montigny-le-Bretonneux","Noisy-le-Sec","Melun","Bagneux","Massy","Haguenau","Montrouge","Marcq-en-Bar\u0153ul","Vitrolles","Draguignan","Lens","Gagny","Saint-Chamond","Bron","Vaulx-en-Velin","Jou\xe9-l\xe8s-Tours","Alfortville","La Courneuve","Ch\xe2tellerault","Villepinte","Cambrai","Poissy","Conflans-Sainte-Honorine","Mont-de-Marsan","Plaisir","Marseille 07","Marignane","Dieppe","Mont\xe9limar","Tremblay-en-France","Choisy-le-Roi","Saint-Martin-d\'H\xe8res","M\xe2con","Romans-sur-Is\xe8re","Saint-Rapha\xebl","Pontault-Combault","Six-Fours-les-Plages","P\xe9rigueux","Aurillac","Neuilly-sur-Marne","Li\xe9vin","Agen","Franconville","Sainte-Genevi\xe8ve-des-Bois","Maubeuge","Bagnolet","Saumur","Biarritz","La Ciotat","\xc9chirolles","Villefranche-sur-Sa\xf4ne","Ch\xe2tenay-Malabry","Stains","Ch\xe2tillon","Vienne","Schiltigheim","Les Mureaux","Le Perreux-sur-Marne","Guyancourt","Palaiseau","Saint-Dizier","Creil","Vand\u0153uvre-l\xe8s-Nancy","Thonon-les-Bains","B\xe9thune","Colomiers","Nogent-sur-Marne","Athis-Mons","Viry-Ch\xe2tillon","Houilles","Soissons","Dreux","Charenton-le-Pont","Villeneuve-Saint-Georges","\xc9lancourt","Alen\xe7on","Sotteville-l\xe8s-Rouen","Orange","Villenave-d\'Ornon","Pontoise","Villiers-sur-Marne","Chatou","Goussainville","Lomme","Vierzon","Saint-M\xe9dard-en-Jalles","Thiais","Carpentras","L\'Ha\xff-les-Roses","Menton","Saint-Laurent-du-Var","Saintes","Rochefort","Malakoff","Draveil","Saint-Leu","Saint-S\xe9bastien-sur-Loire","Le Chesnay","Tournefeuille","Clichy-sous-Bois","Chaumont","Saint-\xc9tienne-du-Rouvray","Meyzieu","Yerres","Montb\xe9liard","Saint-Cloud","Sens","Laon","Lambersart","Trappes","Rodez","Bergerac","Annemasse","La Garde","Ermont","Rillieux-la-Pape","Villemomble","Pierrefitte-sur-Seine","Le Kremlin-Bic\xeatre","Champs-sur-Marne","Aix-les-Bains","Bezons","Vallauris","Taverny","Illkirch-Graffenstaden","La Teste-de-Buch","\xc9pernay","Villiers-le-Bel","Vichy","Sannois","Gonesse","Vigneux-sur-Seine","Cavaillon","Rambouillet","Cherbourg-Octeville","Armenti\xe8res","Lunel","Cachan","Le Grand-Quevilly","Abbeville","La Garenne-Colombes","Montigny-l\xe8s-Metz","Vanves","Vernon","Savigny-le-Temple","Dole","Villeneuve-sur-Lot","Les Ulis","Marseille 02","Oyonnax","Oullins","Le Creusot","H\xe9nin-Beaumont","Orvault","Coudekerque-Branche","Herblay","Ris-Orangis","Sucy-en-Brie","Grigny","Fresnes","Romainville","Fontenay-aux-Roses","D\xe9cines-Charpieu","Saint-Di\xe9-des-Vosges","Fontaine","Auch","Bruay-la-Buissi\xe8re","Lisieux","Sarreguemines","Torcy","Gradignan","Lanester","Br\xe9tigny-sur-Orge","Muret","Bois-Colombes","Blagnac","H\xe9rouville-Saint-Clair","Libourne","Le Bouscat","Miramas","Beaune","Eaubonne","Brunoy","Villeparisis","Montfermeil","S\xe8vres","Foug\xe8res","Saint-Pol-sur-Mer","La Madeleine","Gif-sur-Yvette","Bourgoin-Jallieu","B\xe8gles","Cahors","Millau","Hazebrouck","Grande-Synthe","La Valette-du-Var","Moulins","Mont-Saint-Aignan","\xc9tampes","Mons-en-Bar\u0153ul","Agde","Saint-Ouen-l\'Aum\xf4ne","Vertou","Montgeron","Maisons-Laffitte","Le Puy-en-Velay","Le Petit-Quevilly","Lormont","Olivet","Ach\xe8res","Ozoir-la-Ferri\xe8re","Le Plessis-Robinson","Cenon","Combs-la-Ville","Dax","Frontignan","Voiron","Loos","Le M\xe9e-sur-Seine","Villeneuve-la-Garenne","F\xe9camp","Cormeilles-en-Parisis","Sainte-Foy-l\xe8s-Lyon","Verdun","V\xe9lizy-Villacoublay","Saint-L\xf4","Lun\xe9ville","Deuil-la-Barre","La Celle-Saint-Cloud","Annecy-le-Vieux","Sceaux","Lannion","Denain","Allauch","Concarneau","Eysines","Croix","Forbach","Manosque","Saint-Mand\xe9","Montmorency","Gardanne","Les Lilas","Fleury-les-Aubrais","Dammarie-les-Lys","Roissy-en-Brie","Saint-Genis-Laval","Saint-Louis","Cognac","Saint-Michel-sur-Orge","Longjumeau","Bressuire","Vaur\xe9al","Lons-le-Saunier","Ploemeur","Lagny-sur-Marne","Sedan","Orly","Pontarlier","Chamali\xe8res","Meylan","Montceau-les-Mines","Halluin","Riom","Chevilly-Larue"],"GF":["Cayenne","Matoury","Saint-Laurent-du-Maroni","Kourou"],"PF":["Faaa","Papeete","Punaauia"],"TF":[],"GA":["Libreville","Port-Gentil","Franceville","Oyem","Moanda","Mouila","Lambar\xe9n\xe9"],"GM":["Serekunda","Brikama","Bakau","Banjul","Farafenni","Lamin"],"GE":["Tbilisi","Kutaisi","Batumi","Sokhumi","Zugdidi","Rustavi","P\u2019ot\u2019i","Gori","Ts\u2019khinvali","Samtredia","Khashuri","Senak\u2019i","Stantsiya Novyy Afon","Zest\u2019aponi","Telavi","Ozurgeti"],"DE":["Berlin","Hamburg","Munich","K\xf6ln","Frankfurt am Main","Essen","Stuttgart","Dortmund","D\xfcsseldorf","Bremen","Hannover","Leipzig","Duisburg","N\xfcrnberg","Dresden","Wandsbek","Bochum","Bochum-Hordel","Wuppertal","Bielefeld","Bonn","Mannheim","Marienthal","Karlsruhe","Hamburg-Nord","Wiesbaden","M\xfcnster","Gelsenkirchen","Aachen","M\xf6nchengladbach","Augsburg","Eimsb\xfcttel","Altona","Chemnitz","Braunschweig","Krefeld","Halle (Saale)","Hamburg-Mitte","Kiel","Magdeburg","Neue Neustadt","Oberhausen","Freiburg","L\xfcbeck","Erfurt","Harburg","Hagen","Rostock","Kassel","Hamm","Mainz","Saarbr\xfccken","Herne","M\xfclheim","Neuk\xf6lln","Osnabr\xfcck","Solingen","Ludwigshafen am Rhein","Leverkusen","Oldenburg","Neuss","Prenzlauer Berg","Kreuzberg","Potsdam","Heidelberg","Paderborn","Darmstadt","W\xfcrzburg","Regensburg","Wolfsburg","Recklinghausen","G\xf6ttingen","Heilbronn","Ingolstadt","Ulm","Bottrop","Charlottenburg","Bergedorf","Pforzheim","Offenbach","Friedrichshain","Bremerhaven","Remscheid","Sch\xf6neberg","Nippes","Reutlingen","F\xfcrth","Moers","Koblenz","Siegen","Bergisch Gladbach","Jena","Gera","Marzahn","Hildesheim","Erlangen","Witten","Salzgitter","Trier","Zwickau","Kaiserslautern","Iserlohn","Schwerin","G\xfctersloh","Wilmersdorf","D\xfcren","Esslingen","Ratingen","Marl","L\xfcnen","Hanau am Main","Velbert","Ludwigsburg","Flensburg","Gesundbrunnen","Cottbus","Wilhelmshaven","T\xfcbingen","Minden","Villingen-Schwenningen","Konstanz","Mitte","Worms","Lichterfelde","Dorsten","L\xfcdenscheid","Marburg an der Lahn","Neum\xfcnster","Wedding","Castrop-Rauxel","Bogenhausen","Dessau","Gladbeck","Arnsberg","Rheine","Viersen","Delmenhorst","Reinickendorf","Bayreuth","Hellersdorf","Troisdorf","Gie\xdfen","Bocholt","Detmold","Steglitz","Norderstedt","L\xfcneburg","Celle","Moabit","Dinslaken","Bamberg","Aschaffenburg","Neubrandenburg","Lippstadt","Aalen","Neuwied","Unna","Plauen","Herten","Herford","Grevenbroich","Weimar","Kerpen","Fulda","Dormagen","Bergheim","Garbsen","Wesel","Kempten (Allg\xe4u)","Schw\xe4bisch Gm\xfcnd","Sindelfingen","Landshut","Rosenheim","K\xf6penick","Brandenburg an der Havel","R\xfcsselsheim","Berlin K\xf6penick","Langenfeld","Offenburg","Stralsund","Stolberg","Hameln","Zehlendorf","Menden","Friedrichshafen","G\xf6ppingen","G\xf6rlitz","Pankow","Hattingen","Tempelhof","Hilden","Sankt Augustin","Eschweiler","Ahlen","Bad Salzuflen","Euskirchen","Meerbusch","Wolfenb\xfcttel","H\xfcrth","Baden-Baden","Schweinfurt","Neustadt","Pulheim","Neu-Hohensch\xf6nhausen","Gummersbach","Waiblingen","Nordhorn","Greifswald","Cuxhaven","Wetzlar","Bergkamen","Bad Homburg vor der H\xf6he","Willich","Frankfurt (Oder)","Emden","Neu-Ulm","Lingen","Winterhude","Erftstadt","Neubr\xfcck","Ibbenb\xfcren","Passau","Langenhagen","Schwerte","Speyer","Heidenheim an der Brenz","Berlin Treptow","Peine","Mariendorf","Neunkirchen","Bad Oeynhausen","Lichtenrade","Hof","Friedrichsfelde","Kleve","Ravensburg","Frechen","Elmshorn","Bornheim","Soest","Rastatt","Erkrath","Wei\xdfensee","Stuttgart-Ost","D\xfclmen","Frankenthal","Herzogenrath","L\xf6rrach","Albstadt","Gotha","Melle","Alsdorf","B\xf6blingen","Gronau","Rheda-Wiedenbr\xfcck","Neustadt am R\xfcbenberge","Kamen","Leonberg","Singen","Stade","Langenhorn","Hennef","B\xfcnde","Meiderich","Wismar","Amberg","Erkelenz","Homburg","Straubing","Halle Neustadt","Br\xfchl","Fellbach","Lehrte","Nordhausen","Lahr","Eisenach","Hoyerswerda","Freiberg","Pirmasens","Goslar","Filderstadt","Suhl","Weinheim","Rodgau","Bad Kreuznach","Monheim am Rhein","Gifhorn","Bruchsal","Rottenburg","Alt-Hohensch\xf6nhausen","Freising","Staaken","Weiden","Kaufbeuren","Oberursel","Nettetal","Kaarst","Wunstorf","Eberswalde","Bautzen","Lemgo","Coburg","Bietigheim-Bissingen","M\xfclheim","Landau in der Pfalz","Heinsberg","Seevetal","Lankwitz","K\xf6nigswinter","Memmingen","V\xf6lklingen","Borken","Rudow","Oranienburg","Pinneberg","Dreieich","Pirna","Aurich","Barmbek-Nord","N\xfcrtingen","Kirchheim unter Teck","Laatzen","H\xfcckelhoven","Dachau","Halberstadt","Schorndorf","Neumarkt in der Oberpfalz","Mettmann","L\xf6hne","Kamp-Lintfort","Britz","Bensheim","Siegburg","Gallus","Freital","Ettlingen","Voerde","Warendorf","Sankt Ingbert","Altenburg","Schwabach","Westend","Buckow","Saarlouis","Maintal","Buxtehude","Ahaus","M\xfchlhausen","Schwedt (Oder)","Neustadt/S\xfcd","Beckum","Haltern am See","Hofheim am Taunus","Stendal","Wilhelmstadt","Hemer","Falkensee","Buchholz in der Nordheide","Riesa","W\xfcrselen","Germering","Wermelskirchen","Leinfelden-Echterdingen","Coesfeld","Schw\xe4bisch Hall","Niederkassel","Porta Westfalica","Datteln","Kempen","Lage","Lurup","Gropiusstadt","Backnang","Falkenhagener Feld","Pasing","Wesseling","Emsdetten","Langen","Neu Isenburg","M\xe4rkisches Viertel","Zweibr\xfccken","Sinsheim","Greven","Uelzen","Bernau bei Berlin","Tuttlingen","Merseburg","Steinfurt","Spandau","Wernigerode","Balingen","Sch\xf6nebeck","Tegel","Meppen","Papenburg","Geldern","Kehl","Vegesack","J\xfclich","Leer","Limburg an der Lahn","Goch","Ostfildern","F\xfcrstenwalde","F\xfcrstenfeldbruck","Erding","Korschenbroich","Farmsen-Berne","Dietzenbach","Itzehoe","Burglesum","Seelze","Lichtenberg","Ottensen","M\xf6rfelden-Walldorf","H\xf6xter","Gevelsberg","Winsen","Radebeul","Nienburg","Viernheim","Ennepetal","Georgsmarienh\xfctte","Rheinfelden","K\xf6nigs Wusterhausen","Stuhr","Biberach an der Ri\xdf","Crailsheim","Meschede","Rheinberg","Werl","Bernburg","Eisenh\xfcttenstadt","Wedel","Neuruppin","Ansbach","Kreuztal","Lampertheim","Idar-Oberstein","Fennpfuhl","Osterholz-Scharmbeck","Bramsche","Lohmar","Herrenberg","G\xfcstrow","Cloppenburg","Ganderkesee","Merzig","Deggendorf","Kornwestheim","Northeim","Werne","Bad Vilbel","Bad Hersfeld","Forchheim","Oer-Erkenschwick","Marienfelde","T\xf6nisvorst","Bad Nauheim","Schwelm","Waltrop","Burgdorf","Ahrensburg","Eidelstedt","Radolfzell","Achim","Wittenberg","Delbr\xfcck","Springe","Wei\xdfenfels","Vechta","Naumburg","Wegberg","Sundern","Andernach","Weil am Rhein","Taunusstein","Gaggenau","Geesthacht","Zeitz","Haan","Oelde","Emmerich","B\xfchl","Friedberg","Wetter (Ruhr)","Wittenau","Senftenberg","D\xfcsseldorf-Pempelfort","Vaihingen an der Enz","K\xf6then","Rietberg","Warstein","Meissen","Neuburg an der Donau","Geilenkirchen","Rendsburg","Niedersch\xf6nhausen","Schwandorf in Bayern","Plettenberg","Baunatal","Neustadt/Nord","Bretten","Lennestadt","Kevelaer","Stuttgart Feuerbach","Saalfeld","Geislingen an der Steige","Einbeck","Rinteln","Baesweiler","Bad Neuenahr-Ahrweiler","Winnenden","Nordenham","Heiligenhaus","St. Pauli","Kulmbach","Bad Zwischenahn","Selm","Mechernich","Altstadt Sud","Leichlingen","K\xf6nigsbrunn","Friedberg","Hamminkeln","Neckarsulm","Emmendingen","Overath","Leimen","Rathenow","Petershagen","Limbach-Oberfrohna","Ilmenau","Wangen","Brilon","Landsberg am Lech","Friedenau","Mahlsdorf","Hakenfelde","Verden","Sankt Wendel","R\xf6srath","Kelkheim (Taunus)","Strausberg","M\xfchlheim am Main","Glauchau","Altglienicke","Lauf an der Pegnitz","Sprockh\xf6vel","Espelkamp","M\xfchlacker","L\xfcbbecke","Wiehl","Rheinbach","Weinstadt-Endersbach","Schmallenberg","Hennigsdorf","Stuttgart M\xfchlhausen","Ehingen","Garmisch-Partenkirchen","Horb am Neckar","Zittau","Zirndorf","Olpe","Arnstadt","Wiesloch","Herdecke","Unterschlei\xdfheim","\xdcbach-Palenberg","Meckenheim","Helmstedt","Rottweil","Rudolstadt","Heppenheim an der Bergstrasse","Bad Honnef","Griesheim","Ellwangen","Reinbek","Wolfen","Varel","Netphen","Butzbach","Lohne","Mosbach","Norden","Pfungstadt","Roth","Hannoversch M\xfcnden","Hattersheim","Ingelheim am Rhein","Delitzsch","Biesdorf","Burg bei Magdeburg","Bedburg","Aschersleben","Wertheim","Apolda","Attendorn","Waldkraiburg","Bingen am Rhein","Nieder-Ingelheim","Salzkotten","Lindau","Korbach","Achern","Dillenburg","Obertshausen","Walsrode","Friedrichsdorf","Werdau","Eisleben Lutherstadt","Bad Oldesloe","Warburg","Syke","Weiterstadt","Harsewinkel","Wallenhorst","Ludwigsfelde","Ditzingen","Greiz","Schleswig","Radevormwald","L\xfcdinghausen","Verl","Markkleeberg","Olching","Sonneberg","Freudenstadt","Weingarten","Calw","Wipperf\xfcrth","Gro\xdf-Gerau","Neuehrenfeld","Stellingen","Ronnenberg","Eckernf\xf6rde","Geretsried","Sangerhausen","Herzogenaurach","Blieskastel","Pfaffenhofen an der Ilm","Sasel","Annaberg-Buchholz","Starnberg","Stadthagen","Sehnde","Opladen","Fr\xf6ndenberg","Sta\xdffurt","Bad Harzburg","Nagold","Duderstadt","Forst","Quedlinburg","Idstein","Kalk","\xd6hringen","Lindlar","Lengerich","Isernhagen Farster Bauerschaft","Schwetzingen","J\xfcchen","Haren","Rees","Reichenbach/Vogtland","Bad Mergentheim","Crimmitschau","Vreden","Waldshut-Tiengen","Werder","Poppenb\xfcttel","Niederrad","Leutkirch","W\xfclfrath","Coswig","Neustrelitz","Karlshorst","Senden","B\xfcren","Rotenburg","Metzingen","Wei\xdfwasser","Meinerzhagen","Elsdorf","Soltau","Marsberg","Seesen","Westerstede","Hohen Neuendorf","Gelnhausen","Alfter","Sondershausen","Gro\xdf-Umstadt","Stadtallendorf","Karben","Bad Pyrmont","Luckenwalde","Guben","Donaueschingen","Xanten","Lebach","Meiningen","B\xfcdingen","Dillingen","\xdcberlingen","Wilnsdorf","Waren","Weilheim","Kitzingen","Riedstadt","Auerbach","Schortens","Bad Soden am Taunus","Wittmund","D\xf6beln","Lichtenfels","Bad Kissingen","Sonthofen","Traunreut","Eschwege","Eppingen","Herborn","Halle","Salzwedel","P\xfcttlingen","Aichach","Vaterstetten","Holzminden","Versmold","Germersheim","Prenzlau","Bruchk\xf6bel","Altena","S\xf6mmerda","Unterhaching","Husum","Engelskirchen","Sulzbach-Rosenberg","Ha\xdfloch","Hiddenhausen","Bad Berleburg","Ennigerloh","B\xfcckeburg","Edewecht","Hockenheim","Stadtlohn","Geseke","Heide","Eislingen","Bad Rappenau","Bergneustadt","Nottuln","Rummelsburg","Quickborn","Eschborn","Rheinstetten","Oberkirch","Werdohl","Senden","Friesoythe","Haldensleben I","Schmargendorf","Gersthofen","Haiger","Vlotho","Zulpich","Giengen an der Brenz","Wagh\xe4usel","Wittenberge","Waldkirch","Neu Wulmstorf","Hessisch Oldendorf","K\xfcrten","Nidderau","Rastede","Wachtberg","Fl\xf6rsheim","Schwanewede","M\xf6ssingen","Heusweiler"],"GH":["Accra","Kumasi","Tamale","Takoradi","Atsiaman","Tema","Teshi Old Town","Cape Coast","Sekondi-Takoradi","Obuase","Medina Estates","Koforidua","Japekrom","Wa","Ejura","Nungua","Sunyani","Ho","Techiman","Aflao","Berekum","Akim Oda","Bawku","Hohoe","Bolgatanga","Tafo","Swedru","Suhum","Dome","Kintampo","Gbawe","Nsawam","Winneba","Kasoa","Yendi","Mampong","Konongo","Asamankese","Prestea","Tarkwa","Dunkwa","Agogo","Wankyi","Anloga","Begoro","Savelugu","Kpandu","Elmina","Salaga","Navrongo","Saltpond","Axim","Akwatia","Shama Junction","Apam","Foso"],"GI":["Gibraltar"],"GR":["Athens","Thessalon\xedki","P\xe1tra","Piraeus","L\xe1risa","Perist\xe9ri","Ir\xe1kleion","Kallith\xe9a","Acharn\xe9s","Kalamari\xe1","N\xedkaia","Glyf\xe1da","Volos","\xcdlion","Ilio\xfapoli","Kerats\xedni","Khal\xe1ndrion","N\xe9a Sm\xfdrni","Maro\xfasi","Agios Dimitrios","Zogr\xe1fos","Aig\xe1leo","N\xe9a Ion\xeda","Io\xe1nnina","Palai\xf3 F\xe1liro","Korydall\xf3s","Tr\xedkala","V\xfdronas","Ag\xeda Paraskev\xed","Gal\xe1tsi","Chalk\xedda","Petro\xfapolis","S\xe9rres","R\xf3dos","Kalamata","Kav\xe1la","Chani\xe1","Kater\xedni","Alexandroupoli","Lam\xeda","Ir\xe1kleio","X\xe1nthi","Kifisi\xe1","Agr\xednio","Cha\xefd\xe1ri","Komotin\xed","Syki\xe9s","Dr\xe1ma","V\xe9roia","\xc1limos","Pol\xedchni","Koz\xe1ni","\xc1gioi An\xe1rgyroi","Argyro\xfapoli","\xc1no Li\xf3sia","Kard\xedtsa","N\xe9a Ion\xeda","Rethymno","Cholarg\xf3s","Vrilissia","Aspr\xf3pyrgos","K\xf3rinthos","Ptolema\u1e2fda","G\xe9rakas","Metam\xf3rfosi","Vo\xfala","Kamater\xf3n","Mytilene","Giannits\xe1","Neapoli","Corfu","Tr\xedpoli","Ag\xeda Varv\xe1ra","Kaisarian\xed","N\xe9a Filad\xe9lfeia","Moskh\xe1ton","P\xe9rama","Salam\xedna","Elefs\xedna","Chios","Pyla\xeda","M\xe9gara","Kilk\xeds","Dhafn\xed","Mel\xedssia","P\xfdrgos","\xc1rgos","Th\xedvai","\xc1rta","Livadei\xe1","Art\xe9mida","P\xe9fki","A\xedgio"],"GL":[],"GD":[],"GP":["Les Abymes","Baie-Mahault","Le Gosier","Petit-Bourg","Sainte-Anne","Le Moule","Sainte-Rose"],"GU":["Dededo Village","Yigo Village"],"GT":["Guatemala City","Mixco","Villa Nueva","Petapa","San Juan Sacatep\xe9quez","Quetzaltenango","Villa Canales","Escuintla","Chinautla","Chimaltenango","Chichicastenango","Huehuetenango","Amatitl\xe1n","Totonicap\xe1n","Santa Catarina Pinula","Santa Luc\xeda Cotzumalguapa","Puerto Barrios","San Francisco El Alto","Cob\xe1n","San Jos\xe9 Pinula","San Pedro Ayampuc","Jalapa","Coatepeque","Solol\xe1","Mazatenango","Chiquimula","San Pedro Sacatep\xe9quez","Salam\xe1","Antigua Guatemala","Retalhuleu","Zacapa","Jutiapa","Jacaltenango","Santiago Atitl\xe1n","Momostenango","Pal\xedn","San Benito","Barberena","Ciudad Vieja","Ostuncalco","Fraijanes","Nahual\xe1","Cantel","Panzos","San Marcos","Santiago Sacatep\xe9quez","La Gomera","Santa Cruz del Quich\xe9","Nebaj","Tecp\xe1n Guatemala","Sumpango","Comalapa","Esquipulas","Flores","Chicacao","San Pablo Jocopilas"],"GG":[],"GN":["Camayenne","Conakry","Nz\xe9r\xe9kor\xe9","Kindia","Kankan","Gueckedou","Coyah","Lab\xe9","Kissidougou","Fria","Siguiri","Macenta","Mamou","T\xe9lim\xe9l\xe9","Tougu\xe9","Pita"],"GW":["Bissau","Bafat\xe1"],"GY":["Georgetown","Linden","New Amsterdam"],"HT":["Port-au-Prince","Carrefour","Delmas 73","P\xe9tionville","Port-de-Paix","Croix-des-Bouquets","Jacmel","Okap","L\xe9og\xe2ne","Les Cayes","Tigwav","J\xe9r\xe9mie","Mirago\xe2ne","Gona\xefves","Saint-Marc","Thomazeau","Grangwav","Verrettes","Kenscoff","Saint-Rapha\xebl","Ti Port-de-Paix","Lenbe","Gressier"],"HM":[],"VA":[],"HN":["Tegucigalpa","San Pedro Sula","Choloma","La Ceiba","El Progreso","Ciudad Choluteca","Comayagua","Puerto Cortez","La Lima","Danl\xed","Siguatepeque","Juticalpa","Villanueva","Tocoa","Tela","Santa Rosa de Cop\xe1n","Olanchito","San Lorenzo","Cofrad\xeda"],"HK":["Hong Kong","Kowloon","Tsuen Wan","Yuen Long Kau Hui","Tung Chung","Sha Tin"],"HU":["Budapest","Debrecen","Miskolc","Szeged","P\xe9cs","Budapest XI. ker\xfclet","Zugl\xf3","Gy\u0151r","Budapest III. ker\xfclet","Ny\xedregyh\xe1za","Budapest XIII. ker\xfclet","Kecskem\xe9t","Sz\xe9kesfeh\xe9rv\xe1r","Budapest IV. ker\xfclet","Budapest XVIII. ker\xfclet","Budapest II. ker\xfclet","Budapest VIII. ker\xfclet","Budapest XV. ker\xfclet","Szombathely","K\u0151b\xe1nya","Budapest XVII. ker\xfclet","J\xf3zsefv\xe1ros","Budapest XXI. ker\xfclet","Par\xe1dsasv\xe1r","Szolnok","Tatab\xe1nya","Budapest XVI. ker\xfclet","Kaposv\xe1r","B\xe9k\xe9scsaba","Budapest XX. ker\xfclet","\xc9rd","Veszpr\xe9m","Erzs\xe9betv\xe1ros","Zalaegerszeg","Budapest XIX. ker\xfclet","Kispest","Sopron","Eger","Budapest XII. ker\xfclet","Nagykanizsa","Budapest XXII. ker\xfclet","Duna\xfajv\xe1ros","H\xf3dmez\u0151v\xe1s\xe1rhely","Budapest VI. ker\xfclet","Salg\xf3tarj\xe1n","Cegl\xe9d","\xd3zd","Baja","V\xe1c","Szeksz\xe1rd","P\xe1pa","Gy\xf6ngy\xf6s","Kazincbarcika","G\xf6d\xf6ll\u0151","Gyula","Hajd\xfab\xf6sz\xf6rm\xe9ny","Kiskunf\xe9legyh\xe1za","Ajka","Orosh\xe1za","Mosonmagyar\xf3v\xe1r","Dunakeszi","Kiskunhalas","Esztergom","J\xe1szber\xe9ny","Koml\xf3","Nagyk\u0151r\xf6s","Mak\xf3","Buda\xf6rs","Szigetszentmikl\xf3s","Budapest I. ker\xfclet","Tata","Szentendre","Hajd\xfaszoboszl\xf3","Si\xf3fok","T\xf6r\xf6kszentmikl\xf3s","Hatvan","Karcag","Gy\xe1l","Monor","Keszthely","V\xe1rpalota","B\xe9k\xe9s","Domb\xf3v\xe1r","Paks","Budapest XXIII. ker\xfclet","Oroszl\xe1ny"],"IS":["Reykjav\xedk","K\xf3pavogur","Hafnarfj\xf6r\xf0ur"],"IN":["Mumbai","Delhi","Bengaluru","Kolk\u0101ta","Chennai","Ahmedabad","Hyderabad","Pune","Surat","Kanpur","Jaipur","Navi Mumbai","Lucknow","Nagpur","Indore","Patna","Bhop\u0101l","Ludhi\u0101na","Tirunelveli","Agra","Vadodara","Najafgarh","Gorakhpur","Nashik","Pimpri","Kaly\u0101n","Th\u0101ne","Meerut","Nowrangapur","Faridabad","Gh\u0101zi\u0101b\u0101d","Dombivli","R\u0101jkot","Varanasi","Amritsar","Allah\u0101b\u0101d","Visakhapatnam","Teni","Jabalpur","H\u0101ora","Aurangabad","Shivaji Nagar","Sol\u0101pur","Srinagar","Chand\u012bgarh","Coimbatore","Jodhpur","Madurai","Guwahati","Gwalior","Vijayawada","Mysore","Rohini","Ranchi","Hubli","Narela","Jalandhar","Thiruvananthapuram","Salem","Tiruchirappalli","Kota","Bhubaneshwar","Al\u012bgarh","Bareilly","Mor\u0101d\u0101b\u0101d","Bhiwandi","Raipur","Gorakhpur","Bhilai","Jamshedpur","Borivli","Cochin","Amr\u0101vati","S\u0101ngli","Cuttack","B\u012bkaner","Warangal","Bhavnagar","Nanded","Raurkela","Guntur","Dehra D\u016bn","Bhayandar","Durgapur","Ajmer","Ulhasnagar","Kolh\u0101pur","Siliguri","Bilimora","Karol B\u0101gh","\u0100sansol","Jamnagar","Sah\u0101ranpur","Gulbarga","Bh\u0101tp\u0101ra","Jammu","Kurnool","Ujjain","R\u0101mgundam","Shyamnagar","Nangi","Kozhikode","M\u0101legaon","Davangere","Jalgaon","Akola","Belgaum","Gaya","Udaipur","Korba","Bok\u0101ro","Mangalore","Jh\u0101nsi","Thoothukudi","Nellore","Tiruppur","Kollam","P\u0101nih\u0101ti","Ahmadnagar","Dh\u016blia","Bh\u0101galpur","Pun\u0101sa","Muzaffarnagar","Latur","K\u016bkatpalli","Ambatt\u016br","Bellary","Muzaffarpur","K\u0101m\u0101rh\u0101ti","Mathura","Pati\u0101la","Ch\u0101nda","Bh\u012blw\u0101ra","Thrissur","Brahmapur","Sh\u0101hj\u0101npur","Shimoga","New Delhi","Rohtak","Tumk\u016br","F\u012broz\u0101b\u0101d","Niz\u0101m\u0101b\u0101d","Kulti","R\u0101jahmundry","Barddham\u0101n","B\u0101r\u0101sat","B\u0101li","Hisar","R\u0101mpur","Greater Noida","Noida","K\u0101kin\u0101da","P\u0101n\u012bpat","Parbhani","Darbhanga","Alwar","Bil\u0101spur","Ichalkaranji","Bijapur","Aizawl","J\u0101lna","Lal Bahadur Nagar","Dewas","Baranagar","Gajuwaka","Satna","Et\u0101wah","Durg","Naih\u0101ti","Tirupati","Son\u012bpat","\u0100vadi","Tiruvottiy\u016br","Saugor","Mau","Bih\u0101r Shar\u012bf","H\u0101pur","Bathinda","Farrukh\u0101b\u0101d","Anantapur","B\u0101r\u0101sat","Ratl\u0101m","Ramagundam","Gang\u0101nagar","Bharatpur","Kar\u012bmnagar","Puducherry","Shr\u012br\u0101mpur","R\u0101ich\u016br","Quthbullapur","Karn\u0101l","Arrah","Imph\u0101l","Gos\u0101ba","Mirz\u0101pur","Kharagpur","Dhanbad","Tanjore","Amarn\u0101th","N\u0101gercoil","P\u0101li","Yamun\u0101nagar","Rewa","Secunderabad","B\u012bdar","Agartala","Monghyr","Burh\u0101npur","Nadi\u0101d","Ch\u0101pra","Dindigul","Panchkula","S\u012bkar","Bulandshahr","Purnia","Hospet","Gurgaon","Sambhal","Gandhinagar","Murw\u0101ra","N\u0101ngloi J\u0101t","Machil\u012bpatnam","Katihar","Bhiw\u0101ni","Kultali","Raebareli","Haridwar","Singrauli","J\u016bn\u0101gadh","S\u016bj\u0101ngarh","Ellore","Bhus\u0101val","Khandwa","Bahraigh","Sirsa","Chandannagar","Baharampur","Surendranagar","Vizianagaram","Proddat\u016br","Vellore","Hugli","Alappuzha","Amroha","Tambaram","Path\u0101nkot","Bhind","Shimla","Ongole","Gadag-Betageri","Navsari","Puri","Haldia","Khammam","R\u0101iganj","Ingr\u0101j B\u0101z\u0101r","Jaunpur","Fatehpur","G\u0101ndh\u012bdh\u0101m","Nandy\u0101l","Udupi","Loni","S\u012bt\u0101pur","Shivpuri","Bhadr\u0101vati","\u0100doni","Ver\u0101val","Sambalpur","Gadag","Unn\u0101o","Budaun","J\u012bnd","Madhyamgram","J\u0101muria","Jaigaon","Cuddalore","Orai","Hoshi\u0101rpur","Pall\u0101varam","Hanum\u0101ngarh","Kanchipuram","Alandur","Guna","Bah\u0101durgarh","Bhar\u016bch","Medin\u012bpur","Fyz\u0101b\u0101d","Dinapore","Silchar","B\u0101nda","Morena","Tonk","R\u0101j-N\u0101ndgaon","Serilingampalle","Vir\u0101r","Malkajgiri","Sh\u0101ntipur","B\u0101r\u0101kpur","Erode","Amb\u0101la","Krishnanagar","Saharsa","Bat\u0101la","Bh\u012bmavaram","B\u0101lurgh\u0101t","Kaithal","Lakh\u012bmpur","Haz\u0101rib\u0101gh","Vidisha","Haldwani","H\u0101bra","Kumbakonam","Porbandar","Chitradurga","Th\u0101nesar","Tiruvann\u0101malai","Anand","K\u0101nchr\u0101p\u0101ra","Mahb\u016bbnagar","Dim\u0101pur","Robertsonpet","Chhindw\u0101ra","Mandya","B\u0101nkura","H\u0101j\u012bpur","Gond\u0101 City","Bhuj","Hindupur","Shillong","P\u0101lgh\u0101t","Godhra","Kishangarh","R\u0101n\u012bganj","P\u012blibh\u012bt","Be\u0101war","Abohar","Moga","Dehri","Deoria","Hassan","Khardah","Yavatm\u0101l","H\u0101l\u012bsahar","Panvel","Tit\u0101garh","Cuddapah","Bettiah","H\u0101thras","Lalitpur","Kol\u0101r","Mandsaur","Gondi\u0101","Rajapalaiyam","D\u0101rjiling","Mohali","P\u0101lanpur","Dam Dam","Hardo\u012b","Puruliya","Dibrugarh","Palwal","Nalgonda","Bhadreswar","Vejalpur","Chikmagal\u016br","Raigarh","Guntakal Junction","Gang\u0101pur","Deoli","Siw\u0101n","Damoh","\u0100dil\u0101b\u0101d","Srikakulam","Uppal Kalan","Jetpur","Morbi","P\u0101tan","Khanna","Bot\u0101d","Rishra","Azamgarh","Yelahanka","Gudiv\u0101da","Baidyab\u0101ti","Bast\u012b","Balasore","Dharmavaram","M\u0101ler Kotla","Wardha","Jhunjhun\u016bn","Satara","Chanduasi","Moth\u012bh\u0101ri","Ch\u0101s","Pudukkottai","Rew\u0101ri","Port Blair","Suri\u0101pet","Bangaon","Chhatarpur","Ashoknagar Kalyangarh","Achalpur","Navadw\u012bp","B\u0101rsi","Sult\u0101npur","Ambur","Hoshang\u0101b\u0101d","Saw\u0101i M\u0101dhopur","Madanapalle","B\u0101nsb\u0101ria","T\u0101depalleg\u016bdem","Jalp\u0101iguri","Chittaurgarh","Gang\u0101wati","Khurja","Ponn\u0101ni","Barn\u0101la","Badlapur","Soy\u012bbug","Roorkee","Bagaha","Hos\u016br","Ch\u016bru","Nagda","Kashipur","Ghaz\u012bpur","Begusarai","Dhaulpur","Mormugao","Ferozepore","Gondal","Seoni","Jag\u0101dhri","Miri\u0101lg\u016bda","Udg\u012br","Jam\u0101lpur","Nandurbar","It\u0101rsi","Vasco da Gama","Phagw\u0101ra","Airoli","Amreli","Shikoh\u0101b\u0101d","K\u0101sganj","Sehore","R\u0101n\u012bbennur","Jagti\u0101l","Bhadrakh","B\u016bndi","Ooty","Mughal Sar\u0101i","Sh\u0101mli","Hingangh\u0101t","Villupuram","Amalner","Bagalkot","Tellicherry","Narasaraopet","N\u0101gaur","Naw\u0101da","Jah\u0101n\u0101b\u0101d","Ch\u0101lisgaon","Buxar","Aurang\u0101b\u0101d","S\u0101hibganj","Pandharpur","Hindaun","Khargone","Parli Vaijn\u0101th","Kishanganj","Mainpuri","Kh\u0101mgaon","Negapatam","Chilakal\u016brupet","Gudiyatham","Makr\u0101na","B\u0101nsw\u0101ra","Baraut","Closepet","Kalyani","T\u0101dpatri","Kap\u016brthala","D\u012bsa","Ball\u0101lpur","Koh\u012bma","Bet\u016bl","K\u0101raikkudi","Bagaha","Bal\u0101ng\u012br","Datia","Valparai","Kovilpatti","Vaniyambadi","Bhand\u0101ra","Roha","Muktsar","Luckeesarai","B\u0101rmer","Mur\u0101dnagar","Tinsukia","Shahdol","Manjeri","Mahob\u0101","Contai","Sangr\u016br","Pollachi","Deoband","Neyy\u0101ttinkara","T\u0101nd\u0101","B\u0101r\u0101n","Dhamtari","Tiruchengode","Ch\u012br\u0101la","Jharia","Akot","R\u0101jpura","Madgaon","Sard\u0101rshahr","Mayiladuthurai","K\u0101mthi","Par\u0101d\u012bp Garh","Paramagudi","Osmanabad","Aruppukkottai","B\u0101runi","Bijnor","Anak\u0101palle","Naj\u012bb\u0101b\u0101d","Dohad","R\u0101mgarh","K\u0101vali","Fatehpur","Jangipur","Dh\u0101r","H\u0101nsi","Kadiri","Dhor\u0101ji","R\u0101yachoti","Khambh\u0101t","Nirmal","Emmigan\u016br","Jeypore","Kotkapura","Udhampur","Kair\u0101na","B\u0101l\u0101gh\u0101t","M\u0101nsa","Anantnag","K\u0101raik\u0101l","Jharsuguda","Br\u0101jar\u0101jnagar","Kottag\u016bdem","Naw\u0101bganj","Arakkonam","Koch Bih\u0101r","Dod Ball\u0101pur","Bhadohi","K\u0101toya","Jam\u016b\u012b","Harihar","Mancher\u0101l","Kadayanallur","Daltonganj","Far\u012bdkot","Balr\u0101mpur","B\u0101ram\u016bla","Dhuli\u0101n","Maw\u0101na","Karur","Kundla","Manm\u0101d","Kannauj","Malaut","Nag\u012bna","Badagara","Jagdalpur","Jumri Tilaiy\u0101","Baj Baj","Konnagar","Ratnagiri","Hingoli","Bodin\u0101yakkan\u016br","Khadki","Dhr\u0101ngadhra","P\u0101loncha","G\u016bd\u016br","Ankleshwar","T\u012bkamgarh","Srivilliputhur","Sivakasi","Pilkhua","Amb\u0101jog\u0101i","Bela","Bodhan","Rabkavi","Karauli","Savarkundla","Sh\u0101h\u0101b\u0101d","Ch\u0101ndpur","Gokak","Sikandar\u0101b\u0101d","Virudunagar","Dausa","Vals\u0101d","Ambik\u0101pur","P\u0101lghar","Dharapuram","Chint\u0101mani","Far\u012bdpur","Pusad","Madhubani","Sirsilla","Vapi","K\u0101m\u0101reddi","Bolpur","R\u0101n\u0101gh\u0101t","F\u0101zilka","Beypore","D\u0101dri","Auraiya","B\u0101patla","Payyann\u016br","Talipparamba","Tindivanam","Shirpur","B\u0101soda","Jorh\u0101t","Sindhn\u016br","Bargarh","W\u0101sh\u012bm","Visnagar","Palwancha","Keshod","K\u0101nnang\u0101d","B\u012bsalpur","Tanuku","Attili","B\u0101lotra","Pithampur","Munnar","Chamrajnagar","Pattukkottai","Jaisalmer","Ar\u0101ria","Harda Kh\u0101s","Sangamner","Jaor\u0101","Buld\u0101na","Mettupalayam","Anj\u0101r","Bellampalli","Channapatna","Ratangarh","Krishnagiri","Rish\u012bkesh","Goyerk\u0101ta","Ch\u0101\u012bb\u0101sa","Mandamarri","Palani","N\u0101rnaul","Dharmapuri","Fateh\u0101b\u0101d","Pal\u0101sa","Basavakaly\u0101n","Chingleput","Chopda","Panaji","Thenkasi","Y\u0101dg\u012br","Gang\u0101r\u0101mpur","Ramanathapuram","Jagraon","Al\u012bpur Du\u0101r","Kopargaon","Bongaigaon","Malk\u0101pur","K\u0101ranja","Khatauli","Ashoknagar","Siuri","N\u0101bha","Siddipet","Bhaw\u0101nipatna","Khopoli","Karwar","K\u0101yankulam","Chinnachowk","Bishnupur","M\u0101rk\u0101pur","Basmat","Baheri","Kunnamkulam","R\u0101ghogarh","Gop\u0101lganj","Tura","R\u0101jsamand","T\u0101nd\u016br","Kalamassery","S\u016bratgarh","Mannargudi","Sopur","Arni","Kannur","Dhuburi","Puliyangudi","Sheopur","Renuk\u016bt","Dhenk\u0101n\u0101l","Dabw\u0101li","Sibs\u0101gar","Malappuram","R\u0101th","Jamkhandi","Sirsi","Vriddh\u0101chalam","Vinukonda","Tipt\u016br","Sahasw\u0101n","Koppal","Sirhind","Dabra","Cumbum","Ar\u0101mb\u0101gh","Himatnagar","L\u0101dn\u016bn","Nip\u0101ni","Borsad","Koratla","K\u012bratpur","Vrind\u0101van","H\u0101veri","Supaul","G\u012br\u012bd\u012bh","Bangaon","R\u0101yadrug","North Lakhimpur","Toh\u0101na","Gangoh","Kottayam","Mangalagiri","Narasapur","Sang\u0101reddi","Kod\u0101r","Ullal","M\u0101ngrol","Gola Gokarann\u0101th","Mod\u0101sa","Tezpur","Thiruvarur","Attur","Chidambaram","Tarn T\u0101ran","Udumalaippettai","Lonavla","Sh\u0101h\u0101da","Nawalgarh","Nedumang\u0101d","N\u012bmb\u0101hera","Kadi","S\u012bra","Chik Ball\u0101pur","B\u0101rdoli","Jh\u0101rgr\u0101m","Sam\u0101stipur","Gobichettipalayam","Hasanpur","Jah\u0101ng\u012br\u0101b\u0101d","Sherkot","K\u0101tr\u0101s","P\u0101lakollu","Wani","Naksalb\u0101ri","Tiruvalla","Ponn\u016bru","Diphu","S\u012bt\u0101marhi","Chhibr\u0101mau","Tilhar","Ilkal","Bada Barab\u012bl","Mettur","Kuch\u0101man","Panruti","Una","Ponnur","Kolleg\u0101l","Shegaon","Upleta","Ujh\u0101ni","Bankra","Dabhoi","B\u0101ri","Obra","Goh\u0101na","Jatani","N\u0101makkal","Gadw\u0101l","P\u0101lit\u0101na","Nokha","L\u0101harpur","Narw\u0101na","Isl\u0101mpur","Kar\u0101d","J\u0101laun","Kar\u012bmganj","Mokameh","Et\u0101wa","Wanparti","S\u0101malkot","Anjangaon","Dholka","Tirur","K\u0101ndi","Gh\u0101t\u0101l","Unjha","Sendhwa","Tiruttangal","Siddhapur","Dh\u016bri","Sidhi","Wokha","K\u0101lna","B\u0101r\u0101mati","Kanduk\u016br","Sun\u0101m","Gaddi Annaram","Sattenapalle","Hiriy\u016br","Challakere","Rampur Hat","Masaurhi Buzurg","N\u016bzv\u012bd","Sh\u0101j\u0101pur","Putt\u016br","K\u0101saragod","Ajodhya","Mub\u0101rakpur","Phaltan","Sand\u012bla","S\u0101gar","Loh\u0101rdag\u0101","Deol\u0101li","Sh\u0101h\u0101b\u0101d","Bobbili","Chikhli","Konch","Lunglei","Pith\u0101puram","Amal\u0101puram","Tuni","Sihor","D\u012bgl\u016br","Barbil","Bisw\u0101n","Kosi","Ropar","Dandeli","P\u0101rvatipuram","Arcot","Jh\u0101l\u0101w\u0101r","Petl\u0101d","Umred","Bh\u0101t\u0101p\u0101ra","K\u0101liy\u0101ganj","Nas\u012br\u0101b\u0101d","Idappadi","Gohadi","Khagaul","Chipl\u016bn","Changan\u0101cheri","R\u0101mnagar","Sillod","M\u0101cherla","T\u016bndla","Mann\u0101rakk\u0101t","Ottapp\u0101lam","Go\u0101lp\u0101ra","K\u0101nk\u0101nhalli","Madhupur","Madhipura","Charkhi D\u0101dri","Dumraon","Mah\u0101samund","Gajraula","\u0100bu Road","Nanjang\u016bd","S\u0101l\u016br","Bhong\u012br","Aonla","Khagaria","Dh\u0101mpur","Sardhana","D\u012bdw\u0101na","Jalor","R\u0101jgarh","B\u0101rh","Bad\u016bria","Shor\u0101pur","Jugs\u0101lai","Kizhake Ch\u0101lakudi","Sidlaghatta","D\u0101h\u0101nu","Rasipuram","Pungan\u016bru","Mandapeta","Poonamalle","Barpeta","Taml\u016bk","Bhabhua","Kathua","Nangal","Nihtaur","Lachhmangarh S\u012bkar","Tiruvallur","Sri D\u016bngargarh","Raxaul","Siruguppa","B\u0101ruipur","M\u0101ndvi","M\u0101jalgaon","Warud","W\u0101nk\u0101ner","Chur\u0101ch\u0101ndpur","Dumka","Talegaon D\u0101bh\u0101de","Huns\u016br","Pithor\u0101garh","Jangaon","Atraul\u012b","Narsimhapur","Mulb\u0101gal","Mudhol","Gudalur","Barw\u0101ni","Jodhpur","Punal\u016br","Padrauna","Gumia","Bail-Hongal","Shuj\u0101lpur","Jaisingpur","Chatr\u0101","P\u0101chora","Patancheru","Panna","Phalodi","Yeola","Sheikhpura","Gul\u0101othi","Seoh\u0101ra","Zahir\u0101b\u0101d","K\u0101rsiy\u0101ng","Manglaur","Gang\u0101kher","Nohar","Ganj Dundw\u0101ra","N\u0101np\u0101ra","Atarra","Teghra","Bhaisa","Dondaicha","Vite","Pedd\u0101puram","Mahmud\u0101b\u0101d","Pakur","Cherthala","N\u0101yudupet","H\u0101lol","Kharar","Bhadr\u0101chalam","R\u0101mpura","Mattanur","Shertallai","Sironj","Daund","Parl\u0101kimidi","Pujali","Ashta","Nandikotk\u016br","Khal\u012bl\u0101b\u0101d","Chittaranjan","P\u0101thardih","D\u016bngarpur","Mandl\u0101","Forbesganj","Harpanahalli","It\u0101nagar","Guml\u0101","Ozar","Bh\u012bmunipatnam","T\u0101nda","Kapadvanj","Thoub\u0101l","Mor\u0101r","Mem\u0101ri","Nellikkuppam","Angul","Medak","K\u0101lpi","Hodal","R\u0101mnagar","Arsikere","Nidadavole","Jhajjar","Varangaon","Jammalamadugu","Jasdan","Kendr\u0101parha","Gob\u0101rd\u0101nga","Yellandu","Merta","Polavaram","Kanuru","Godda","Kotputli","P\u0101ndhurn\u0101","R\u0101mnagar","D\u012bg","K\u0101ndhla","Vik\u0101r\u0101b\u0101d","Varkala","Saint Thomas Mount","Sainthia","Tumsar","Peran\u0101mpattu","Barhiya","K\u0101limpong","R\u0101machandrapuram","Repalle","Selu","Bh\u012bnm\u0101l","Bangarapet","Sivaganga","Tirupparangunram","Sh\u014dran\u016br","Bikramganj","Sojat","Khurda","Jaspur","Th\u0101n","Jint\u016br","Khekra","B\u0101l\u0101pur","D\u012bnh\u0101ta","Naini T\u0101l","Kyathampalle","Sikandra Rao","Palmaner","J\u0101jpur","Canning","Khair\u0101b\u0101d","Kannad","Athni","Biaora","K\u0101tol","\u0100rvi","B\u0101ghpat","Bar Bigha","Limbdi","Bil\u0101ra","Sundargarh","M\u0101nvi","Fatwa","Jambusar","Devakottai","Digras","Warora","Homn\u0101b\u0101d","G\u0101darw\u0101ra","Chidawa","Ch\u0101mpa","Naugachhia","Hoskote","Daudnagar","Sihor\u0101","Jaggayyapeta","Kor\u0101put","Dhupg\u0101ri","Mehekar","Hilsa","Bharthana","Raisen","Jal\u0101rpet","Burla","Daheg\u0101m","Garhwa","Chakradharpur","Amb\u0101h","Kallakkurichchi","Gh\u0101tampur","Akiv\u012bdu","Kovv\u016br","Solan","Murtaj\u0101pur","Ahmadpur","Gursah\u0101iganj","Periyakulam","M\u0101puca","T\u0101ki","Diamond Harbour","Saundatti","Vaij\u0101pur","Gh\u0101ts\u012bla","H\u0101sim\u0101ra","Sathupalli","P\u016branpur","H\u0101flong","Rameswaram","B\u0101nsi","Thiruthani","Mandideep","B\u012bl\u0101spur","Thakurdwara","Farrukhnagar","Bhav\u0101ni","Daman","Dhone","N\u0101nd\u016bra Buzurg","Murshid\u0101b\u0101d","N\u0101d\u0101puram","Par\u0101sia","N\u0101thdw\u0101ra","Sh\u0101h\u0101b\u0101d","Giddarb\u0101ha","Akalkot","Aroor","Chinnaman\u016br","Ghos\u012b","Amud\u0101lavalasa","Pehowa","N\u016brpur","Aland","N\u0101r\u0101yanpet","Parav\u016br Tekkumbh\u0101gam","B\u0101nka","Simdega","Kondapalle","Sangari\u0101","Jh\u0101-Jh\u0101","Jalesar","Sirohi","Bh\u0101lki","Pali\u0101 Kal\u0101n","T\u0101lcher","Chakl\u0101si","Kunnamangalam","R\u0101jg\u012br","Kumh\u0101ri","Pathan\u0101mthitta","Nandig\u0101ma","Mah\u0113","Vy\u0101ra","Malavalli","Khambh\u0101liya","S\u016bl\u016bru","Bhaw\u0101niganj","Chetwayi","Vetap\u0101lem","Shahbazpur","Mahb\u016bb\u0101b\u0101d","Maihar","Dibai","Robertsganj","Kekri","Tarikere","Maudaha","Porsa","Savan\u016br","Prat\u0101pgarh","Bil\u0101sip\u0101ra","Channar\u0101yapatna","Ellenabad","P\u0101thri","Bh\u0101dra","Bantv\u0101l","Kotamangalam","Leh","Bair\u0101gnia","B\u0101ngarmau","Paithan","Barauli","Sad\u0101seopet","Vett\u016br","Patti","Garhmuktesar","Revelganj","Parola","Manapparai","Yanam","R\u0101huri","R\u0101watbh\u0101ta","Hoj\u0101i","Akbarpur","Vuyy\u016bru","Pilibangan","Barw\u0101la","Anekal","Kampli","Phulb\u0101ni","Attingal","Cheyyar","Padra","Chun\u0101r","San\u0101wad","Bay\u0101na","Kayalpattinam","Dh\u0101ka","Sad\u0101b\u0101d","Bindki","Dw\u0101rka","S\u0101rangpur","Dary\u0101pur","R\u0101mganj Mandi","Gariadhar","Kakr\u0101la","Arant\u0101ngi","Sam\u0101lkha","Kov\u016br","Tulj\u0101pur","Morsi","Bab\u012bna","Dongargarh","Ashta","Igatpuri","R\u0101dhanpur","Budh\u0101na","L\u016bn\u0101v\u0101da","Betamcherla","R\u0101jp\u012bpla","Barpeta Road","Shergh\u0101ti","Umarkhed","W\u0101ris Al\u012bganj","Pulgaon","Kawardha","Buddh Gaya","Lakshmeshwar","Atmak\u016br","Seram","Niwai","Dubr\u0101jpur","Jal\u0101l\u0101b\u0101d","S\u0101nand","Kodaik\u0101n\u0101l","Chikodi","Sh\u0101h\u0101b\u0101d","T\u0101sgaon","Kod\u012bnar","Kichha","P\u016brna","J\u0101madoba","Nabagr\u0101m","R\u0101jula","Shik\u0101rp\u016br","P\u012bp\u0101r","Sagauli","Kattiv\u0101kkam","Karjat","Sankeshwar","Bakhtiy\u0101rpur","Agar","Nilanga","Sat\u0101n\u0101","Pat\u0101mundai","Angam\u0101li","Gol\u0101gh\u0101t","Manipal","T\u0101depalle","Jaito","Gharaunda","Kodungall\u016br","Ausa","Ham\u012brpur","Jh\u0101bua","Naw\u0101bganj","Sinnar","Pen","Indi","P\u0101ppinissh\u0113ri","Mokokch\u016bng","Sathyamangalam","Fatehpur","Guledagudda","Melur","Bhiwadi","Guskhara","Sindgi","Nars\u012bpatnam","Ichch\u0101puram","Bahjoi","Tuensang","Dharangaon","Pulivendla","Peddapalli","Madikeri","Kop\u0101ganj","K\u0101man","Th\u0101na Bhawan","Uravakonda","Begamganj","Darsi","Er\u0101ttupetta","Nargund","Zaidpur","\u0100mli","Sohna","An\u016bpgarh","Jogbani","Shik\u0101rpur","Sh\u0101hpura","Kunigal","Kosamba","Muhammad\u0101b\u0101d","Lakhyabad","Jh\u0101lrap\u0101tan","S\u012brk\u0101zhi","Chaksu","Porur","Bh\u0101d\u0101sar","Wai","Jagatsinghapur","Bagasra","Kad\u016br","Dharmanagar","Lah\u0101r","Y\u0101val","Kaimganj","J\u0101njg\u012br","Egra","Bih\u0101r\u012bganj","Umreth","Venkatagiri","Mush\u0101bani","Mah\u0101lingpur","Neem ka Thana","Nep\u0101nagar","Nautanwa","Vallabh Vidyanagar","Chanderi","Manuguru","Mahemd\u0101v\u0101d","Goribidn\u016br","Almora","Nakodar","Karamsad","Manali","Dharm\u0101b\u0101d","Vedaraniyam","Jayamkondacholapuram","K\u0101lka","Umarga","Pinjaur","Bisauli","Turaiy\u016br","P\u0101vugada","Ambasamudram","Zam\u0101nia","Malkapur","Shirdi","Bandipura","Kokrajhar","Palladam","Muddebih\u0101l","L\u0101lganj","Rasr\u0101","Isl\u0101mpur","Ghugus","Sattur","B\u0101sudebpur","Kh\u0101chrod","Kotma","Bhatkal","Khurai","Chitt\u016br","Vadigenhalli","Sijua","Vandav\u0101si","L\u0101lsot","Sh\u0101hpur","Chemmumiahpet","Bah\u0101durganj","Gomoh","Jal\u0101lpur","Khunti","Kangayam","Zira","Jhanjh\u0101rpur","S\u0101ngola","Sing\u0101nall\u016br","K\u0101ramadai","R\u0101m\u0101puram","Nawanshahr","Mank\u0101char","R\u0101zampeta","Sabalgarh","Hail\u0101k\u0101ndi","Jagd\u012bspur","Jagd\u012bshpur","Sir\u016br","R\u0101wats\u0101r","Shams\u0101b\u0101d","Part\u016br","Putt\u016br","G\u016bduv\u0101ncheri","Erandol","Pas\u0101n","R\u016bdarpur","Safidon","Hatta","El\u016br","Basavana B\u0101gev\u0101di","Perambalur","Gangtok","M\u0101l\u016br","Usilampatti","Un","M\u016bdbidri","R\u0101j\u0101khera","M\u0101nwat","W\u0101di","Anta","Mah\u0101r\u0101ganj","Tarakeswar","Keelakarai","Kakching","Gevrai","Pih\u0101n\u012b","Perungudi","Sarkhej","Remuna","Sri M\u0101dhopur","Udaipur","Walajapet","Pedana","Ferokh","Sal\u0101ya","Musiri","Khair","Ch\u012bt\u0101pur","Risod","Dhandhuka","Fatehpur S\u012bkri","Birpara","Yanamalakuduru","Cherpulassery","Amla","Narsinghgarh","Tal\u0101ja","Dharmadam","Bhongaon","Tiruchchendur","S\u0101svad","Ambad","R\u0101mgarh","Jal\u0101l\u0101b\u0101d","Soro","Lingsug\u016br","Gajendragarh","Madur\u0101ntakam","Umaria","Devarkonda","Dh\u0101mnod","Bil\u0101ri","M\u016bvattupula","Ad\u016br","Saoner","R\u0101isinghnagar","M\u012br\u0101npur Katra","Kalpatta","\u0100rangaon","Kalavoor","M\u0101nsa","Zunheboto","Main\u0101guri","N\u0101gar Karn\u016bl","Khedbrahma","T\u0101r\u0101nagar","P\u0101lkonda","Dh\u0101ri","Jewar","Kalyandurg","Dighw\u0101ra","Sh\u0101hpura","Muvattupuzha","Bachhraon","Irinj\u0101lakuda","Mangr\u016bl P\u012br","Madukkarai","Isl\u0101mnagar","Ariyal\u016br","Ponmana","M\u0101n\u0101vadar","Sirs\u0101ganj","S\u0101nchor","Sand\u016br","Chodavaram","S\u016brandai","Banda","Piro","Su\u0101r","Manoharpur","R\u0101j\u016bra","Kotagiri","Rusera","Azhiy\u016br","Nelamangala","Soron","Mukher","Sholinghur","Gadhada","M\u0101lpura","\u0100langulam","Addanki","Milak","Coondapoor","L\u0101kheri","L\u0101lgola","Utraula","Titl\u0101garh","Tirukkoyilur","Son\u0101mukhi","Seoni M\u0101lwa","B\u0101d\u0101mi","Mavoor","M\u0101velikara","Maur","Hole Narsipur","Dhanaura","Piravam","Mandi","Shr\u012bgonda","Pandua","P\u016bnch","Pil\u0101ni","Giddal\u016br","Madd\u016br","Maddagiri","Garh\u0101kota","Koynanagar","Kumta","Losal","Hisu\u0101","D\u0101sna","Adirampattinam","T\u0101l\u012bkota","Maner","Birmitrapur","Erraguntla","B\u0101mor Kal\u0101n","Kalakk\u0101du","R\u0101z\u0101m","Kareli","Jalgaon Jamod","Rajaori","Jaswantnagar","Afzalgarh","By\u0101dgi","Rehli","R\u0101ipur","Mungeli","Man\u0101war","Kondagaon","Tehri","Umarkot","N\u0101han","S\u0101nkr\u0101il","Manamadurai","Kharagpur","Beld\u0101nga","R\u0101hatgarh","P\u0101rdi","M\u012br\u0101npur","Silvassa","K\u0101l\u0101nw\u0101li","Chakapara","Kalamb","H\u012br\u0101kud","M\u0101gadi","Kundarkhi","Gundlup\u0113t","Bilgr\u0101m","Bidh\u016bna","Perump\u0101v\u016br","Berasia","Gobindpur","Kotdw\u0101ra","Bhawanipur","R\u0101jgarh","Kasba","Naharlagun","S\u0101mba","Vepagunta","Kulittalai","Banmankhi","Sheoganj","Ind\u0101pur","Kemr\u012b","Sausar","Kart\u0101rpur","Karhal","Lar","De\u016blgaon R\u0101ja","Mah\u0101d","Al\u012bganj","R\u0101ver","Pan\u0101gar","H\u0101ngal","Perumbavoor","Ratia","Pauri","Sh\u0101hganj","Dhrol","Pallippatti","Gul\u0101bpura","Hadg\u0101on","Gadhinglaj","Rajpur","Terd\u0101l","Rangia","Jora","Kheri","Bilsi","Taloda","Pol\u016br","K\u0101l\u0101vad","R\u0101mpur","Rafiganj","Karera","Halvad","Husain\u0101b\u0101d","Sulur","Kukshi","Elamanchili","R\u0101jgarh","Marhaura","Shiggaon","R\u0101ikot","R\u0101n\u0101v\u0101v","Junnar","K\u0101nker","Kinwat","Nagari","K\u0101lol","Ch\u012bpurupalle","Renigunta","Nalh\u0101ti","Gokarna","Koregaon","K\u0101ndla","Behror","Avanigadda","Sr\u012bniv\u0101spur","Nongstoin","Mussoorie","Annigeri","Mahendragarh","Jais","Paw\u0101yan","Chhabra","Khajuraho Group of Monuments","S\u0101dri","Jandi\u0101la","Uran","P\u0101sigh\u0101t","Mauganj","Tekkalakote","Kallidaikurichi","Colonelganj","Mehnd\u0101wal","Koelw\u0101r","K\u0101gal","Bann\u016br","Kuttampuzha","Budhl\u0101da","N\u012bl\u0113shwar","K\u0101rkala","Kadakkavoor","Sundarnagar","Banganapalle","\u0100sandh","Hadagalli","An\u016bpshahr","Jal\u0101l\u0101bad","Lumding Railway Colony","Songadh","Shams\u0101b\u0101d","Kithor","Machhl\u012bshahr","Baloda B\u0101z\u0101r","Devanhalli","Gursar\u0101i","R\u012bngas","Arumuganeri","Vayal\u0101r","Ahraura","Rampachodavaram","Malakanagiri","Kanigiri","Chengann\u016br","Chandauli","D\u0101kor","S\u0101ndi","Padam","Marayur","Kolasib","Shiraguppi","\u0100bu","Sheohar","Kunda","Deori Kh\u0101s","Sakleshpur","Bemet\u0101ra","Baw\u0101na","Periyanayakkanpalaiyam","K\u0101nth","Charkh\u0101ri","Mangaldai","Vadnagar","Saf\u012bpur","Kabr\u0101i","Kheda","Ponneri","Talw\u0101ra","Vadakku Valliy\u016br","Thar\u0101d","Gauripur","Hosdurga","Tekkali","P\u0101k\u0101la","M\u012bnj\u016br","Naduvann\u016br","Andol","Bijbehara","Gorantla","D\u0101t\u0101ganj","Kail\u0101ras","Chharra","Faizpur","Chhota Udepur","Jaynagar-Majilpur","Sing\u0101pur","Sahaspur","\u0100ndippatti","K\u0101nt","Margherita","J\u0101mt\u0101ra","Avinashi","Iringal","Uttiramer\u016br","Vij\u0101pur","Chikn\u0101yakanhalli","Krishnar\u0101jpet","Anjad","\u0100ron","Narasannapeta","Sit\u0101rganj","N\u0101ndgaon","Kushtagi","Sikandarpur","Muhammad\u0101b\u0101d","Kumbalam","Sr\u012bsailain","Barki Saria","Ayakudi","Gang\u0101pur","Aluva","R\u0101jaldesar","Hastin\u0101pur","P\u0101thardi","Colgong","Chettip\u0101laiyam","Man\u0101sa","Bhach\u0101u","B\u0101gepalli","Kott\u016bru","M\u016bl","Shr\u012brangapattana","Chengam","B\u0101zpur","M\u0101ngrol","Soh\u0101gpur","Murl\u012bganj","Reoti","Fatehganj West","W\u0101r\u0101seon\u012b","T\u0101ramangalam","Diu","Manih\u0101ri","L\u0101lganj","Alwaye","Kharakvasla","Dhanera","Penugonda","Mari\u0101ni","L\u0101dwa","Nagar","Dor\u0101ha","Morinda","Duli\u0101gaon","P\u0101nchla","N\u0101dbai","Jh\u012bnjhak","Malpe","Bir\u016br","M\u0101ndal","Sh\u012bshgarh","Keshorai P\u0101tan","Pawni","Chh\u0101t\u0101pur","Basni","Kh\u0101tegaon","R\u0101mtek","S\u0101vantv\u0101di","Monoharpur","B\u0101gha Pur\u0101na","Injambakkam","D\u012bn\u0101nagar","Soygaon","Udaipur","N\u0101sriganj","Jaleshwar","Bewar","Koothanallur","Pindw\u0101ra","Navalgund","Khandela","Ch\u0101kan","Alot","Dh\u0101ruhera","Kurduv\u0101di","Ch\u0101ndur","Colachel","Nak\u016br","Sh\u0101mgarh","Kuchaiburi","D\u0101rwha","P\u012bpri","Muluppilagadu","Kurinjipp\u0101di","K\u016bdligi","Vemalw\u0101da","Saidpur","Phulpur","Kutiatodu","Balar\u0101mpur","S\u0101mbhar","Karm\u0101la","Vaikam","Raghunathpur","Amarpur","Hinjilikatu","Uttamap\u0101laiyam","Tar\u0101na","Pariy\u0101puram","Mukeri\u0101n","L\u0101thi","R\u0101nia","Kalamn\u016bri","Itim\u0101dpur","B\u0101nsw\u0101da","Saiha","Cumbum","M\u0101t\u0101bh\u0101nga","Vattalkundu","Mahwah","Biss\u0101u","Todaraisingh","Jashpurnagar","Ron","Baddi","Phillaur","J\u0101mai","Phulera","Pukhr\u0101y\u0101n","Sirsi","Todabhim","Tiruppuvanam","Baswa","Curchorem","Tuls\u012bpur","Bh\u0101nder","V\u0101dippatti","Naraura","Mah\u0101r\u0101jgani","Nainpur","Ramanayyapeta","Silapathar","Balod","Gunupur","Mari\u0101hu","Purw\u0101","Sah\u0101war","Sidhaul\u012b","May\u0101ng Imph\u0101l","Adra","Muhammad\u0101b\u0101d","Someshwar","Sadalgi","Tinnan\u016br","Kail\u0101shahar","Beoh\u0101ri","N\u0101magiripettai","Ghoti Budrukh","Siw\u0101na","Multai","Bhinga","Fateh\u0101b\u0101d","K\u016bmher","Nattam","Laungow\u0101l","Chandrakona","Farakka","Tij\u0101ra","Silao","Mundargi","Kuchera","P\u0101onta S\u0101hib","Lon\u0101r","Datt\u0101pur","Nap\u0101sar","P\u0101t\u016br","N\u0101god","Dum Duma","Nilakottai","Peravurani","Haliyal","Dalsingh Sarai","Karanpur","Samthar","Banat","M\u0101ndalgarh","Muttupet","Sakt\u012b","Bel\u016br","Gingee","R\u0101par","Chamba","Maheshwar","Kasr\u0101wad","B\u0101nsd\u012bh","Guruv\u0101y\u016br","Mh\u0101sv\u0101d","Jait\u0101ran","Ratanpur","Kurandv\u0101d","Alandi","Mand\u0101war","Pallikondai","Akaltara","Bedi","Seondha","Kharkhauda","Deoli","P\u0101li","Dhekiajuli","Chh\u0101ta","Asif\u0101b\u0101d","Dharampur","Telh\u0101ra","Deogarh","\u0100sika","Chatrapur","Basi","Dhulagari","Okha","Kiraoli","Kant\u0101b\u0101nji","Q\u0101di\u0101n","Pokaran","Mudgal","Abrama","Bagul\u0101","Gunnaur","Sarauli","Lalgudi","Nab\u012bnagar","Tharangambadi","Beg\u016bn","Dhing","Hukeri","Bh\u0101nvad","Morigaon","Clement Town","Gh\u0101tanji","Mudkhed","Sivagiri","L\u0101teh\u0101r","Kaikal\u016br","Kher\u0101lu","Al\u012bb\u0101g","Al\u012bpur","Das\u016bya","Digboi","K\u012bl Bhuvanagiri","Bhanjanagar","Kuzhithurai","Dh\u0101riw\u0101l","Polasara","Kishtw\u0101r","Kanniy\u0101kum\u0101ri","Achhnera","Chillup\u0101r","Jaynagar","Bhuban","Maniar","M\u0101chh\u012bw\u0101ra","Chincholi","Anthiyur","N\u012bm\u0101j","Tuf\u0101nganj","Har\u016br","Dugda","Tisaiyanvilai","Channagiri","Jh\u0101lu","Jah\u0101zpur","Akkarampalle","Byndoor","Pallappatti","Wellington","Serchh\u012bp","Penukonda","Sr\u012bnagar","Padman\u0101bhapuram","Barp\u0101li","F\u012brozpur Jhirka","Morwa","Mairwa","Jevargi","Kaimori","Mau Aimma","F\u0101l\u0101k\u0101ta","Katghora","Chinna Salem","Dhaurahra","Khair\u0101garh","Maksi","Afzalpur","Nar\u0101yangarh","Mungaoli","Pulwama","Sirumugai","Khowai","N\u0101wa","Govardhan","R\u0101ya"],"ID":["Jakarta","Surabaya","Medan","Bandung","Bekasi","Palembang","Tangerang","Makassar","South Tangerang","Semarang","Depok","Batam","Padang","Denpasar","Bandar Lampung","Bogor","Malang","Pekanbaru","City of Balikpapan","Yogyakarta","Situbondo","Banjarmasin","Surakarta","Cimahi","Pontianak","Manado","Balikpapan","Jambi City","Ambon","Samarinda","Mataram","Percut","Bengkulu","Jember","Palu","Kupang","Sukabumi","Tasikmalaya","Pekalongan","Cirebon","Banda Aceh","Tegal","Kediri","Binjai","Purwokerto","Purwakarta","Loa Janan","Pematangsiantar","Ciputat","Ciampea","Cileungsir","Rengasdengklok","Sumedang","Kendari","Parung","Tanjung Pinang","Curug","Labuan Bajo","Cibinong","Madiun","Pemalang","Lembang","Probolinggo","Pamulang","Cikupa","Salatiga","Plumbon","Banjaran","Serang","Lawang","Pasuruan","Sunggal","Perbaungan","Pasarkemis","Soreang","Purwodadi","Metro","Lubuklinggau","Palangkaraya","Astanajapura","Cikampek","Gorontalo","Dumai","Tanjungbalai","Parepare","Sidoarjo","Weru","Jayapura","Baturaja","Adiwerna","Singaraja","Blitar","Martapura","Kisaran","Palopo","Teluknaga","Ungaran","Rangkasbitung","Klaten","Jombang","Paseh","Pangkalpinang","Sorong","Padalarang","Ciamis","Lumajang","Indramayu","Pati","Payakumbuh","Bangil","Sepatan","Tebingtinggi","Kedungwuni","Batang","Pamanukan","Sawangan","Mojokerto","Cileunyi","Magelang","Kresek","Citeureup","Banyuwangi","Cikarang","Arjawinangun","Depok","Prabumulih","Rantauprapat","Belawan","Singkawang","Ternate","Bontang","Grogol","Padangsidempuan","Sumedang Utara","Bukittinggi","Dukuhturi","Tarakan","Sungai Penuh","Sumber","Wonosobo","Palimanan","Pamekasan","Pandeglang","Pariaman","Kudus","Caringin","Banjar","Lhokseumawe","Cicurug","Kartasura","Klangenan","Majalengka","Bojonegoro","Kasihan","Sumenep","Ambarawa","Margahayukencana","Galesong","Watampone","Kedungwaru","Serpong","Sibolga","Genteng","Gedangan","Ponorogo","Ciranjang-hilir","Ende","Tuban","Kebomas","Karangsembung","Tarub","Batu","Sungailiat","Gresik","Sewon","Jatibarang","Kuningan","Sragen","Pagar Alam","Mertoyudan","Bondowoso","Nganjuk","Melati","Bima","Sokaraja","Gamping Lor","Sampit","Lahat","Tulungagung","Muncar","Tulangan Utara","Godean","Tanjung Pandan","Abepura","Bangkalan","Slawi","Pecangaan","Kertosono","Barabai","Boyolali","Sengkang","Lamongan","Baki","Bantul","Weleri","Polewali","Jatiwangi","Baekrajan","Singosari","Kabanjahe","Purbalingga","Pare","Balaipungut","Mendaha","Sleman","Pandak","Amuntai","Besuki","Wedi","Cepu","Langsa","Sampang","Manokwari","Tanjungagung","Sumbawa Besar","Terbanggi Besar","Kepanjen","Blora","Comal","Karanganom","Kawalu","Jatiroto","Labuhan Deli","Gampengrejo","Dompu","Gatak","Singaparna","Waingapu","Banyumas","Solok","Pameungpeuk","Buduran","Luwuk","Sungai Raya","Amahai","Balung","Maumere","Poso","Singkil","Curup","Candi Prambanan","Muntilan","Berastagi","Bambanglipuro","Ketanggungan","Rembangan","Nabire","Gebog","Kencong","Pelabuhanratu","Panji","Katabu","Baturaden","Kotabumi","Diwek","Kijang","Sinjai","Rantepao","Reuleuet","Juwana","Pekan Bahapal","Rajapolah","Tual","Wiradesa","Majenang","Buaran","Krian","Wonopringgo","Pangkalanbuun","Majene","Jekulo","Banjar","Simpang","Srono","Sofifi","Atambua","Kualakapuas","Wangon","Sumberpucung","Praya","Meulaboh","Ruteng","Manggar","Pandaan","Pemangkat","Kuala Tungkal","Tabanan","Lebaksiu","Labuan","Mlonggo","Tondano","Negara","Tanggulangin","Jaten","Boyolangu","Gombong","Amlapura","Amlapura city","Bandar","Kutoarjo","Karangampel","Panarukan","Sidareja","Pakisaji","Selogiri","Kuta","Maros","Srandakan","Kefamenanu","Singojuruh","Wongsorejo","Trenggalek","Lasem","Ceper","Randudongkal","Balapulang","Ubud","Kraksaan","Jogonalan","Mranggen","Deli Tua","Klungkung","Margasari","Sijunjung","Soe","Tomohon","Bulakamba","Demak","Paciran","Babat","Stabat","Driyorejo","Muntok","Tayu","Ngunut","Colomadu","Wanaraja","Welahan","Bireun","Pangkalan Brandan","Soko","Teluk Nibung","Tanjungtiram","Seririt","Sabang","Delanggu","Prigen","Pundong","Kalianget","Ngemplak","Trucuk","Mojoagung","Kroya","Dampit","Ngoro","Gambiran Satu","Kamal","Gongdanglegi Kulon","Ngawi","Kebonarun"],"IR":["Tehran","Mashhad","Isfahan","Karaj","Tabriz","Shiraz","Qom","Ahvaz","Pasragad Branch","Kahr\u012bz","Kermanshah","Rasht","Kerman","Or\u016bm\u012byeh","Zahedan","Hamad\u0101n","\u0100z\u0101dshahr","Ar\u0101k","Yazd","Ardab\u012bl","Abadan","Zanj\u0101n","Bandar Abbas","Sanandaj","Qazvin","Khorramshahr","Khorramabad","Khomeyn\u012b Shahr","Sari","Bor\u016bjerd","Qarchak","Gorg\u0101n","Sabzevar","Najaf\u0101b\u0101d","Neysh\u0101b\u016br","Naz\u0327ar\u0101b\u0101d","B\u016bk\u0101n","Sirjan","B\u0101bol","\u0100mol","B\u012brjand","Bojn\u016brd","Var\u0101m\u012bn","Mal\u0101yer","S\u0101veh","Khowy","Bushehr","Mah\u0101b\u0101d","Saqqez","Marvdasht","Rafsanj\u0101n","\u012al\u0101m","M\u012b\u0101ndo\u0101b","Shahrud","Gonbad-e K\u0101v\u016bs","Iranshahr","Shahr-e Kord","Torbat-e \u1e28eydar\u012byeh","Semnan","Marand","Z\u0101bol","Q\u016bch\u0101n","Masjed Soleym\u0101n","Bandar-e Anzal\u012b","B\u0101neh","P\u0101rs\u0101b\u0101d","K\u016bhdasht","Bam","Akbar\u0101b\u0101d","Fas\u0101","Yasuj","K\u0101shmar","Dogonbadan","K\u0101zer\u016bn","Ahar","Behshahr","Mar\u012bv\u0101n","Al\u012bg\u016bdarz","Alvand","Qorveh","Bor\u0101zj\u0101n","Sh\u012brv\u0101n","Salm\u0101s","Bon\u0101b","Shahre Jadide Andisheh","Behbah\u0101n","Sh\u016bshtar","Khomeyn","Nah\u0101vand","Alvand","N\u016br\u0101b\u0101d","Naqadeh","T\u0101kest\u0101n","M\u012bn\u0101b","Abhar","Dehdasht","Ch\u0101l\u016bs","Kh\u0101sh","Langar\u016bd","D\u0101mgh\u0101n","F\u012br\u016bz\u0101b\u0101d","N\u016br\u0101b\u0101d","D\u0101r\u0101b","Rob\u0101\u0163 Kar\u012bm","Piranshahr","K\u0101my\u0101r\u0101n","Esfar\u0101yen","Asad\u0101b\u0101d","Zarand","Torbat-e J\u0101m","Shahr\u012b\u0101r","Ardak\u0101n","Hars\u012bn","\u0100b\u0101deh","Mal\u0101rd","\u0100byek","B\u012bj\u0101r","P\u012bshv\u0101","Kang\u0101var","Bandar-e Gen\u0101veh","Bor\u016bjen","Shahr-e B\u0101bak","Sh\u016bsh","Meybod","Sarpol-e Z\u0304ah\u0101b","Tak\u0101b","Khalkh\u0101l","Oshnav\u012byeh","Khorramdarreh","Tabas","Fal\u0101varj\u0101n","\u012astg\u0101h-e R\u0101h \u0100han-e Garms\u0101r","Rehn\u0101n","Nek\u0101","B\u0101bolsar","\u0100z\u0101dshahr","R\u016bdsar","Azn\u0101","Chabahar","Om\u012bd\u012byeh","Chen\u0101r\u0101n","Sarakhs","Dehlor\u0101n","Neyr\u012bz","Hashtpar","Golp\u0101yeg\u0101n","Gon\u0101b\u0101d","Sonqor","\u0100st\u0101neh-ye Ashraf\u012byeh","S\u016bsangerd","Sh\u0101h\u012bn Dezh","R\u0101var","Q\u0101\u2019en","Nowshahr","\u0100st\u0101r\u0101","R\u0101mhormoz","Jav\u0101nr\u016bd","Qa\u015fr-e Qand","T\u0101yb\u0101d","Tonek\u0101bon","Dorcheh P\u012b\u0101z","Sh\u0101deg\u0101n","Bards\u012br","Mahr\u012bz","Eqb\u0101l\u012byeh","Mohr","Fereyd\u016bn Ken\u0101r","Kal\u0101leh","Kel\u012bsh\u0101d va S\u016bdarj\u0101n","Dowlat\u0101b\u0101d","Del\u012bj\u0101n","Farrokh Shahr","Qarah \u1e94\u012b\u0101\u2019 od D\u012bn","B\u0101fq","P\u0101s\u0101rg\u0101d","\u2018Ajab Sh\u012br","Qahder\u012bj\u0101n","Dam\u0101vand","Bah\u0101r","J\u016byb\u0101r","Bardaskan","F\u016bman","Aleshtar","Sem\u012brom","Ger\u0101sh","F\u0101rs\u0101n","Qeshm","Darreh Shahr","Bandar-e Lengeh","Aghajari","Khv\u0101ns\u0101r","Mahdishahr","K\u012bsh"],"IQ":["Baghdad","Basrah","Al Maw\u015fil al Jad\u012bdah","Al Ba\u015frah al Qad\u012bmah","Mosul","Erbil","Ab\u016b Ghurayb","As Sulaym\u0101n\u012byah","Kirkuk","Najaf","Karbala","Nasiriyah","Al \u2018Am\u0101rah","Ad D\u012bw\u0101n\u012byah","Al K\u016bt","Al \u1e28illah","Dihok","Ramadi","Al Fall\u016bjah","S\u0101marr\u0101\u2019","As Samawah","Baqubah","S\u012bnah","Soran","Az Zubayr","Kufa","Umm Qa\u015fr","Al F\u0101w","Zaxo","Al H\u0101rithah","Ash Sha\u0163rah","Al \u1e28ayy","Jamjam\u0101l","Kh\u0101li\u015f","Tozkhurmato","Ash Sh\u0101m\u012byah","Al Hind\u012byah","\u1e28alabjah","Al Miqd\u0101d\u012byah","Al-Hamdaniya","Ar Rumaythah","Koysinceq","Al \u2018Az\u012bz\u012byah","Al Musayyib","Tikr\u012bt","A\u015f \u015euwayrah","Balad","Sinj\u0101r","Imam Qasim","Bayj\u012b","H\u012bt","\u1e28ad\u012bthah","Nahiyat Ghammas","N\u0101\u1e29\u012byat Saddat al Hind\u012byah","Kifr\u012b","Mandal\u012b","Baynjiwayn","\u2018Anah","Ad Dujayl","Batifa","Tallkayf","Al Mishkh\u0101b","\u2018Aqrah","\u1e5euwandiz","N\u0101\u1e29iyat ash Shin\u0101f\u012byah","Ar Ru\u0163bah","\u2018Afak","N\u0101\u1e29iyat al Fuh\u016bd"],"IE":["Dublin","Cork","Luimneach","Gaillimh","Tallaght","Waterford","Swords","Drogheda","Dundalk","Bray","D\xfan Laoghaire","Navan","Ennis","Balbriggan","Tralee","Sandyford","Kilkenny","Athlone","Naas","Sligo","Carlow"],"IM":["Douglas"],"IL":["Jerusalem","Tel Aviv","West Jerusalem","Haifa","Ashdod","Rishon Le\u1e94iyyon","Peta\u1e96 Tiqwa","Beersheba","Netanya","H\u0331olon","Bnei Brak","Re\u1e96ovot","Bat Yam","Ramat Gan","Ashkelon","Jaffa","Modi\u2018in Makkabbim Re\u2018ut","Herzliya","Kfar Saba","Ra\'anana","Hadera","Bet Shemesh","Lod","Nazareth","Modiin Ilit","Ramla","Nahariyya","Qiryat Ata","Givatayim","El\u2018ad","Kiryat Gat","Acre","Eilat","Afula","Karmi\u2019el","Hod HaSharon","Na\u1e95erat \u2018Illit","Umm el Fa\u1e25m","Tiberias","Qiryat Mo\u1e95qin","Qiryat Yam","Rosh Ha\u2018Ayin","Ness Ziona","Qiryat Bialik","Ramat HaSharon","Dimona","E\u1e6d \u1e6caiyiba","Yavn\xe9","Or Yehuda","B\u0101qa el Gharb\u012bya","Yehud-Monosson","Safed","Gedera","Be\u2019er Ya\u2018aqov","Tamra","Yehud","Daliyat al Karmel","Migdal Ha\u2018Emeq","Sakhn\u012bn","Netivot","Mevasseret \u1e94iyyon","Ofaqim","Arad","Yoqne\u2018am \u2018Illit","Zikhron Ya\u2018aqov","Gan Yavne","Qiryat Shemona","Kefar Yona","H\u0331ura","maalot Tarsh\u012bh\u0101","Nesher","Kuseifa","Tirah","Shoham","Sederot"],"IT":["Rome","Milan","Naples","Turin","Palermo","Genoa","Bologna","Florence","Catania","Bari","Messina","Verona","Padova","Trieste","Brescia","Prato","Taranto","Reggio Calabria","Modena","Livorno","Cagliari","Mestre","Parma","Foggia","Reggio nell\'Emilia","Acilia-Castel Fusano-Ostia Antica","Salerno","Perugia","Monza","Rimini","Pescara","Bergamo","Vicenza","Bolzano","Andria","Udine","Siracusa","Terni","Forl\xec","Novara","Barletta","Piacenza","Ferrara","Sassari","Ancona","La Spezia","Torre del Greco","Como","Lucca","Ravenna","Lecce","Trento","Giugliano in Campania","Busto Arsizio","Lido di Ostia","Cesena","Catanzaro","Brindisi","Marsala","Treviso","Pesaro","Pisa","Varese","Sesto San Giovanni","Arezzo","Latina","Gela","Pistoia","Caserta","Fuorigrotta","Cinisello Balsamo","Lamezia Terme","San Carlo All\'Arena","Altamura","Arenella","Guidonia Montecelio","Quartu Sant\'Elena","Pavia","Castellammare di Stabia","Massa","Alessandria","Cosenza","Afragola","Ragusa","Asti","Grosseto","Cremona","Molfetta","Trapani","Carrara","Casoria","Savona","Vigevano","Pianura","Legnano","Caltanissetta","Potenza","Portici","Matera","San Severo","Cerignola","Trani","Bisceglie","Acerra","Ercolano","Carpi Centro","Imola","Bagheria","Manfredonia","Aversa","Ponticelli","Bitonto","Venice","Vittoria","Gallarate","Marano di Napoli","Pordenone","Acireale","Scafati","Moncalieri","Viareggio","Benevento","Crotone","Velletri","Cava D\xe8 Tirreni","Avellino","San Lorenzo","Foligno","Nichelino","Civitavecchia","Viterbo","Battipaglia","Rho","San Remo","Lecco","Collegno","Corato","Cuneo","Paderno Dugnano","Rivoli","Patern\xf2","Montesilvano Marina","Mazara del Vallo","San Benedetto del Tronto","Casalnuovo di Napoli","Cologno Monzese","Sesto Fiorentino","Vercelli","Pozzuoli","Misterbianco","San Giorgio a Cremano","Anzio","Soccavo","Nocera Inferiore","Scandicci","Vomero","Nettuno","Frosinone","Chieti","Alcamo","Settimo Torinese","Torre Annunziata","Biella","Olbia","Siena","Secondigliano","Seregno","Gravina in Puglia","Chioggia","Ascoli Piceno","Faenza","Civitanova Marche","Modica","Capannori","Aprilia","Lodi","Cascina","Desio","Marcianise","Nicastro","Rozzano","Campobasso","Rovigo","Mantova","Rieti","Scampia","Fano","Pomigliano d\'Arco","Imperia","Chiaia","Bassano del Grappa","Saronno","Marino","Avezzano","Monopoli","Martina Franca","Quarto","Lissone","Cant\xf9","Monterotondo","Cesano Maderno","Jesi","Melito di Napoli","Sassuolo","Sciacca","Barra","Licata","Modugno","Teramo","Voghera","Nuoro","Caltagirone","Lanciano","Bollate","Ciampino","Carini","Arzano","Gorizia","Caivano","Barcellona Pozzo di Gotto","Fiumicino-Isola Sacra","Maddaloni","Adrano","Empoli","Alghero","Mugnano di Napoli","Ladispoli","Pioltello","Rovereto","Casalecchio di Reno","Schio","L\'Aquila","Corsico","Sant\'Antimo","Venaria Reale","Merano","Francavilla Fontana","Grugliasco","Brugherio","Avvocata","Canicatt\xec","Mira Taglio","Campi Bisenzio","Pagani","San Don\xe0 di Piave","Riccione","Casal Palocco","Agrigento","Somma Vesuviana","Aosta","Lucera","Chieri","Favara","Limbiate","Milazzo","Santa Maria Capua Vetere","Angri","Crema","Grottaglie","Casale Monferrato","Verbania","San Giuliano Milanese","Termoli","Terracina","Senigallia","Massafra","Pinerolo","Macerata","Conegliano","Augusta","Abbiategrasso","Stella","Vasto","Piombino","Canosa di Puglia","Mascalucia","Marigliano","Frattamaggiore","San Paolo","Nard\xf2","Monterusciello","Gragnano","Cernusco sul Naviglio","Pallanza-Intra-Suna","Sarno","Partinico","Avola","Formia","San Donato Milanese","Segrate","Castelvetrano","Piscinola","Manduria","Cisterna di Latina","Rapallo","Niscemi","San Giuseppe Vesuviano","Boscoreale","Triggiano","Camaiore","Monfalcone","Albano Laziale","Montebelluna","Fondi","Chiavari","Gravina di Catania","Mesagne","San Miniato Basso","Parabiago","Formigine","Comiso","Eboli","San Giovanni Rotondo","Romano Banco","Mondragone","Garbagnate Milanese","Novi Ligure","Falconara Marittima","Terlizzi","Bresso","Bacoli","Castelfranco Veneto","Assemini","Villaricca","Belluno","Lainate","Marina di Carrara","Treviglio","Alba","Santeramo in Colle","Vittorio Veneto","Orta di Atella","Mola di Bari","Aci Catena","Oristano","Giussano","Gioia del Colle","Ostuni","Giarre","Lentini","Nola","Bra","Ruvo di Puglia","Pompei","Miano","Casa Santa","San Giovanni a Teduccio","Rossano Stazione","Sora","Qualiano","Lumezzane","Spinea-Orgnano","Putignano","Poggioreale","Seriate","Copertino","Nocera Superiore","Ottaviano","Chiaiano","Cesano Boscone","Bagnoli","Selargius","Ivrea","Fabriano","San Sebastiano","Muggi\xf2","Biancavilla","Montecalvario","Chivasso","Carmagnola","Enna","Termini Imerese","Volla","Quattromiglia","Dalmine","Posillipo","Tortona","Seveso","Vimercate","Meda","Desenzano del Garda","Conversano","Iglesias","Palma di Montechiaro","Mariano Comense","Fasano","Magenta","Valdagno","Citt\xe0 di Castello","Vignola","San Lazzaro","Pomezia","Nova Milanese","Cardito","Porto Sant\'Elpidio","Floridia","San Cataldo","San Giovanni la Punta","Tivoli","Cecina","Mogliano Veneto","Noicattaro","Monreale","Fidenza","Castel Volturno","Mondov\xec","Orbassano","Poggibonsi","Carbonia","Porto Torres","Legnago","Lugo","Arzignano","Cassano Magnago","Follonica","San Nicola la Strada","Thiene","Francavilla al Mare","Sulmona","Cassino","Guidonia","Tor Lupara","Montecchio Maggiore-Alte Ceccato","Colleferro","Sant\'Anastasia","Palo del Colle","Senago","Casal di Principe","Genzano di Roma","Acquaviva delle Fonti","Pachino","Giulianova","Cervia","Sarzana","Borgomanero","Castrovillari","Marina di Ardea-Tor San Lorenzo","Monserrato","Cornaredo","San Giovanni Lupatoto","Frascati","Trezzano sul Naviglio"],"JM":["Kingston","New Kingston","Spanish Town","Portmore","Montego Bay","Mandeville","May Pen","Old Harbour","Linstead"],"JP":["Tokyo","Yokohama","Osaka","Nagoya","Sapporo","Kobe","Kyoto","Fukuoka","Kawasaki","Saitama","Hiroshima","Yono","Sendai","Kitakyushu","Chiba","Sakai","Shizuoka","Kumamoto","Okayama","Hamamatsu","Hachi\u014dji","Honch\u014d","Kagoshima","Niigata","Himeji","Matsudo","Nishinomiya-hama","Kawaguchi","Kanazawa","Utsunomiya","\u014cita","Matsuyama","Amagasaki","Kurashiki","Yokosuka","Nagasaki","Hirakata","Machida","Gifu-shi","Fujisawa","Toyonaka","Fukuyama","Toyohashi","Minato","Nara-shi","Toyota","Nagano","Iwaki","Asahikawa","Takatsuki","Okazaki","Suita","Wakayama","K\u014driyama","Kashiwa","Tokorozawa","Kawagoe","Kochi","Takamatsu","Toyama","Akita","Koshigaya","Miyazaki","Naha","Kasugai","Aomori","\u014ctsu","Akashi","Yokkaichi","Morioka","Fukushima","Ichihara","Maebashi","Ichinomiya","Hakodate","Ibaraki","Yao","Kakogawach\u014d-honmachi","Tokushima","Hiratsuka","Yamagata","Fukui-shi","Mito","Shimonoseki","Takasaki","Fuji","Hachinohe","Neyagawa","Kurume","Sasebo","Chigasaki","S\u014dka","Atsugi","Minamirinkan","Takarazuka","Ageoshimo","Ch\u014dfu","Matsumoto","Kasukabe","Kishiwada","Numazu","J\u014detsu","Odawara","Kure","Nagaoka","Nishi-Tokyo-shi","Itami","Uji","Suzuka","K\u014dfu","Izumi","Hitachi","Kushiro","Sakura","Kamirenjaku","Anj\u014d","Tsukuba","Hirosaki","Tomakomai","Hadano","Obihiro","Ube","Hino","Takaoka","Kamakura","Saga","Tsu","Sayama","Kawanishi","Oyama","Ashikaga","Matsue","Hitachi-Naka","Nagareyama","Katsuta","Kumagaya","Tottori","\u014cta","Komaki","\u014cgaki","Higashimurayama","\u014cme","Moriguchi","Yamaguchi","Otaru","Urayasu","Yonago","Kuwana","Kariya","Musashino","Zama","Seto","Ebetsu","Tondabayashich\u014d","Fujieda","Sandach\u014d","Kakamigahara","\u014cmuta","Abiko","Kadoma","Miyakonoj\u014d","Matsubara","Isesaki","Dait\u014dch\u014d","Mino","Asaka","Kusatsu","Ueda","Okinawa","Beppu","Kashihara-shi","Niihama","Kisarazu","Nobeoka","Fujinomiya","Noda","Yaizu","Toyokawa","Shimotoda","Kokubunji","Ikoma","Ishinomaki","H\u014dfu","Handa","Mishima","Kitami","Hikone","Kiry\u016b","Komatsu","Iwatsuki","Tajimi","Iida","Fukayach\u014d","Honmachi","Iwakuni","Isehara","Nishio","Inazawa","Tokuyama","Narita","Izumisano","Sakata","K\u014dnan","Chikushino-shi","Tsuruoka","Ikeda","Isahaya","Mobara","Ise","Kameoka","Sakado","Muroran","\u014cnoj\u014d","Kanuma","Yonezawa","Kitakami","Chitose","Kaizuka","Maizuru","Kimitsu","Ginowan","Onomichi","\u014cmura","Tsuyama","Izumo","Ashiya","Iwata","K\u014dnosu","Nabari","Yotsukaid\u014d","Hamakita","Gy\u014dda","Hann\u014d","Kashiwazaki","Ry\u016bgasaki","Iwamizawa","Kakegawa","Gotenba","Yachimata","Katori-shi","Kamigy\u014d-ku","Sanj\u014d","Sano","Kanoya","Tochigi","Tanashich\u014d","Marugame","Yashio","Tatebayashi","Shibata","Gamag\u014dri","Izumi\u014dtsu","Toride","Mihara","Ushiku","Kashihara","Karatsu","Iizuka","\u014cbu","Wako","Hatsukaichi","Tsurusaki","Furukawa","Shimada","Takefu","Okegawa","Miki","Inuyama","Kukich\u016b\u014d","Satsumasendai","Hanamaki","Yawata","It\u014d","Kazo","Yukuhashi","Tenri","Dazaifu","Maebaru-ch\u016b\u014d","Tanabe","\u014cmihachiman","Saku","Hekinan","Sukagawa","Fukuchiyama","Moriyama","Tsuruga","Matsut\u014d","Tamano","Tsushima","Nakatsu","Shiojiri","Chiry\u016b","Takayama","T\u014dgane","Sabae","Niitsu-honch\u014d","Tanabe","Kashima-shi","Mooka","Shiki","Tend\u014d","Gushikawa","Hasuda","\u014cdate","Imaichi","Narutoch\u014d-mitsuishi","Shimodate","Tosu","Fujioka","Fukuroi","Ichinoseki","Sakurai","Kitahiroshima","Fussa","Ina","Nagahama","Honj\u014d","Ueno-ebisumachi","Hita","Toki","Mizusawa","Kuroiso","Takaishi","Yoshikawa","Zushi","Koga","Nago","Shiogama","Uwajima","\u014ctawara","Saij\u014d","Hany\u016b","Chichibu","Kasaoka","Koga","Imarich\u014d-k\u014d","Kokubu-matsuki","S\u014dja","Ishikari","Itoman","Hashimoto","Sakaidech\u014d","N\u014dgata","Chino","Moriya","Tomigusuku","Iwade","Anan","Nanto-shi","Shiroi","Satte","Nakatsugawa","Suwa","Himimachi","Okaya","Suzaka","\u014cami","Muk\u014d","Hatogaya-honch\u014d","Kudamatsu","Kamifukuoka","Ishioka","Kariya","Miyako","Futtsu","Tagawa","Y\u016bki","Minokamo","Miura","Noshiro","Shiraoka","Kitaibaraki","Fuch\u016bch\u014d","\u014ci","Ono","Tateyama","Arashiyama","Sugito","Tokoname","Tomioka","Mutsu","Goshogawara","Saiki","Fujiyoshida","Masuda","Nonoichi","Kurayoshi","Shibukawa","Ami","Annaka","Iwakura","Sasayama","Sawara","Inashiki","Guj\u014d","Naka","Nakama","Toyooka","Komoro","Hikari","Uozu","Higashine","Hamada","Tamana","Numata","Youkaichi","Nanao","Obita","Takikawa","Hokuto","Ishigaki","Kan\u2019onjich\u014d","Onoda","Tsubame","Nichinan","Hagi","Sagae","Kainan","Ry\u016b\u014d","Mitsuke","Nishifukuma","Kamaishi","Misawa","Nakano","Mizunami","Kurobe-shi","Komatsushimach\u014d","Tamamura","Tomiya","Abashiri","Iwai","Iwanuma","Amagi","Asahi","Taketoyo","Hisai-motomachi","Wakkanai","Shirone","Naze","Mitsukaid\u014d","Shinj\u014d","T\u014dkamachi","Otofuke","Hondomachi-hondo","Kannabech\u014d-yahiro","Komono","Atami","Ojiya","Takahama","Yanagawa","Tatsunoch\u014d-tominaga","Kameyama","Umi","Kobayashi","Mibu","Morohong\u014d","Sumoto","Shiroishi","Hamanoichi","Miyoshi","Uto","\u014ckawa","Izumi","Hasaki","Yokote","Minakuchich\u014d-matoba","\u014czu","\u014cmagari","Yorii","Tsubata","Kuroishi","Tahara","Shimabara","Kamiiso","Hitoyoshi","Kawanoech\u014d","Ayabe","Ono","Ogawa","Gosen","Tomobe","Kitakata","Kanekomachi","Nishiwaki","Hanawa","Kanie","Sakaiminato","Watari","Nihommatsu","Yaita","Kanda","Shinshiro","Nishishinminato","Kaminoyama","\u014cfunato","Funaishikawa","Date","Rifu","Usuki","Gero","Namerikawa","Okunoya","Nakamura","Ibara","Hirara","Goj\u014d","Tsuma","Katsuren-haebaru","Takeoch\u014d-takeo","Takahagi","Maruoka","Yuzawa","Nirasaki","Kakuda","Hotaka","Fujishiro","Obama","Gose","Kameda-honch\u014d","Tawaramoto","Y\u014dkaichiba","\u014ciso","Sasaguri","Kuroda","Kashima","Aioi","Yamaga","Yanai","Kamo","Yamoto","\u014cdach\u014d-\u014dda","Uekimachi-m\u014dno","Shing\u016b","Ninomiya","Murakami","Sakai-nakajima","\u014ctsuki","Nemuro","Hayama","Nagai","Itoigawa","Kaminokawa","Iyo","\u014cmachi","Masaki-ch\u014d","Takehara","Ujiie","\u014ctake","Honch\u014d","\u014czu","Ibusuki","Isawa","Kasama","Minamata","Yasugich\u014d","Togitsu","Muikamachi","Kamogawa","Tarui","Maki","Bibai","Tanuma","Fukiage-fujimi","Hiratach\u014d","H\u014dj\u014d","Aso","Hiji","Chatan","Uenohara","Toyoshina","Kurihashi","Menuma","\u014cmiya","Ny\u016bzen","Yugawara","Arai","H\u014dry\u016bji","Gob\u014d","Katsuyama","Sakai","Mombetsu","Buzen","T\u014dno","Shimoda","Kikuchi","Fukuech\u014d","Nayoro","Rumoi","Ishii","Takahata","Susaki","\u014cno-hara","Matsubase","Fukagawa","Innoshima","Mashiko","Shing\u016b","Makubetsu","Sagara","Shimo-furano","Itako","Sukumo","Omigawa","Kushikino","Narut\u014d","Yoshii","Yoshida-kasugach\u014d","Kamimaruko","Iiyama","Ij\u016bin","Enzan","Yamazakich\u014d-nakabirose","Akune","Makurazaki","Itsukaichi","Ishige","Takahashi","G\u014dtsuch\u014d","Hakui","Hobaramachi","Kamojimach\u014d-j\u014dgejima","Ino","Setakamachi-takayanagi","Ishiki","Bungo-Takada-shi","Kitahama","Niimi","Kaseda-shirakame","Mino","Funehikimachi-funehiki","Og\u014dri-shimog\u014d","Tadotsu","Mikuni","Sobue","Kitsuki","\u014ckawara","Toba","Shirahamach\u014d-usazakiminami","Nagato","Fujikawaguchiko","Tochio-honch\u014d","Kamiichi","Kajiki","Motomachi","Shido","Yoichi","Hino","Tenn\u014d","Motomiya","Kasamatsuch\u014d","Hirado","Takanabe","Shizunai-furukawach\u014d","\u014ckuchi-shinohara","Ishikawa","Daigo","Katsuura","Yatsuomachi-higashikumisaka","Sh\u014dbu","Kushima","Kozakai-ch\u014d","Tsurugi-asahimachi","Owase","Iwase","Toyohama","Namie","T\u014dbetsu","\u014cyama","Shibetsu","Tsukumiura","Miyazu","Yashiro","Kodamach\u014d-kodamaminami","Tatsuno","\u014cmamach\u014d-\u014dmama","Tanushimarumachi-toyoki","Shin\u2019ichi","Kisai","Obanazawa","Yanagawamachi-saiwaich\u014d","Shiraoi","Edosaki","G\u014ddo","Namioka","Takanosu","Sh\u014dbara","Miyata","Suibara","Kanaya","Mori","\u014chara","Shiozawa","Kanzakimachi-kanzaki","Yamada","Aki","Sunagawa"],"JE":["Saint Helier"],"JO":["Amman","Zarqa","Irbid","Russeifa","W\u0101d\u012b as S\u012br","\u2018Ajl\u016bn","Aqaba","Rukban","M\u0101dab\u0101","As Sal\u0163","Ar Ramth\u0101","Mafraq","Ma\'an","Al Jubayhah","Sa\u1e29\u0101b","\u1e28ayy al Quwaysimah","Jarash","A\u0163 \u0162af\u012blah","\u2018Izr\u0101","Q\u012br Mo\u0101v","Karak City"],"KZ":["Almaty","Karagandy","Shymkent","Taraz","Nur-Sultan","Pavlodar","Ust-Kamenogorsk","Kyzylorda","Semey","Aktobe","Kostanay","Petropavl","Oral","Atyrau","Temirtau","Shevchenko","Kokshetau","Rudnyy","Ekibastuz","Taldykorgan","Zhezqazghan","Zhanaozen","Turkestan","Balqash","Sarkand","Baikonur","Kentau","Ridder","Qulsary","Shchuchinsk","Stepnogorsk","Zyryanovsk","Aksu","Dzhetygara","Soran","Talghar","Kapshagay","Arkalyk","Shakhtinsk","Lisakovsk","Chu","Karatau","Arys","Novokazalinsk","Abay","Aqsay","Atbasar","Zharkent","Zhangatas","Ayaguz","Aral","Esik","Chiili","Kandyagash","Shalqar","Shalkar","Tekeli","Belyye Vody","Chardara","Saryaghash","Khromtau","Georg\u012bevka","Yanykurgan","Lenger","Burunday","Ushtobe","Shemona\u012bkha","Zhosaly"],"KE":["Nairobi","Mombasa","Nakuru","Eldoret","Kisumu","Thika","Malindi","Kitale","Garissa","Kakamega","Kapenguria","Bungoma","Busia","Nyeri","Ol Kalou","Meru","Kilifi","Wajir","Mumias","Voi","Iten","Lugulu","Homa Bay","Naivasha","Nanyuki","Mandera","Narok","Kericho","Migori","Embu","Moyale","Isiolo","Nyahururu","Machakos","Rongai","Pumwani","Kisii","Molo","Kabarnet","Athi River","Lamu","Webuye","Karuri","Kiambu","Maralal","Makueni Boma","Lodwar"],"KI":["Tarawa"],"KP":["Pyongyang","Hamh\u016dng","Namp\u2019o","Sunch\u2019\u014fn","H\u016dngnam","Kaes\u014fng","W\u014fnsan","Chongjin","Sariw\u014fn","Sin\u016diju","Haeju","Kanggye","Hyesan","Songnim","Manp\u2019o","P\u2019y\u014fngs\u014fng","Hyesan-dong","Yuktae-dong","Hongw\u014fn","Rajin","Ongjin","Kilju","Chaery\u014fng-\u016dp","Anju","\u016ciju","Hoery\u014fng","S\u016dngho 1-tong","Changy\u014fn","Sunan","Hwangju-\u016dp","Ky\u014fngs\u014fng","Aoji","Ranam","Anby\u014fn-\u016dp","Kus\u014fng","Ch\u014fngju","Kangdong-\u016dp","S\u014fnbong","Iw\u014fn-\u016dp","H\u016dkkyo-ri","Kosan","Y\u014fnan-\u016dp","Namyang","Y\u014fnggwang-\u016dp","Musan-\u016dp","Kow\u014fn-\u016dp","Hoeyang","T\u2019ongch\u2019\u014fn-\u016dp","Kapsan-\u016dp"],"KR":["Seoul","Busan","Incheon","Daegu","Daejeon","Gwangju","Suwon","Goyang-si","Seongnam-si","Ulsan","Bucheon-si","Jeonju","Ansan-si","Cheongju-si","Anyang-si","Changwon","Pohang","Uijeongbu-si","Hwaseong-si","Masan","Jeju City","Cheonan","Kwangmy\u014fng","Kimhae","Chinju","Yeosu","Gumi","Iksan","Mokpo","Gunsan","W\u014fnju","Suncheon","Sejong","Chuncheon","Icheon-si","Guri-si","Gangneung","Yangju","Osan","Seogwipo","Gyeongju","Gimcheon","Jeongeup","Hanam","Gyeongsan-si","Andong","Hwado","Tonghae","Asan","Wabu","Namyangju","Kwangyang","Hongseong","Sokcho","Eisen","Wanju","Yangp\'y\u014fng","Ungsang","Sinhyeon","Gwangju","Mungyeong","Naes\u014f","Muan","Hongch\u2019\u014fn","Changnyeong","Seosan","Koch\'ang","Gongju","Kyosai","Yangsan","Anseong","Hwaw\u014fn","Pubal","Kosong","Boryeong","Chinch\'\u014fn","Hwasun","Nangen","Okcheon","Eisen","Sangju","Gapyeong","Yeongam","Sinan","Miryang","T\u2019aebaek","Kimje","Koesan","Nonsan","Munsan","Gijang","Naju","Santyoku","Yeonil","Hayang","Yesan","Imsil","Yeoju","Heunghae","Kunwi","Tangjin","Buyeo","Cheongsong gun","Jinan-gun","Kurye","Waegwan","Seonghwan","Goseong","Changsu","Ganghwa-gun","Neietsu","Kinzan","Y\u014fnmu","Yeongdong","Yanggu","Haenam","Hwacheon","Gaigeturi","Taesal-li","Puan","Jenzan"],"KW":["Al A\u1e29mad\u012b","\u1e28awall\u012b","As S\u0101lim\u012byah","\u015eab\u0101\u1e29 as S\u0101lim","Al Farw\u0101n\u012byah","Al Fa\u1e29\u0101\u1e29\u012bl","Kuwait City","Ar Rumayth\u012byah","Ar Riqqah","Salw\xe1","Al Manqaf","Ar R\u0101biyah","Bay\u0101n","Al Jahr\u0101\u2019","Al Fin\u0163\u0101s"],"KG":["Bishkek","Osh","Jalal-Abad","Karakol","Tokmok","Kara-Balta","Naryn","Uzgen","Balykchy","Talas","Kyzyl-Kyya","Bazar-Korgon","Iradan","Tash-Kumyr","Kant"],"LA":["Vientiane","Pakse","Thakh\xe8k","Savannakhet","Luang Prabang","Xam Nua","Muang Ph\xf4nsavan","Muang Xay","Vangviang","Pakxan"],"LV":["Riga","Daugavpils","Liep\u0101ja","Jelgava","J\u016brmala","Ventspils","R\u0113zekne","J\u0113kabpils","Valmiera","Ogre"],"LB":["Beirut","Ra\u2019s Bayr\u016bt","Tripoli","Sidon","Tyre","Nabat\xeey\xe9 et Tahta","Habbo\xfbch","Jounieh","Zahl\xe9","Ghazieh","Baalbek","En N\xe2qo\xfbra","Jba\xefl"],"LS":["Maseru","Mafeteng","Leribe","Maputsoe","Mohale\u2019s Hoek","Qacha\u2019s Nek","Quthing"],"LR":["Monrovia","Gbarnga","Kakata","Bensonville","Harper","Voinjama","Buchanan","Zwedru","New Yekepa"],"LY":["Tripoli","Benghazi","Mi\u015fr\u0101tah","Tarhuna","Al Khums","Az Z\u0101w\u012byah","Zawiya","Ajdabiya","Al Ajaylat","Sabh\u0101","Sirte","Al Jad\u012bd","Tobruk","Zliten","\u015eabr\u0101tah","Tagiura","Al Marj","Gharyan","Darnah","Al Bay\u1e11\u0101\u2019","Yafran","Bani Walid","At T\u0101j","Zuw\u0101rah","Murzuq","Ubari","Brak","Zintan","Al Aby\u0101r","Wadd\u0101n","N\u0101l\u016bt","Mizdah","\u015eurm\u0101n","Al Qubbah","Ghat","Masall\u0101tah","T\u016bkrah","Az Zuwayt\u012bnah"],"LI":[],"LT":["Vilnius","Kaunas","Klaip\u0117da","\u0160iauliai","Panev\u0117\u017eys","Alytus","Dainava (Kaunas)","Eiguliai","Marijampol\u0117","Mazeikiai","\u0160ilainiai","Fabijoni\u0161k\u0117s","Jonava","Utena","Pa\u0161ilai\u010diai","K\u0117dainiai","\u0160e\u0161kin\u0117","Lazdynai","Telsiai","Visaginas","Taurage","Justini\u0161k\u0117s","Ukmerge","Aleksotas","Plunge","Naujamiestis","Kretinga","Silute","Vilkp\u0117d\u0117","Radviliskis","Pilait\u0117"],"LU":["Luxembourg","Esch-sur-Alzette"],"MO":["Macau"],"MK":["Skopje","Bitola","Kumanovo","Prilep","Tetovo","\u010cair","Kisela Voda","Veles","Ohrid","Gostivar","Shtip","Strumica","Centar \u017dupa","Gjor\u010de Petro","Kavadarci","Struga","Butel","Kochani","Ki\u010devo","Lipkovo","Zelino","Saraj","Radovis","Tearce","Kriva Palanka","\u0160uto Orizare","Gevgelija"],"MG":["Antananarivo","Toamasina","Antsirabe","Fianarantsoa","Mahajanga","Toliara","Antsiranana","Antanifotsy","Ambovombe","Ambilobe","Amparafaravola","T\xf4lanaro","Ambatondrazaka","Mananara","Soavinandriana","Mahanoro","Soanierana Ivongo","Faratsiho","Nosy Varika","Vavatenina","Morondava","Amboasary","Manakara","Antalaha","Ikongo","Antsohimbondrona","Manjakandriana","Sambava","Fandriana","Marovoay","Betioky","Ambanja","Ambositra","Tsiombe","Betafo","Moramanga","Ambatolampy","Ambalavao","Sahavato","Mananjary","Tsiroanomandidy","Vohipaho","Miandrarivo","Marolambo","Ambatofinandrahana","Ankazoabo","Ampanihy","Vohibinany","Ampahana","Farafangana","Maevatanana","Belo sur Tsiribihina","Maroantsetra","Vangaindrano","Beloha","Hell-Ville","Ambato Boeny","Arivonimamo","Sakaraha","Antsohihy","Fenoarivo Atsinanana","Soanindrariny","Sitampiky","Ampasimanolotra","Andapa","Miandrivazo"],"MW":["Lilongwe","Blantyre","Mzuzu","Zomba","Kasungu","Mangochi","Karonga","Salima","Nkhotakota","Liwonde","Nsanje","Rumphi"],"MY":["Kota Bharu","Kuala Lumpur","Klang","Kampung Baru Subang","Johor Bahru","Subang Jaya","Ipoh","Kuching","Petaling Jaya","Shah Alam","Kota Kinabalu","Sandakan","Seremban","Kuantan","Tawau","George Town","Kuala Terengganu","Sungai Petani","Miri","Taiping","Alor Setar","Bukit Mertajam","Sepang","Sibu","Malacca","Kulim","Kluang","Skudai","Batu Pahat","Bintulu","Kampung Pasir Gudang Baru","Kampung Sungai Ara","Tasek Glugor","Muar","Ampang","Rawang","Butterworth","Lahad Datu","Semenyih","Marudi","Port Dickson","Cukai","Putatan","Keningau","Ulu Tiram","Labuan","Taman Senai","Donggongon","Segamat","Kampong Baharu Balakong","Perai","Kangar","Kulai","Jitra","Teluk Intan","Semporna","Putra Heights","Temerluh","Kampong Dungun","Simpang Empat","Kuala Selangor","Kampung Bukit Baharu","Bandar Labuan","Kota Tinggi","Pontian Kechil","Putrajaya","Mukah","Bentong Town","Banting","Bedong","Batu Gajah","Mentekab","Nibong Tebal","Raub","Kampong Pangkal Kalong","Lumut","Kuala Kangsar","Klebang Besar","Lawas","Kampung Ayer Keroh","Kampung Baharu Nilai","Tangkak","Jerantut","Kudat","Pekan","Bahau","Bakri","Kuah","Bidur","Sarikei","Kampong Masjid Tanah","Tanah Merah","Serendah","Tampin","Tapah Road","Parit Buntar","Simanggang","Permatang Kuching","Yong Peng","Sungai Besar","Limbang","Sungai Udang","Batu Berendam","Jenjarum","Kertih","Tanjung Tokong","Ladang Seri Kundang","Pekan Nenas","Peringat","Batu Arang","Tanjung Sepat","Mersing","Labis","Marang","Kuang","Paka","Bagan Serai","Alor Gajah","Batang Berjuntai"],"MV":["Male"],"ML":["Bamako","Sikasso","Mopti","Koutiala","S\xe9gou","Gao","Kayes","Markala","Kolokani","Kati","Bougouni","Timbuktu","Banamba","Bafoulab\xe9","San","Koulikoro","Dj\xe9nn\xe9"],"MT":["Birkirkara"],"MH":["Majuro"],"MQ":["Fort-de-France","Le Lamentin","Le Robert","Sainte-Marie"],"MR":["Nouakchott","Nouadhibou","N\xe9ma","Ka\xe9di","Rosso","Kiffa","Zouerate","Atar","T\xe9kane"],"MU":["Port Louis","Beau Bassin-Rose Hill","Vacoas","Curepipe","Quatre Bornes","Triolet","Goodlands"],"YT":["Mamoudzou"],"MX":["Mexico City","Iztapalapa","Ecatepec de Morelos","Guadalajara","Puebla","Ju\xe1rez","Tijuana","Le\xf3n de los Aldama","Gustavo Adolfo Madero","Zapopan","Monterrey","Ciudad Nezahualcoyotl","Chihuahua","Naucalpan de Ju\xe1rez","M\xe9rida","\xc1lvaro Obreg\xf3n","San Luis Potos\xed","Aguascalientes","Hermosillo","Saltillo","Mexicali","Culiac\xe1n","Guadalupe","Acapulco de Ju\xe1rez","Tlalnepantla","Canc\xfan","Santiago de Quer\xe9taro","Coyoac\xe1n","Santa Mar\xeda Chimalhuac\xe1n","Torre\xf3n","Morelia","Reynosa","Tlaquepaque","Tlalpan","Tuxtla","Cuauht\xe9moc","Victoria de Durango","Toluca","Ciudad L\xf3pez Mateos","Cuautitl\xe1n Izcalli","Ciudad Apodaca","Heroica Matamoros","San Nicol\xe1s de los Garza","Venustiano Carranza","Veracruz","Xalapa de Enr\xedquez","Azcapotzalco","Tonal\xe1","Xochimilco","Benito Ju\xe1rez","Iztacalco","Mazatl\xe1n","Irapuato","Nuevo Laredo","Miguel Hidalgo","Xico","Benito Juarez","Villahermosa","Ciudad General Escobedo","Celaya","Cuernavaca","Tepic","Ixtapaluca","Tampico","Ciudad Victoria","Tl\xe1huac","Ciudad Obreg\xf3n","Nicol\xe1s Romero","Ensenada","Coacalco","Santa Catarina","Uruapan","G\xf3mez Palacio","Los Mochis","Pachuca de Soto","Oaxaca","Soledad de Graciano S\xe1nchez","Colonia del Valle","Tehuac\xe1n","Ojo de Agua","Magdalena Contreras","Coatzacoalcos","Campeche","Monclova","La Paz","Nogales","Buenavista","Puerto Vallarta","Tapachula","Ciudad Madero","Chilpancingo","Poza Rica de Hidalgo","Chicoloapan","Ciudad del Carmen","Chalco","Jiutepec","Delegaci\xf3n Cuajimalpa de Morelos","Salamanca","San Luis R\xedo Colorado","San Crist\xf3bal de las Casas","San Pablo de las Salinas","Cuautla","Ciudad Benito Ju\xe1rez","Chetumal","Piedras Negras","Playa del Carmen","Zamora","C\xf3rdoba","San Juan del R\xedo","Colima","Ciudad Acu\xf1a","Manzanillo","Zacatecas","Huixquilucan","Ciudad Valles","Guadalupe","San Pedro Garza Garc\xeda","San Pedro Garza Garcia","Fresnillo","Orizaba","Miramar","Iguala de la Independencia","Ciudad Delicias","Ciudad de Villa de \xc1lvarez","Cuauht\xe9moc","Navojoa","Heroica Guaymas","Minatitl\xe1n","Cuautitl\xe1n","Texcoco de Mora","Parral","Tepexpan","Tulancingo","Tuxtepec","Colonia Lindavista","Apatzing\xe1n","Lagos de Moreno","Temixco","Ciudad Guzm\xe1n","Comit\xe1n","Ciudad R\xedo Bravo","Garc\xeda","Tepatitl\xe1n de Morelos","C\xe1rdenas","Cholula","Hacienda Santa Fe","Atlixco","Tecom\xe1n","Los Reyes Acaquilpan","Ciudad Mante","T\xfaxpam de Rodr\xedguez Cano","Tlaxcala","Her\xf3ica Zit\xe1cuaro","Ocotl\xe1n","La Piedad","Ciudad Lerdo","Ciudad L\xe1zaro C\xe1rdenas","Matehuala","Agua Prieta","Kanas\xedn","Cozumel","Amozoc de Mota","Salina Cruz","San Martin Texmelucan de Labastida","Juchit\xe1n de Zaragoza","Silao","Fuentes del Valle","Guanajuato","El Pueblito","Guasave","San Francisco del Rinc\xf3n","San Miguel de Allende","San Jos\xe9 del Cabo","Frontera","Cabo San Lucas","Cadereyta Jim\xe9nez","Valle de Santiago","Cadereyta","San Mateo Atenco","Ixtapa-Zihuatanejo","Santa Cruz Xoxocotl\xe1n","Ramos Arizpe","Tultepec","Rosarito","Tecate","Sahuayo de Morelos","Guam\xfachil","Linares","Tesist\xe1n","San Andr\xe9s Tuxtla","Cortazar","San Salvador Tizatlalli","Ciudad Hidalgo","Mart\xednez de la Torre","Villa Vicente Guerrero","Colonia Nativitas","Heroica Caborca","Altamira","Dolores Hidalgo Cuna de la Independencia Nacional","Teziutlan","Ac\xe1mbaro","Jacona de Plancarte","Puerto Pe\xf1asco","Huauchinango","Nuevo Casas Grandes","P\xe1tzcuaro","Sabinas","San Bernardino Tlaxcalancingo","Zinacantepec","Jardines de la Silla (Jardines)","Santiago Teyahualco","Coatepec","Papantla de Olarte","Rioverde","Ciudad de Huajuapan de Le\xf3n","Zacapu","Matamoros","Taxco de Alarc\xf3n","Arandas","Huamantla","Uriangato","Teoloyucan","Acayucan","Zumpango","Zacap\xfa","Polanco","San Luis de la Paz","Apizaco","Emiliano Zapata","Valladolid","Valle Hermoso","San Pedro","San Juan de los Lagos","Colonia del Sol","Santa Ana Chiautempan","Tierra Blanca","Tlapa de Comonfort","Tizim\xedn","Autl\xe1n de Navarro","Mazatlan","Chiapa de Corzo","San Buenaventura","Pur\xedsima de Bustos","Tizayuca","Morole\xf3n","Jerez de Garc\xeda Salinas","Jes\xfas Mar\xeda","Palenque","Iz\xfacar de Matamoros","Yautepec","Las Choapas","Empalme","Cintalapa de Figueroa","Juventino Rosas","Santo Domingo Tehuantepec","Ocosingo","Comalcalco","San Pedro","Ciudad Constituci\xf3n","P\xe1nuco","R\xedo Blanco","Camargo","P\xe9njamo","Huejutla de Reyes","San Andr\xe9s Cholula","Xicotepec de Ju\xe1rez","Uman","Los Reyes de Salgado","Ocozocoautla de Espinosa","Esperanza","Melchor Ocampo","Zacatelco","Nueva Rosita","Tepotzotl\xe1n","Guacamayas","Perote","Progreso","Villaflores","Salvatierra","Santa Teresa","Santiago","San Jer\xf3nimo Cuatro Vientos","Ameca","Agua Dulce","Xalisco","Coyotepec","Ciudad Mendoza","Tala","San Mart\xedn Azcatepec","Tlapacoyan","Tonal\xe1","La Barca","San Pablo Autopan","Ciudad Melchor M\xfazquiz","Ixmiquilpan","Fraccionamiento Real Palmas","San Miguel Topilejo","Maravat\xedo de Ocampo","Jos\xe9 Mariano Jim\xe9nez","P\xf3rticos de San Antonio","Tepeji del R\xedo de Ocampo","Coatzintla","Parras de la Fuente","San Isidro","Zacatl\xe1n","Calpulalpan","Ciudad Sabinas Hidalgo","R\xedo Grande","Ticul","J\xe1ltipan de Morelos","V\xedctor Rosales","Tenosique","Nueva Italia de Ruiz","Zapotlanejo","Macuspana","Centro Familiar la Soledad","Huixtla","Ciudad Fern\xe1ndez","Amecameca","Cananea","Loma Bonita","Huatusco","San Jos\xe9 Guadalupe Otzacatipan","Chilapa de \xc1lvarez","Jim\xe9nez","Champot\xf3n","Miguel Alem\xe1n (La Doce)","Escuinapa","Tantoyuca","Cosamaloapan","Puru\xe1ndiro","Huatabampo","Nicol\xe1s R Casillas","Tlajomulco de Z\xfa\xf1iga","Tequisquiapan","San Miguel Ajusco","Coyula","Pinotepa Nacional","Esc\xe1rcega","Marfil","Santa Isabel","Actopan","Tequila","San Fernando","Navolato","Ixtapa","Tecamachalco","Pabell\xf3n de Arteaga","Tula de Allende","Ciudad Sahagun","San Felipe","Metepec","San Sebasti\xe1n el Grande","Nuevo M\xe9xico","Berrioz\xe1bal","Ajalpan","Tultitl\xe1n de Mariano Escobedo","Apaseo el Alto","Rinc\xf3n de Romos","San Francisco Acuautla","Sanctorum","Catemaco","Contla","Leyva Solano","Tuxpan","Tepeaca","Abasolo","Huimanguillo","Moyotzingo","Villagr\xe1n","Atotonilco el Alto","Rancho La Gloria","Misantla","Sayula","Apan","Francisco I. Madero","Magdalena de Kino","Teapa","R\xedo de Teapa","Las Pintitas","Magdalena Atlicpac","Isla","San Jer\xf3nimo","Reforma","Ixtaczoquitl\xe1n","Santiago Papasquiaro","Apaseo el Grande","Ciudad de Allende","Ocoyoacac","Puerto Escondido","Acatzingo","Tecax","Felipe Carrillo Puerto","Valente Diaz","Huejotzingo","Tac\xe1mbaro de Codallos","Tejupilco de Hidalgo","Valle de Bravo","Mixquiahuala de Juarez","Ixtepec","Emiliano Zapata","Nanchital de L\xe1zaro C\xe1rdenas del R\xedo","Yuriria","Paraiso","Ciudad Altamirano","\xc1lamo","Cuautlancingo","Encarnaci\xf3n de D\xedaz","Hunucm\xe1","San Francisco Cuaxusco","Villa de Costa Rica","Zumpango del R\xedo","Tamazunchale","La Isla","Arriaga","Jalostotitl\xe1n","San Antonio Tec\xf3mitl","\xc9bano","Loreto","El Salto","Jiqu\xedlpan de Ju\xe1rez","Licenciado Benito Ju\xe1rez (Campo Gobierno)","San Juan Ixtayopan","Ometepec","San Miguel el Alto","Miahuatl\xe1n de Porfirio D\xedaz","Yur\xe9cuaro","Ciudad Serd\xe1n","Motozintla","Teocaltiche","Comonfort","Casta\xf1os","Allende","Juan Jos\xe9 R\xedos","Teloloapan","San Mart\xedn Cuautlalpan","San Jos\xe9 Iturbide","Teotihuac\xe1n de Arista","Ixtl\xe1n del R\xedo","Motul","Jes\xfas del Monte","Alvarado","Zacualtip\xe1n","San Jorge Pueblo Nuevo","Oxkutzkab","San Lorenzo Acopilco","Papalotla","Rodolfo S\xe1nchez Taboada","Las Pintas de Arriba","Zapotiltic","Tixtla de Guerrero","Frontera","Atlacomulco de Fabela","Manuel Ojinaga","Lerma de Villada","Tequixquiac","San Mateo Otzacatipan","San Miguel Coatlinch\xe1n","Meoqui","El Salto","Teotihuac\xe1n","San Jos\xe9 del Valle","Cosoleacaque","Cerro Azul","Nava","Ojinaga","Nogales","Reyes Acozac","Playas del Rosario","Huetamo de N\xfa\xf1ez","Santa Mar\xeda Atzompa","Tenango de Arista","Chiconcuac","Tuxpan","Sombrerete","Petatl\xe1n","El Salto","Chapala","Zacatepec","Atoyac de \xc1lvarez","Fort\xedn de las Flores","Romita","Puente de Ixtla","San Pedro Totoltepec","Xoxocotla","Villa Ju\xe1rez","El Grullo","Acajete","San Rafael","Las Margaritas","Capulhuac de Mirafuentes","Allende","Xonacatl\xe1n","San Buenaventura","Jaral del Progreso","Terrazas del Valle","Santa Anita","San Antonio de la Cal","La Orilla","Mezcales","Naranjos","Emiliano Zapata"],"FM":[],"MD":["Chisinau","Tiraspol","B\u0103l\u0163i","Bender","R\xeebni\u0163a","Cahul","Ungheni","Soroca","Orhei","Dub\u0103sari","Comrat","Edine\u0163","Cead\xeer-Lunga","C\u0103u\u015feni"],"MC":["Monaco"],"MN":["Ulan Bator","Erdenet","Darhan","Khovd","\xd6lgii","Ulaangom","Hovd","Murun-kuren","Bayanhongor","Arvayheer","S\xfchbaatar"],"ME":["Podgorica","Nik\u0161i\u0107"],"MS":[],"MA":["Casablanca","Rabat","F\xe8s","Sale","Marrakesh","Agadir","Tangier","Mekn\xe8s","Oujda-Angad","Al Hoce\xefma","Kenitra","T\xe9touan","Temara","Safi","Sal\xe9 Al Jadida","Mohammedia","Khouribga","Beni Mellal","F\xe8s al Bali","El Jadid","Taza","Nador","Settat","Larache","Ksar El Kebir","Khemisset","Guelmim","Berrechid","Errachidia","Oued Zem","Al Fqih Ben \xc7alah","Taourirt","Berkane","Sidi Slimane","Sidi Qacem","Khenifra","Ifrane","Taroudant","Essaouira","Tiflet","Oulad Te\xefma","Sefrou","Youssoufia","Tan-Tan","Ouezzane","Guercif","Ouarzazat","Tirhanim\xeene","Dakhla","Tiznit","Fnidek","Azrou","Midelt","Skhirate","Souq Larb\u2019a al Gharb","Jerada","Smara","Kasba Tadla","Sidi Bennour","Imzouren","Martil","Azemmour","Tinghir","Chefchaouene","Al Aaroui","El A\xefoun","Zagora","Taounate","Sidi Yahia El Gharb","Za\xefo","Asilah","Bouarfa","El Hajeb","Mechraa Bel Ksiri","Bouznika","Tahla","Arfoud","Setti Fatma","Re\xe7ani"],"MZ":["Maputo","Matola","Beira","Nampula","Chimoio","Nacala","Quelimane","Tete","Xai-Xai","Maxixe","Mandimba","Ressano Garcia","Lichinga","Pemba","Dondo","Ant\xf3nio Enes","Inhambane","Cuamba","Montepuez","Chokw\xe9","Chibuto","Ilha de Mo\xe7ambique","Mutu\xe1li","Moc\xedmboa","Macia"],"MM":["Yangon","Mandalay","Nay Pyi Taw","Mawlamyine","Kyain Seikgyi Township","Bago","Pathein","Monywa","Sittwe","Meiktila","Myeik","Taunggyi","Myingyan","Dawei","Pyay","Hinthada","Lashio","Pakokku","Thaton","Pyin Oo Lwin","Yenangyaung","Taungoo","Thayetmyo","Pyinmana","Magway","Myitkyina","Chauk","Mogok","Nyaunglebin","Mudon","Shwebo","Sagaing","Taungdwingyi","Syriam","Bogale","Pyapon","Yamethin","Kanbe","Kawthoung","Myaydo","Minbu","Tharyarwady","Thongwa","Kyaiklat","Tachilek","Maubin","Kyaukse","Hpa-An","Kyaikto","Martaban","Kyaikkami","Bhamo","Twante","Myawadi","Mawlaik","Wakema","Myanaung","Pyu","Kayan","Nyaungdon","Mawlamyinegyunn","Letpandan","Thanatpin","Paungde"],"NA":["Windhoek","Rundu","Walvis Bay","Oshakati","Swakopmund","Katima Mulilo","Grootfontein","Rehoboth","Katutura","Otjiwarongo","Okahandja"],"NR":[],"NP":["Kathmandu","Pokhara","P\u0101tan","Biratnagar","Birga\xf1j","Dhar\u0101n","Bharatpur","Janakpur","Dhanga\u1e0dhi\u0307\u0304","Butw\u0101l","Mahendranagar","Hetauda","Madhyapur Thimi","Triyuga","Inaruwa","Nepalgunj","Siddharthanagar","Gulariy\u0101","Titahari","Panauti","\u1e6cik\u0101pur","Kirtipur","Tuls\u012bpur","R\u0101jbir\u0101j","Lah\u0101n","Birendranagar","Panauti\u0307\u0304","Gaur","Siraha","T\u0101nsen","Jaleshwar","Dipayal","B\u0101glung","Khanbari","Dhankut\u0101","W\u0101li\u1e45","Dailekh","Mala\u1e45gaw\u0101"],"NL":["Amsterdam","Rotterdam","The Hague","Utrecht","Eindhoven","Tilburg","Groningen","Almere Stad","Breda","Nijmegen","Enschede","Haarlem","Arnhem","Zaanstad","Amersfoort","Apeldoorn","\'s-Hertogenbosch","Hoofddorp","Maastricht","Leiden","Dordrecht","Zoetermeer","Zwolle","Deventer","Delft","Alkmaar","Heerlen","Venlo","Leeuwarden","Amsterdam-Zuidoost","Hilversum","Hengelo","Amstelveen","Roosendaal","Purmerend","Oss","Schiedam","Spijkenisse","Helmond","Vlaardingen","Almelo","Gouda","Zaandam","Lelystad","Alphen aan den Rijn","Hoorn","Velsen-Zuid","Ede","Bergen op Zoom","Capelle aan den IJssel","Assen","Nieuwegein","Veenendaal","Zeist","Den Helder","Hardenberg","Emmen","Oosterhout","Doetinchem","Kerkrade","Kampen","Weert","Woerden","Sittard","Heerhugowaard","Rijswijk","Middelburg","Emmeloord","Zwijndrecht","Waalwijk","Huizen","Vlissingen","Ridderkerk","Soest","Roermond","Drachten","Heerenveen","Medemblik","Tiel","Harderwijk","Maarssen","Venray","Hoogeveen","Barendrecht","Nijkerk","Voorburg","Beverwijk","Goes","Zutphen","Heemskerk","Wageningen","Castricum","Hoogvliet","Gorinchem","Uden","IJsselstein","Epe","Sneek","Geleen","Maassluis","Wijchen","IJmuiden","Papendrecht","Oldenzaal","Bussum","Valkenswaard","Meppel","Ypenburg","Winterswijk","Boxtel","Brunssum","Leusden","Best","Krimpen aan den IJssel","Delfzijl","Barneveld","Veendam","Groot IJsselmonde","Dronten","Terneuzen","Geldrop","Uithoorn","Culemborg","Dalfsen","Zaltbommel","Werkendam","Zevenaar","Oisterwijk","Leiderdorp","Geldermalsen","Heemstede","Beuningen","Duiven","Dongen","Wassenaar","Veghel","Waddinxveen","Ommoord","Vught","Hoensbroek","Baarn","Noordwijk-Binnen","Diemen","Haaksbergen","Sliedrecht","Steenbergen","Oud-Beijerland","Wierden","Schijndel","Nuenen","Putten","Scheveningen","Loon op Zand","Aalsmeer","Goirle","Voorschoten","Losser","Lisse","Borssele","Volendam","Hellevoetsluis","Elburg","Hoogezand","Brummen","Oegstgeest","Hendrik-Ido-Ambacht","Geertruidenberg","Leerdam","Borne","Heiloo","Elst","Tubbergen","Tegelen","Berkel en Rodenrijs","Raalte","Katwijk aan Zee"],"AN":[],"NC":["Noum\xe9a","Mont-Dore"],"NZ":["Auckland","Wellington","Christchurch","Manukau City","North Shore","Hamilton","Dunedin","Tauranga","Lower Hutt","Palmerston North","Rotorua","Hastings","Nelson","Napier","Mangere","Porirua","Whangarei","New Plymouth","Invercargill","Wanganui","Upper Hutt","Gisborne","Ashburton","Papakura","Timaru","Blenheim","Paraparaumu","Taupo","Pukekohe East","Masterton"],"NI":["Managua","Le\xf3n","Masaya","Chinandega","Matagalpa","Estel\xed","Granada","Jinotega","El Viejo","Nueva Guinea","Tipitapa","Juigalpa","Ciudad Sandino","Bluefields","Diriamba","Ocotal","Puerto Cabezas","Chichigalpa","Rivas","San Rafael del Sur","Jinotepe","Boaco","Nagarote","Jalapa","La Paz Centro","San Marcos","Masatepe","Nandaime","El Rama","Somoto"],"NE":["Niamey","Zinder","Maradi","Agadez","Alaghsas","Tahoua","Dosso","Birni N Konni","Tessaoua","Gaya","Dogondoutchi","Diffa","Ayorou","Madaoua","Mayahi","T\xe9ra","Mirriah","Tibiri"],"NG":["Lagos","Kano","Ibadan","Kaduna","Port Harcourt","Benin City","Maiduguri","Zaria","Aba","Jos","Ilorin","Oyo","Enugu","Abeokuta","Abuja","Sokoto","Onitsha","Warri","Ebute Ikorodu","Okene","Calabar","Uyo","Katsina","Ado-Ekiti","Akure","Lekki","Bauchi","Ikeja","Makurdi","Minna","Efon-Alaaye","Ilesa","Owo","Umuahia","Ondo","Ikot Ekpene","Iwo","Gombe","Jimeta","Atani","Gusau","Mubi","Ikire","Owerri","Shagamu","Ijebu-Ode","Ugep","Chakwama","Nnewi","Ise-Ekiti","Ila Orangun","Saki","Bida","Awka","Ijero-Ekiti","Inisa","Suleja","Sapele","Osogbo","Kisi","Gbongan","Ejigbo","Funtua","Igboho","Buguma","Ikirun","Abakaliki","Okrika","Amaigbo","Lafia","Gashua","Modakeke","Bama","Ilobu","Jalingo","Okigwe","Offa","Esuk Oron","Nsukka","Nguru","Hadejia","Ijebu-Igbo","Uromi","Birnin Kebbi","Pindiga","Azare","Nkpor","Ikere-Ekiti","Lafiagi","Kontagora","Kuje","Yola","Biu","Olupona","Lere","Wukari","Igbo-Ora","Emure-Ekiti","Isieke","Ifo","Igede-Ekiti","Effium","Idanre","Potiskum","Keffi","Makoko","Epe","Gamboru","Ogaminana","Ihiala","Ipoti","Lalupon","Ughelli","Bende","Oke Mesi","Kafanchan","Ikom","Agulu","Daura","Numan","Kagoro","Ode","Igbo-Ukwu","Aramoko-Ekiti","Igbara-Odo","Ozubulu","Aku","Oyan","Jega","Asaba","Ohafia-Ifigh","Afikpo","Apomu","Fiditi","Orita Eruwa","Eha Amufu","Malumfashi","Kaura Namoda","Enugu-Ukwu","Idah","Obonoma","Agbor","Ezza-Ohu","Uga","Nkwerre","Auchi","Lokoja","Ekpoma","Ijebu-Jesa","Kabba","Ilaro","Damaturu","Argungu","Gumel","Geidam","Talata Mafara","Gummi","Otan Ayegbaju","Ogoja","Katsina-Ala","Itu","Kumo","Oke Ila","Pankshin","Nasarawa","Kachia","Dikwa","Moriki","Patigi","Wamba","Baro","Okuta","Birnin Kudu","Badagry","Ogwashi-Uku","Eket","Kamba","Daura","Takum","Igbeti","Zungeru","Zuru","Yenagoa","Tegina","Awgu","Wudil","Nafada","Ibi","Sofo-Birnin-Gwari","Dutsen Wai","Kaiama","Ubiaja","Otukpa","Oguta","Damboa","Jebba","Garko","Mokwa","Gaya","Tambuwal","Elele","Monguno","Kwale"],"NU":[],"NF":[],"MP":["Saipan"],"NO":["Oslo","Bergen","Trondheim","Stavanger","Drammen","Fredrikstad","Kristiansand","Sandnes","Asker","Troms\xf8","Sarpsborg","Skien","\xc5lesund","Sandefjord","Haugesund","T\xf8nsberg","Moss","Porsgrunn","Bod\xf8","Arendal","Hamar","Ytrebygda","Larvik","Halden"],"OM":["Muscat","Seeb","\u015eal\u0101lah","Bawshar","Sohar","As Suwayq","\u2018Ibr\u012b","\u015ea\u1e29am","Bark\u0101\u2019","Rustaq","Al Buraym\u012b","Nizw\xe1","Sur","Bahl\u0101\u2019","Al Kh\u0101b\u016brah","Shin\u0101\u015f","Suf\u0101lat Sam\u0101\u2019il","Izk\u012b","Liw\xe1","Ibr\u0101\u2019","Oman Smart Future City","Bidbid"],"PK":["Karachi","Lahore","Faisalabad","Rawalpindi","Multan","Hyderabad","Gujranwala","Peshawar","Rahim Yar Khan","Quetta","Muzaffar\u0101b\u0101d","Battagram","Kotli","Islamabad","Bahawalpur","Sargodha","Sialkot","Sukkur","Larkana","Shekhupura","Bhimbar","Jhang Sadr","Gujrat","Mardan","Malir Cantonment","Kasur","Mingora","Dera Ghazi Khan","Sahiwal","Nawabshah","Okara","Mirpur Khas","Chiniot","Shahkot","Kamoke","Saddiqabad","B\u016brew\u0101la","Jacobabad","Muzaffargarh","Muridke","Shikarpur","Hafizabad","Kohat","Tordher","Jhelum","Khanpur","Khuzdar","Dadu","Gojra","Mandi Bahauddin","Tando Allahyar","Daska Kalan","Pakpattan","Bahawalnagar","Bahawalnagar","Tando Adam","Khairpur Mir\u2019s","New Mirpur","Chishtian","Abbottabad","Jaranwala","Ahmadpur East","Vihari","Kamalia","Kot Addu","Khush\u0101b","Wazirabad","Dera Ismail Khan","Chakwal","Swabi","Lodhran","Nowshera Cantonment","Charsadda","Jalalpur Jattan","Mianwali","Chaman","Kandhkot","Hasilpur","Arifwala","Mianke Mor","Attock City","Chichawatni","Bhakkar","Kharian","Layyah","Kambar","Moro","Mian Channun","Turbat","Shahdad Kot","Bhalwal","Dipalpur","Badin","Pano Aqil","Kotri","Tando Muhammad Khan","Harunabad","Pattoki","Chenab Nagar","Kahror Pakka","Gujar Khan","Kot Malik Barkhurdar","Chuchar-kana Mandi","Toba Tek Singh","Narowal","Shorkot","Shahdadpur","Shabqadar","Mansehra","Shujaabad","Haveli Lakha","Lala Musa","Mailsi","Shakargarh","Ghotki","Sibi","Jampur","Sambrial","Sanghar","Hujra Shah Muqim","Kabirwala","Chunian","Sangla Hill","Haripur","Nankana Sahib","Pasrur","Gwadar","Rajanpur","Rohri","Zhob","Matli","Rawala Kot","Hadali","Mirpur Mathelo","Bannu","Dullewala","Hala","Ratodero","Jatoi Shimali","Jauharabad","Bat Khela","Kot Radha Kishan","Kahna Nau","Mustaf\u0101b\u0101d","Chak Thirty-one -Eleven Left","Talagang","Taunsa","Thatta","Sarai Alamgir","Usta Muhammad","Kamra","Umarkot","Basirpur","Sehwan","Naushahra Virkan","Fort Abbas","Havelian","Khairpur","Dinga","Ladhewala Waraich","Khalabat","New B\u0101d\u0101h","Tank","Kot Mumin","Tandlianwala","Chak Azam Sahu","Loralai","Jalalpur Pirwala","Pabbi","Chak Jhumra","Sahiwal","Renala Khurd","Risalpur Cantonment","Lakki","Topi","Hangu","Pir Jo Goth","Kundian","Pir Mahal","Khurrianwala","Mehrabpur","Pindi Bhattian","Malakwal City","Narang Mandi","Malakwal","Thul","Pindi Gheb","Zahir Pir","Dunyapur","Gambat","Kashmor","Alipur","Naudero","Pasni","Sukheke Mandi","Setharja Old","Khewra","Mamu Kanjan","Sharqpur Sharif","Digri","Bhera","Sakrand","Tando Jam","Raiwind","Lalian","Khairpur Tamewah","Kharan","Mehar","Khangah Dogran","Khairpur Nathan Shah","Upper Dir","Ghauspur","Tangi","Utmanzai","Thal","Minchianabad","Garh Maharaja","Jahanian Shah","Mastung","Mananwala","Fazilpur","Talamba","Kunjah","Jhawarian","Nasirabad","Nushki","S\u012bta Road","Dijkot","Sillanwali","Kandiaro","Zaida","Kunri","Kalat","Daud Khel","Mitha Tiwana","Hazro City","Dunga Bunga","Aman Garh","Karor","Kot Diji","Kalur Kot","Murree","Faqirwali","Ahmadpur Sial","Phalia","Yazman","Raja Jang","Chak Five Hundred Seventy-five","Pishin","Chak One Hundred Twenty Nine Left","Chawinda","Ubauro","Mithi","Akora","Zafarwal","Kot Samaba","Eminabad","Kahuta","Ranipur","Kulachi","Khanpur Mahar","Hingorja","Naukot","Pind Dadan Khan","Kanganpur","Faruka","Kotli Loharan","Shahpur Chakar","Talhar","Pad Idan","Kot Ghulam Muhammad","Qadirpur Ran","Bela"],"PW":[],"PS":["East Jerusalem","Gaza","Kh\u0101n Y\u016bnis","Jab\u0101ly\u0101","Hebron","Nablus","Rafa\u1e29","Dayr al Bala\u1e29","Bayt L\u0101hy\u0101","Battir","\u0162\u016blkarm","Qalq\u012blyah","Yuta","Ma\u2018ale Adummim","Al B\u012brah","Bayt \u1e28\u0101n\u016bn","An Nu\u015fayr\u0101t","Old City","Al Burayj","Jan\u012bn","Ban\u012b Suhayl\u0101","Bethlehem","Az\u0327 Z\u0327\u0101hir\u012byah","Kalandia","Ar R\u0101m wa \u1e10\u0101\u1e29iyat al Bar\u012bd","Ramallah","\u1e28al\u1e29\u016bl","D\u016br\u0101"],"PA":["Panam\xe1","San Miguelito","Juan D\xedaz","David","Arraij\xe1n","Col\xf3n","Las Cumbres","La Chorrera","Pedregal","Tocumen","Santiago de Veraguas","Parque Lefevre","Chilibre","Cativ\xe1","R\xedo Abajo","Nuevo Bel\xe9n","Anc\xf3n","Alcalde D\xedaz"],"PG":["Port Moresby","Lae","Arawa","Mount Hagen","Popondetta","Madang","Kokopo","Mendi"],"PY":["Asunci\xf3n","Ciudad del Este","San Lorenzo","Capiat\xe1","Lambar\xe9","Fernando de la Mora","Limpio","Nemby","Pedro Juan Caballero","Encarnaci\xf3n","Mariano Roque Alonso","Itaugu\xe1","Villa Elisa","Villa Hayes","San Antonio","Caaguaz\xfa","Presidente Franco","Coronel Oviedo","Concepci\xf3n","Villarrica","Pilar","Caazap\xe1","Caacup\xe9"],"PE":["Lima","Arequipa","Callao","Trujillo","Chiclayo","Iquitos","Huancayo","Piura","Chimbote","Cusco","Pucallpa","Tacna","Santiago de Surco","Ica","Juliaca","Sullana","Chincha Alta","Hu\xe1nuco","Ayacucho","Cajamarca","Puno","Tumbes","Talara","Chosica","Huaraz","Cerro de Pasco","Chulucanas","San Isidro","Huaral","Pisco","Catacaos","Paita","Abancay","Huacho","Moquegua","Ilo","Tingo Mar\xeda","Ja\xe9n","Tarma","Barranca","Moyobamba","Lambayeque","Picsi","Chep\xe9n","Yurimaguas","Huancavelica","Sa\xf1a","Tambopata","Juanju\xed","Puerto Maldonado","La Uni\xf3n","Ferre\xf1afe","Sicuani","La Oroya","Chocope","Nuevo Imperial","Imperial","Tambo Grande","La Rinconada","Pacasmayo","Tocache","Mollendo","Chaupimarca","Paramonga","La Peca","Chancay","Hualmay","Monsef\xfa","Marcavelica","San Vicente de Ca\xf1ete","Querecotillo","Guadalupe","Santa Ana","Rioja","Laredo","Nazca","Yanacancha","Sechura","Moche","Santiago de Cao","Huamachuco","Paij\xe1n","Jauja","Vir\xfa","Huaura","Bagua Grande","Chachapoyas"],"PH":["Quezon City","Manila","Caloocan City","Budta","Davao","Malingao","Cebu City","General Santos","Taguig","Pasig City","Las Pi\xf1as","Antipolo","Makati City","Zamboanga","Bacolod City","Mansilingan","Cagayan de Oro","Dasmari\xf1as","Pasay","Iloilo","San Jose del Monte","Bacoor","Lapu-Lapu City","Iligan","Mandaue City","Calamba","Iligan City","Butuan","Cabuyao","Mandaluyong City","Bi\xf1an","Angeles City","Santol","Cainta","Baguio","San Pedro","Mantampay","San Fernando","Libertad","Navotas","Tacloban","Batangas","Magugpo Poblacion","Taytay","Lucena","Puerto Princesa","Olongapo","Cabanatuan City","Binangonan","Santa Rosa","Imus","Lipa City","San Pablo","Malolos","Ormoc","Panalanoy","Mabalacat City","Pagadian","Meycauayan","Tarlac City","Legaspi","Cotabato","Naga","Dagupan","Toledo","Guyong","Bago City","Marawi City","Kabankalan","Baliuag","Rodriguez","San Mateo","Talisay","Muricay","Bulaon","Cadiz","Koronadal","Hagonoy","San Juan","Silang","San Jose","Digos","Cavite City","Tuguegarao","Dumaguete","Santiago","Santa Cruz","Mati","Tanza","Roxas City","Laoag","Pulong Santa Cruz","Urdaneta","Jolo","Bocaue","General Trias","Los Ba\xf1os","Iriga City","Dipolog","Ozamiz City","Calumpit","Mangaldan","Arayat","Surigao","Angono","Victorias","Tagbilaran City","Panabo","Mariveles","Binonga","NIA Valencia","Marilao","San Fernando","Sorsogon","Kidapawan","Norzagaray","Gapan","Daet","Apalit","Pulilan","Polangui","Guiguinto","Kawit","Balanga","Ilagan","Sagay","Capas","Solana","Bulacan","Tagaytay","Plaridel","Mariano","Danao","Magalang","Libon","Tanauan","Catbalogan","Calbayog City","Subic","Bislig","City of Isabela","Dinalupihan","Calapan","San Ildefonso","San Miguel","Bais","Talisay","Talavera","Concepcion","Polomolok","Nasugbu","Tinongan","Minglanilla","Malaybalay","Candelaria","Ualog","Tanay","Obando","Balagtas","Manaoag","Ba\xf1ga","Tabaco","Santo Tomas","Kalibo (poblacion)","Lingayen","Carmona","Lubao","Naic","Tacurong","Batac City","Patuto","Limay","Malu\xf1gun","Monkayo","Dapitan","Balayan","Cabiao","Morong","Liloan","Port Area","Consolacion","Vigan","Paniqui","Bayombong","Masbate","Catarman","Candaba","Santa Ana","Orion","Bagong Pagasa","Bugo","Sariaya","Parang","Orani","Canlaon","Binmaley","Mexico","Samal","Pinamalayan","Alabel","Passi","Recodo","Compostela","Bustos","Paombong","Masantol","La Trinidad","Angat","Indang","La Carlota","Malita","Gerona","Pagbilao","Carcar","Bayugan","Mamatid","Taal","Jaen","Camiling","Hinigaran","Banaybanay","San Pascual","Pantubig","Oroquieta","Escalante","Tanjay","Papaya","Binalbagan","Sablayan","Calaca","Tayabas","Del Pilar","Noveleta","Mu\xf1oz","Calauan","Ramon","Solano","Bongabon","Bayawan","Tagudin","San Jose","Abucay","Pandi","San Leonardo","Teresa","Pila","Manapla","San Nicolas","San Antonio","Aliaga","Pandan","Maramag","Hermosa","Malilipot","Bauan","Bay","San Luis","Aparri","Midsayap","General Tinio","Mauban","Jagna","Guimba","Kabacan","Isulan","Alaminos","Maluso","Cabadbaran","Surallah","Pagalu\xf1gan","Lucban","Paraiso","Pililla","Tagoloan","Lumbang","Cardona","Buhi","Malvar","Aringay","Samal","Tangub","Atimonan","Cordova","San Simon","Tandag","Agoo","Bah-Bah","Pandacaqui","Naga","Bulan","Itogon","Narra","Burgos","Sibulan","Masinloc","Buluan","Santa Maria","Pe\xf1aranda","Pulupandan","Castillejos","Lupon","Quezon","Manolo Fortich","Tabuk","Iba","Paete","Catanauan","Calabanga","Bongao","Santa Catalina","Santa Cruz","San Antonio","Rizal","Telabastagan","Maao","La Paz","Lopez","Nabua","Concepcion Ibaba","Cabagan","Himamaylan","Talisay","Baggabag B","Alicia","Manibaug Pasig","Nagcarlan","Victoria","La Castellana","Pio","Calasiao","Glan","Sipalay","Mamburao","Palayan City","San Fernando","Bogo","Asia","Quiapo","Pinamungahan","Mansalay","Botolan","Maragondon","Guihul\xf1gan","Bambang","Apas","Gumaca","Bignay Uno","Balamban","Mendez-Nu\xf1ez","Guiset East","Loma de Gato","Malanday","Cogan","Lake Sebu","Porac","Cuenca","Bansalan","Jose Pa\xf1ganiban","Sexmoan","Molave","Goa","Calauag","Irosin","New Corella","Don Carlos","Taloc","Manay","Baras","Sampaloc","Ternate"],"PN":[],"PL":["Warsaw","\u0141\xf3d\u017a","Krak\xf3w","Wroc\u0142aw","Pozna\u0144","Gda\u0144sk","Szczecin","Bydgoszcz","Lublin","Katowice","Bia\u0142ystok","Gdynia","Cz\u0119stochowa","Sosnowiec","Radom","Mokot\xf3w","Toru\u0144","Kielce","Gliwice","Zabrze","Bytom","Praga Po\u0142udnie","Bielsko-Biala","Olsztyn","Rzesz\xf3w","Ursyn\xf3w","Ruda \u015al\u0105ska","Wola","Rybnik","Bielany","\u015ar\xf3dmie\u015bcie","D\u0105browa G\xf3rnicza","Tychy","Opole","Elbl\u0105g","P\u0142ock","Wa\u0142brzych","Gorz\xf3w Wielkopolski","Targ\xf3wek","W\u0142oc\u0142awek","Zielona G\xf3ra","Tarn\xf3w","Chorz\xf3w","Kalisz","Koszalin","Legnica","Bemowo","Grudzi\u0105dz","S\u0142upsk","Jaworzno","Jastrz\u0119bie Zdr\xf3j","Ochota","Praga P\xf3\u0142noc","Bia\u0142o\u0142eka","Jelenia G\xf3ra","Nowy S\u0105cz","Konin","Piotrk\xf3w Trybunalski","Inowroc\u0142aw","Lubin","Siedlce","Pi\u0142a","Mys\u0142owice","Ostrowiec \u015awi\u0119tokrzyski","Siemianowice \u015al\u0105skie","Ostr\xf3w Wielkopolski","Stargard","Pabianice","Gniezno","Fordon","Suwa\u0142ki","G\u0142og\xf3w","Che\u0142m","Tomasz\xf3w Mazowiecki","Przemy\u015bl","Stalowa Wola","Zamo\u015b\u0107","K\u0119dzierzyn-Ko\u017ale","\u0141om\u017ca","Leszno","\u017bory","Be\u0142chat\xf3w","Wawer","Mielec","Tarnowskie G\xf3ry","\u015awidnica","Tczew","Piekary \u015al\u0105skie","Racib\xf3rz","B\u0119dzin","Zgierz","Bia\u0142a Podlaska","E\u0142k","\u015awi\u0119toch\u0142owice","Pruszk\xf3w","Ostro\u0142\u0119ka","Starachowice","Zawiercie","\u017boliborz","Legionowo","Tarnobrzeg","Pu\u0142awy","Wodzis\u0142aw \u015al\u0105ski","Skar\u017cysko-Kamienna","Radomsko","Skierniewice","Kutno","Starogard Gda\u0144ski","Krosno","D\u0119bica","Ursus","Nysa","Wejherowo","Ciechan\xf3w","Rumia","Zdu\u0144ska Wola","Sieradz","Ko\u0142obrzeg","Rejon placu \u015awi\u0119tego Macieja","Otwock","\u017byrard\xf3w","O\u015bwi\u0119cim","\u015awinouj\u015bcie","Boles\u0142awiec","Nowa S\xf3l","Sopot","Jaros\u0142aw","\u015awidnik","Chrzan\xf3w","Knur\xf3w","Sanok","Chojnice","Miko\u0142\xf3w","\u017bary","Malbork","Szczecinek","Sochaczew","Brzeg","Jas\u0142o","Olkusz","Kwidzyn","Mi\u0144sk Mazowiecki","Ole\u015bnica","Wo\u0142omin","Piaseczno","W\u0142ochy","Kra\u015bnik","Cieszyn","L\u0119bork","Czechowice-Dziedzice","Police","Czelad\u017a","Dzier\u017coni\xf3w","Nowy Targ","Ostr\xf3da","Myszk\xf3w","Zgorzelec","I\u0142awa","\u017bywiec","O\u0142awa","Bielawa","\u0141uk\xf3w","\u015arem","Gi\u017cycko","\u0141owicz","August\xf3w","Turek","M\u0142awa","Krotoszyn","Bochnia","Swarz\u0119dz","Czerwionka-Leszczyny","Wrze\u015bnia","Gorlice","Gier\u0142o\u017c","K\u0119trzyn","K\u0142odzko","Nowy Dw\xf3r Mazowiecki","Zakopane","Brodnica","Rejon placu Grunwaldzkiego","Bi\u0142goraj","Grodzisk Mazowiecki","Wyszk\xf3w","Bielsk Podlaski","Lubo\u0144","\u017baga\u0144","Szczytno","Kluczbork","Wa\u0142cz","\u015awiecie","Jarocin","Bartoszyce","Pszczyna","Sandomierz","Kabaty","Nowa Ruda","W\u0105growiec","Wielu\u0144","Bia\u0142ogard","Lubliniec","Ko\u015bcian","Jawor","Skawina","Pruszcz Gda\u0144ski","Ko\u0142o","Z\u0105bki","Ko\u015bcierzyna","Prudnik","Piast\xf3w","\u015awiebodzice","Marki","Zambr\xf3w","Lubart\xf3w","Grajewo","Ostr\xf3w Mazowiecka","Opoczno","Goleni\xf3w","Luba\u0144","P\u0142o\u0144sk","Hajn\xf3wka","\u0141aziska G\xf3rne","Mr\u0105gowo","Andrych\xf3w","Rembert\xf3w","Rydu\u0142towy","\u015awiebodzin","\u015aroda Wielkopolska","Kamienna G\xf3ra","\u0141\u0119czna","Polkowice","Rawicz","Gryfino","Dzia\u0142dowo","Gosty\u0144","Ko\u0144skie","Rejon ulicy Traugutta","Ozork\xf3w","Che\u0142mno","Aleksandr\xf3w \u0141\xf3dzki","Tomasz\xf3w Lubelski","Strzelce Opolskie"],"PT":["Lisbon","Porto","Amadora","Braga","Set\xfabal","Coimbra","Queluz","Funchal","Cac\xe9m","Vila Nova de Gaia","Algueir\xe3o","Loures","Felgueiras","\xc9vora","Rio de Mouro","Odivelas","Aveiro","Amora","Corroios","Barreiro","Monsanto","Rio Tinto","S\xe3o Domingos de Rana","Figueira da Foz","Leiria","Ponte de Lima","Faro","Sesimbra","Guimar\xe3es","Ermesinde","Santo Ant\xf3nio dos Olivais","Portim\xe3o","Benfica","Cascais","Maia","Viana do Castelo","Oeiras","Beja","Esposende","Bragan\xe7a","Almada","Olivais","Castelo Branco","Alcabideche","Espinho","C\xe2mara de Lobos","Guarda","Alvalade","Arrentela","Montijo","Charneca de Caparica","Santar\xe9m","Olh\xe3o","P\xf3voa de Varzim","Senhora da Hora","Marinha Grande","P\xf3voa de Santa Iria","Sequeira","Massam\xe1","Matosinhos","Gondomar","\xc1guas Santas","Vila do Conde","Caldas da Rainha","S\xe3o Martinho","Canidelo","Viseu","Sintra","Pa\xe7o de Arcos","S\xe3o Mamede de Infesta","Quinta Do Conde","Torres Vedras","Oliveira do Douro","F\xe2nzeres","Estoril","Carnaxide","Pinhal Novo","Monte Estoril","Cani\xe7o","Pontinha","Loul\xe9","Arcos de Valdevez","Moscavide e Portela","S\xe3o Jo\xe3o da Madeira","Lavradio","Bougado","Valongo","Caparica","Belas","Laranjeira","Linda-a-Velha","Trofa","Bai\xe3o","Laranjeiro","Carcavelos","Camarate","Ponta Delgada"],"PR":["San Juan","Bayam\xf3n","Carolina","Ponce","Caguas","Guaynabo","Mayag\xfcez","Trujillo Alto","Arecibo","Fajardo","Levittown","Vega Baja","Cata\xf1o","Barceloneta","Guayama","Humacao","Yauco"],"QA":["Doha","Ar Rayy\u0101n","Umm \u015eal\u0101l Mu\u1e29ammad","Al Wakrah"],"RE":["Saint-Denis","Saint-Paul","Saint-Pierre","Le Tampon","Saint-Andr\xe9","Saint-Louis","Le Port","Saint-Beno\xeet","Saint-Joseph","Sainte-Marie","Piton Saint-Leu","Saint-Leu","La Possession","Sainte-Suzanne"],"RO":["Bucharest","Sector 3","Sector 6","Sector 2","Ia\u015fi","Cluj-Napoca","Timi\u015foara","Craiova","Constan\u0163a","Gala\u0163i","Sector 4","Bra\u015fov","Sector 5","Ploie\u015fti","Sector 1","Br\u0103ila","Oradea","Bac\u0103u","Arad","Pite\u015fti","Sibiu","T\xe2rgu-Mure\u015f","Baia Mare","Buz\u0103u","Boto\u015fani","Satu Mare","R\xe2mnicu V\xe2lcea","Suceava","Piatra Neam\u0163","Drobeta-Turnu Severin","T\xe2rgu Jiu","Tulcea","T\xe2rgovi\u015fte","Bistri\u0163a","Re\u015fi\u0163a","Slatina","Foc\u0219ani","Vaslui","Hunedoara","Giurgiu","Roman","B\xe2rlad","Deva","Alba Iulia","Zal\u0103u","Sf\xe2ntu Gheorghe","Turda","Media\u015f","Slobozia","Alexandria","Pa\u015fcani","Petro\u015fani","Medgidia","Lugoj","C\xe2mpina","Miercurea-Ciuc","Tecuci","Sighetu Marma\u0163iei","Mangalia","R\xe2mnicu S\u0103rat","Dej","Odorheiu Secuiesc","Reghin-Sat","Sighi\u0219oara","Caracal","N\u0103vodari","Fete\u015fti","Curtea de Arge\u015f","Dorohoi","F\u0103g\u0103ra\u0219","Lupeni","Voluntari","S\u0103cele","F\u0103lticeni","Hu\u015fi","Mioveni","Vulcan","Turnu M\u0103gurele","T\xe2rn\u0103veni","Aiud","Caransebe\u015f","Ro\u0219iorii de Vede","Sebe\u015f","Bor\u015fa","C\xe2mpia Turzii","Olteni\u0163a","Petrila","Z\u0103rne\u0219ti","Cugir","Codlea","Moine\u015fti","R\u0103d\u0103u\u021bi","Fete\u0219ti-Gar\u0103","Gherla","Com\u0103ne\u015fti","Motru","Carei","Or\u0103\u015ftie","Buftea","Dr\u0103g\u0103\u015fani","Bal\u015f","Moreni","T\xe2rgu Neam\u0163","Blaj","T\xe2rgu Secuiesc","Corabia"],"RU":["Moscow","Saint Petersburg","Novosibirsk","Yekaterinburg","Nizhniy Novgorod","Samara","Omsk","Kazan","Rostov-na-Donu","Chelyabinsk","Ufa","Volgograd","Perm","Krasnoyarsk","Saratov","Voronezh","Tol\u2019yatti","Krasnodar","Ulyanovsk","Izhevsk","Yaroslavl","Barnaul","Vladivostok","Irkutsk","Khabarovsk","Khabarovsk Vtoroy","Orenburg","Novokuznetsk","Ryazan\u2019","Tyumen","Lipetsk","Penza","Naberezhnyye Chelny","Kalininskiy","Astrakhan","Makhachkala","Tomsk","Kemerovo","Tula","Kirov","Cheboksary","Kaliningrad","Bryansk","Ivanovo","Magnitogorsk","Kursk","Tver","Nizhny Tagil","Stavropol\u2019","Ulan-Ude","Arkhangel\u2019sk","Belgorod","Kurgan","Kaluga","Krasnogvargeisky","Sochi","Or\xebl","Volzhskiy","Smolensk","Murmansk","Vladikavkaz","Cherepovets","Vologda","Vladimir","Chita","Saransk","Surgut","Tambov","Yoshkar-Ola","Taganrog","Kostroma","Komsomolsk-on-Amur","Nal\u2019chik","Sterlitamak","Petrozavodsk","Bratsk","Orsk","Nizhnevartovsk","Angarsk","Mar\u2019ino","Novorossiysk","Khimki","Yakutsk","Nizhnekamsk","Dzerzhinsk","Syktyvkar","Staryy Oskol","Groznyy","Shakhty","Blagoveshchensk","Prokop\u2019yevsk","Rybinsk","Vykhino-Zhulebino","Zelenograd","Biysk","Velikiy Novgorod","Centralniy","Vasyl\'evsky Ostrov","Pskov","Severnyy","Balakovo","Armavir","Engel\u2019s","Severodvinsk","Zlatoust","Syzran\u2019","Petropavlovsk-Kamchatsky","Kamensk-Ural\u2019skiy","Yasenevo","Podolsk","Yuzhno-Sakhalinsk","Lyublino","Berezniki","Volgodonsk","Miass","Abakan","Novocherkassk","Nazran\u2019","Rubtsovsk","Mytishchi","Salavat","Khorosh\xebvo-Mnevniki","Bibirevo","Gol\u2019yanovo","Admiralteisky","Ussuriysk","Lyubertsy","Kovrov","Strogino","Balashikha","Zhulebino","Kolomna","Nakhodka","Elektrostal\u2019","Maykop","Biryul\xebvo","Orekhovo-Borisovo","Novyye Kuz\u2019minki","Kuz\u2019minki","Pyatigorsk","Chertanovo Yuzhnoye","Zheleznodorozhnyy","Norilsk","Al\u2019met\u2019yevsk","Korolev","Kolpino","Odintsovo","Nevinnomyssk","Pervoural\u2019sk","Kislovodsk","Dimitrovgrad","Novomoskovsk","Petrogradka","Ramenki","Zyablikovo","Kamyshin","Novocheboksarsk","Serpukhov","Orekhovo-Borisovo Severnoye","Ivanovskoye","Murom","Khasavyurt","Neftekamsk","Tyoply Stan","Tsaritsyno","Veshnyaki","Presnenskiy","Zyuzino","Solntsevo","Orekhovo-Zuyevo","Tropar\xebvo","Achinsk","Cherkessk","Taganskiy","Noginsk","Yelets","Novo-Peredelkino","Ochakovo-Matveyevskoye","Tobol\u2019sk","Shchelkovo","Nefteyugansk","Novokuybyshevsk","Noyabrsk","Bataysk","Seversk","Arzamas","Sergiyev Posad","Leninsk-Kuznetsky","Kyzyl","Oktyabr\u2019skiy","Obninsk","Elista","Cher\xebmushki","Novotroitsk","Derbent","Izmaylovo","Kisel\xebvsk","Akademicheskoe","Velikiye Luki","Bogorodskoye","Pushkino","Art\xebm","Ukhta","Shchukino","Brateyevo","Kansk","Mezhdurechensk","Ryazanskiy","Novyye Cher\xebmushki","Solikamsk","Glazov","Ust\u2019-Ilimsk","Tekstil\u2019shchiki","Zelenodolsk","Novoshakhtinsk","Sarapul","Votkinsk","Serov","Balashov","Zheleznogorsk","Zhukovskiy","Ramenskoye","Magadan","Ozerki","Novogireyevo","Vostochnoe Degunino","Novyy Urengoy","Novoural\u2019sk","Zheleznogorsk","Michurinsk","Kineshma","Krasnogorsk","Pushkin","Bugul\u2019ma","Yaroslavskiy","Lefortovo","Kuznetsk","Kirovo-Chepetsk","Berdsk","Gatchina","Biryul\xebvo Zapadnoye","Sarov","Yeysk","Buzuluk","Gubkin","Chaykovskiy","Lianozovo","Babushkin","Usol\u2019ye-Sibirskoye","Obruchevo","Svetlanovskiy","Yegor\u2019yevsk","Yurga","Komendantsky aerodrom","Anzhero-Sudzhensk","Troitsk","Azov","Kaspiysk","Ozersk","Yessentuki","Klin","Vorkuta","Fili","Kropotkin","Shadrinsk","Vyborg","Reutov","Alekseyevka","Voskresensk","Mineralnye Vody","Birobidzhan","Nagornyy","Kamensk-Shakhtinskiy","Belovo","Chekhov","Asbest","Peterhof","Dachnoye","Minusinsk","Georgiyevsk","Yelabuga","Naro-Fominsk","Finlyandskiy","Sunzha","Chernogorsk","Zelenogorsk","Grazhdanka","Kopeysk","Kurortnyy","Vol\u2019sk","Beloretsk","Ishimbay","Adler","Chapayevsk","Tuymazy","Lys\u2019va","Borisoglebsk","Sosnovyy Bor","Dolgoprudnyy","Dorogomilovo","Bud\xebnnovsk","Belogorsk","Khanty-Mansiysk","Ishim","Kstovo","Aleksin","Parnas","Kungur","Klintsy","Neryungri","Leninogorsk","Sosnovka","Gukovo","Lesosibirsk","Polevskoy","Meleuz","Kumertau","Slavyansk-na-Kubani","Tikhoretsk","Rossosh\u2019","Tuapse","Aleksandrov","Kotlovka","Zarechnyy","Pavlovo","Novaya Balakhna","Gus\u2019-Khrustal\u2019nyy","Buynaksk","Krasnotur\u2019insk","Belebey","Rzhev","Chistopol\u2019","Zarechnyy","Tikhvin","Rossosh\u2019","Petrodvorets","Labinsk","Iskitim","Revda","Lobnya","Vyksa","Dmitrov","Sibay","Apatity","Novoaltaysk","Svobodnyy","Sal\u2019sk","Stupino","Prokhladnyy","Shuya","Shch\xebkino","Bor","Dubna","Pavlovskiy Posad","Sviblovo","Ostankinskiy","Mikhaylovsk","Kotlas","Verkhnyaya Pyshma","Talnakh","Mikhaylovka","Solnechnogorsk","Arsen\u2019yev","Uzlovaya","Volzhsk","Kogalym","Krymsk","Cheremkhovo","Zhigulevsk","Sokol\u2019niki","Sokol","Roslavl\u2019","Borovichi","Chernaya Rechka","Kirishi","Ezhva","Liski","Vyaz\u2019ma","Nazarovo","Klimovsk","Lesnoy","Rybatskoye","Uritsk","Zamoskvorech\u2019ye","Pokrovskoye-Streshn\xebvo","Ber\xebzovskiy","Gorno-Altaysk","Belorechensk","Krasnokamensk","Kupchino","Altuf\u2019yevskiy","Timash\xebvsk","Severomorsk","Domodedovo","Vyshniy Voloch\xebk","Anapa","Buguruslan","Fryazevo","Livny","Yartsevo","Krasnokamsk","Fryazino","Zarinsk","Nyagan","Kimry","Levoberezhnyy","Vidnoye","Tulun","Ivanteyevka","Donetsk","Gelendzhik","Lytkarino","Kingisepp","Kizlyar","Chusovoy","Otradnyy","Snezhinsk","Novovladykino","Vatutino","Vagonoremont","Sem\xebnovskoye","Novokuz\u2019minki","Novokhovrino","Nikol\u2019skoye","Likhobory","Kozhukhovo","Kozeyevo","Akademgorodok","Metrogorodok","Untolovo","Sayanogorsk","Kanash","Monchegorsk","Satka","Ruzayevka","Verkhnyaya Salda","Osinniki","Megion","Torzhok","Kuybyshev","Sosnovaya Polyana","Vsevolozhsk","Ust\u2019-Kut","Kurganinsk","Raduzhny","Mtsensk","Belaya Kalitva","Shelekhov","Gryazi","Mozhga","Dzerzhinsky","Beryozovsky","Amursk","Kurchatov","Chebarkul\u2019","Nadym","Staryy Malgobek","Pechora","Safonovo","Rasskazovo","Kol\u2019chugino","Volkhov","Obukhovo","Yefremov","Kanevskaya","Spassk-Dal\u2019niy","Shebekino","Chernyakhovsk","Strezhevoy","Avtovo","Kamen\u2019-na-Obi","Akhtubinsk","Krasnoye Selo","Krasnyy Sulin","Ust\u2019-Labinsk","Myski","Usinsk","Rtishchevo","Alapayevsk","Kachkanar","Sayansk","Tutayev","Pashkovskiy","Sertolovo","Malgobek","Morshansk","Sovetsk","Mariinsk","Krasnoufimsk","Kronstadt","Zavolzh\u2019ye","Novodvinsk","Sharypovo","Koryazhma","Novozybkov","Lomonosov","Partizansk","Konakovo","Sokol","Alatyr\u2019","Izberbash","Zainsk","Lesozavodsk","Korenovsk","Irbit","Uryupinsk","Kyshtym","Gay","Pyt-Yakh","Urus-Martan","Lyudinovo","Pugachev","Zelenokumsk","Dzerzhinskiy","Birsk","Frolovo","Mozdok","Yelizovo","Apsheronsk","Mirny","Pereslavl\u2019-Zalesskiy","Tosno","Luga","Kashira","Korkino","Yagry","Langepas","Kolomyagi","Uray","Alekseyevka","Svetlograd","Vyatskiye Polyany","Tavda","Kirov","Sampsonievskiy","Vyazniki","Yuzhnoural\u2019sk","Muravlenko","Vichuga","Izobil\u2019nyy","Aksay","Nizhneudinsk","Leningradskaya","Millerovo","Kandalaksha","Dalnegorsk","Furmanov","Lyantor","Bol\u2019shoy Kamen\u2019","Salekhard","Uchaly","Tayshet","Uglich","Kulebaki","Troitsk","Baksan","Rezh","Novovoronezh","Tynda","Protvino","Sestroretsk","Rostokino","Serdobsk","Bogorodsk","Temryuk","Novokubansk","Sukhoy Log","Slantsy","Teykovo","Blagodarnyy","Chernushka","Yalutorovsk","Valuyki","Beslan","Kasimov","Shumerlya","Korsakov","Goryachevodskiy","Staraya Derevnya","Gul\u2019kevichi","Abinsk","Dinskaya","Baltiysk","Karabulak","Tr\xebkhgornyy","Nurlat","Ostrogozhsk","Kondopoga","Kinel\u2019","Staraya Russa","Blagoveshchensk","Slavgorod","Kushva","Ust\u2019-Dzheguta","Art\xebmovskiy","Krasnoznamensk","Petrovsk","Severoural\u2019sk","Yablonovskiy","Kizilyurt","Nartkala","Istra","Segezha","Zima","Dobryanka","Verkhniy Ufaley","Dyat\u2019kovo","Primorsko-Akhtarsk","Kotovsk","Asha","Marks","Gudermes","Kholmsk","Maloyaroslavets","Velikiy Ustyug","Yubileyny","Desnogorsk","Lukhovitsy","Udomlya","Slobodskoy","Bogdanovich","Donskoy","Kimovsk","Znamensk","Privolzhskiy","Gorodets","Nakhabino","Sosnovoborsk","Kudymkar","Mozhaysk","Barabinsk","Pavlovskaya","Likino-Dulevo","Dyurtyuli","Rostov","Yugorsk","Sorochinsk","Mednogorsk","Topki","Kirzhach","Starominskaya","Borzya","Bogoroditsk","Kostomuksha","Karpinsk","Shatura","Divnogorsk","Vostryakovo","Vorob\u2019yovo","Annino","Petrovskaya","Nikulino","Mikhalkovo","Matveyevskoye","Luzhniki","Leonovo","Leninskiye Gory","Lazarevskoye","Kuskovo","Kur\u2019yanovo","Kolomenskoye","Davydkovo","Amin\u2019yevo","Annino","Zagor\u2019ye","Kushch\xebvskaya","Sasovo","Yemanzhelinsk","Shar\u2019ya","Sovetskaya Gavan\u2019","Kirovsk","Kapotnya","Sosnogorsk","Mirnyy","Morozovsk","Zernograd","Ipatovo","Unecha","Krasnoarmeyskaya","Kokhma","Gagarin","Inozemtsevo","Uvarovo","Kuvandyk","Gusev","Karasuk","Buturlinovka","Isakogorka","Kartaly","Kochubeyevskoye","Zheleznogorsk-Ilimskiy","Tomilino","Pokhvistnevo","Dalnerechensk","Bezhetsk","Argun","Poykovskiy","Goryachiy Klyuch","Shcherbinka","Polysayevo","Aleysk","Aleksandrovskoye","Kamyshlov","Mirnyy","Yanaul","Kolpashevo","Dagestanskiye Ogni","Zarechnyy","Neftekumsk","Rodniki","Novoaleksandrovsk","Kotel\u2019nich","Atkarsk","Kalach-na-Donu","Sol\u2019-Iletsk","Kayyerkan","Krasnoural\u2019sk","Nikolayevsk-on-Amure","Asino","Labytnangi","Dedovsk","Zarya","Zeya","Tara","Kotovo","Gubakha","Pavlovsk","Okha","Buy","Oktyabr\u2019sk","Metallostroy","Semiluki","Kubinka","Kaltan","Oz\xebry","Nev\u2019yansk","Krasnoarmeysk","Fokino","Severobaykal\u2019sk","Krasnoarmeysk","Zavodoukovsk","Ekazhevo","Kireyevsk","Omutninsk","Nerekhta","Nelidovo","Vilyuchinsk","Mostovskoy","Tatarsk","Bologoye","Ust\u2019-Katav","Volokolamsk","Shali","Gur\u2019yevsk","Zverevo","Kirovsk","Zaraysk","Zheleznovodsk","Ostrov","Tbilisskaya","Aldan","Novopavlovsk","Skopin","Tayga","Sem\xebnov","Nikol\u2019sk","Ob\u2019","Balabanovo","Gusinoozyorsk","Kalachinsk","Davlekanovo","Nizhniy Lomov","Lesnoy","Troitskaya","Raychikhinsk","Bezenchuk","Lensk","Sovetskiy","Yershov","Olenegorsk","Bogotol","Dudinka","Semikarakorsk","Lyskovo","L\u2019govskiy","Kabanovo","Fedorovskiy","Lermontov","Osa","Vel\u2019sk","Otradnaya","Bavly","Lebedyan\u2019","Il\u2019skiy","Mendeleyevsk","Dankov","Severskaya","Tashtagol","Koz\u2019modem\u2019yansk","Onega","Kirovgrad","Novotitarovskaya","Nizhnyaya Tura","Gorelovo","Vikhorevka","Vereshchagino","Shakhun\u2019ya","Sergach","Bryukhovetskaya","Nyandoma","Novaya Usman\u2019","Lodeynoye Pole","Svetlyy","Losino-Petrovskiy","Staraya Kupavna","Pikal\xebvo","Ryazhsk","Igra","Chishmy","Roshal\u2019","Sysert\u2019","Toguchin","Luchegorsk","Lin\xebvo","Kizel","Bakal","Khadyzhensk","Shimanovsk","Kovylkino","Otradnoye","Sheksna","Abdulino","Yarovoye","Terek","Zelenchukskaya","Suvorov","Novyy Oskol","Dugulubgey","Ber\xebzovka","Kurchaloy","Khot\'kovo","Priyutovo","Novomichurinsk","Sortavala","Elektrogorsk","Surovikino","Bobrov","Nytva","Chernogolovka","Gubkinskiy","Sobinka","Kalach","Buinsk","Karachayevsk","Sredneuralsk","Cherepanovo","Tyrnyauz","Beloyarskiy","Pushchino","Rayevskiy"],"RW":["Kigali","Butare","Gitarama","Musanze","Gisenyi","Byumba","Cyangugu","Kibuye","Rwamagana","Kibungo","Nzega"],"SH":[],"KN":[],"LC":[],"PM":[],"VC":["Kingstown"],"WS":["Apia"],"SM":[],"ST":["S\xe3o Tom\xe9"],"SA":["Riyadh","Jeddah","Mecca","Medina","Sul\u0163\u0101nah","Dammam","Ta\u2019if","Tabuk","Al Kharj","Buraydah","Khamis Mushait","Al Huf\u016bf","Al Mubarraz","Hafar Al-Batin","Ha\'il","Najr\u0101n","Al Jubayl","Abha","Yanbu","Khobar","Arar","Sakakah","Jizan","Qurayyat","Sabt Alalayah","Dhahran","Al Qa\u0163\u012bf","Al Bahah","T\u0101r\u016bt","Qal\u2018at B\u012bshah","Ar Rass","Ash Shaf\u0101","Sayh\u0101t","Al Mithnab","Al Khafj\u012b","Ad Daw\u0101dim\u012b","\u015eaby\u0101","Az Zulf\u012b","Ab\u016b \u2018Ar\u012bsh","\u015eafw\xe1","Afif","R\u0101bigh","Ra\u1e29\u012bmah","Turaif","\u0162ubarjal","Ad Dilam","Umluj","Al-`Ula","Abqaiq","Badr \u1e28unayn","\u015e\u0101mitah","Al Wajh","Al Bukayr\u012byah","An Nim\u0101\u015f","As Sulayyil","Turabah","Al Jum\u016bm","Duba","A\u0163 \u0162araf","Qaisumah"],"SN":["Dakar","Pikine","Touba","Thi\xe8s","Thi\xe8s Nones","Saint-Louis","Kaolack","Ziguinchor","Ti\xe9bo","Tambacounda","Mbak\xe9","Louga","Kolda","Richard-Toll","Joal-Fadiout","N\u2019diareme limamoulaye","Dara","Kaffrine","Ndib\xe8ne Dahra","Bignona","Pourham","V\xe9lingara","Nioro du Rip"],"RS":["Belgrade","Ni\u0161","Novi Sad","Zemun","Kragujevac","\u010ca\u010dak","Subotica","Leskovac","Novi Pazar","Kraljevo","Zrenjanin","Pan\u010devo","Kru\u0161evac","U\u017eice","Smederevo","Valjevo","Vranje","\u0160abac","Zaje\u010dar","Trstenik","Sombor","Kikinda","Po\u017earevac","Pirot","Bor","Sremska Mitrovica","Vr\u0161ac","Jagodina","Ruma","Ba\u010dka Palanka","Prokuplje","Smederevska Palanka","In\u0111ija","Vrbas","Be\u010dej","Knjazevac","Aran\u0111elovac","Gornji Milanovac","Lazarevac","Srem\u010dica","\u0106uprija","Senta"],"SC":["Victoria"],"SL":["Freetown","Bo","Kenema","Koidu","Makeni","Lunsar","Port Loko"],"SG":["Singapore","Woodlands"],"SK":["Bratislava","Ko\u0161ice","Pre\u0161ov","Nitra","\u017dilina","Bansk\xe1 Bystrica","Trnava","Tren\u010d\xedn","Poprad","Martin","Prievidza","Zvolen","Pova\u017esk\xe1 Bystrica","Nov\xe9 Z\xe1mky","Michalovce","Spi\u0161sk\xe1 Nov\xe1 Ves","Levice","Kom\xe1rno","Humenn\xe9","Bardejov","Liptovsk\xfd Mikul\xe1\u0161","Ru\u017eomberok","Pie\u0161\u0165any","Lu\u010denec","Dubnica nad V\xe1hom","Rimavsk\xe1 Sobota","\u010cadca","\u0160a\u013ea","Partiz\xe1nske","Hlohovec","Dunajsk\xe1 Streda","Vranov nad Top\u013eou","Trebi\u0161ov","Snina","Senica","Nov\xe9 Mesto nad V\xe1hom","Pezinok","Brezno"],"SI":["Ljubljana","Maribor","Celje","Kranj","Velenje","Koper","Novo Mesto"],"SB":["Honiara"],"SO":["Mogadishu","Hargeysa","Berbera","Kismayo","Marka","Jamaame","Baidoa","Burao","Bosaso","Afgooye","Gaalkacyo","Laascaanood","Garoowe","Beledweyne","Qoryooley","Jawhar","Jilib","Baardheere","Ceerigaabo","Luuq","Buurhakaba","Ceeldheer","Wanlaweyn"],"ZA":["Cape Town","Durban","Johannesburg","Soweto","Pretoria","Port Elizabeth","Pietermaritzburg","Benoni","Tembisa","East London","Vereeniging","Bloemfontein","Boksburg","Welkom","Newcastle","Krugersdorp","Diepsloot","Randburg","Botshabelo","Brakpan","Witbank","Richards Bay","Vanderbijlpark","Centurion","Uitenhage","Roodepoort","Paarl","Springs","Carletonville","Klerksdorp","Midrand","Westonaria","Middelburg","Vryheid","Orkney","Kimberley","eMbalenhle","Nigel","Mpumalanga","Bhisho","Randfontein","Worcester","Rustenburg","Polokwane","Potchefstroom","Virginia","Brits","Alberton","Nelspruit","Phalaborwa","Queenstown","Kroonstad","Bethal","Mokopane","Mabopane","Kutloanong","Stellenbosch","Stilfontein","Delmas","Grahamstown","Warmbaths","Louis Trichardt","Dundee","Piet Retief","Phuthaditjhaba","Bethlehem","Mthatha","Sasolburg","Mmabatho","Standerton","Bothaville","Upington","Parys","Schweizer-Reneke","Ga-Rankuwa","Knysna","Saldanha","Barberton","Lichtenburg","Heidelberg","Graaff-Reinet","Fochville","Oudtshoorn","Atlantis","KwaDukuza","Mossel Bay","Fort Beaufort","Kraaifontein","Wellington","Heilbron","Viljoenskroon","Port Shepstone","Vryburg","Wolmaransstad","Edenvale","eSikhaleni","Balfour","Mondlo","Beaufort West","Aliwal North","Thohoyandou","Volksrust","Wesselsbron","Ceres","Ermelo","Senekal","Thaba Nchu","Vredenburg","Ekangala","Giyani","Stutterheim","Harrismith","Malmesbury","Theunissen","Margate","Butterworth","Lebowakgomo","Cradock","Richmond","De Aar","Retreat","Allanridge","Nkowakowa","Postmasburg","Grabouw","Howick","Driefontein","Empangeni","Robertson","Bronkhorstspruit","Siyabuswa","Mpophomeni","Cullinan","Kokstad","Hermanus","Lady Frere","Midstream","Duiwelskloof","Scottburgh","Hennenman","Pampierstad","Lydenburg","Ulundi","Modimolle","Komatipoort","Secunda","eMkhomazi","Queensdale"],"GS":[],"ES":["Madrid","Barcelona","Valencia","Sevilla","Zaragoza","M\xe1laga","Murcia","Palma","Las Palmas de Gran Canaria","Bilbao","Alicante","C\xf3rdoba","Valladolid","Vigo","Gij\xf3n","Eixample","L\'Hospitalet de Llobregat","Latina","Carabanchel","A Coru\xf1a","Puente de Vallecas","Sant Mart\xed","Gasteiz / Vitoria","Granada","Elche","Ciudad Lineal","Oviedo","Santa Cruz de Tenerife","Fuencarral-El Pardo","Badalona","Cartagena","Terrassa","Jerez de la Frontera","Sabadell","M\xf3stoles","Alcal\xe1 de Henares","Pamplona","Fuenlabrada","Almer\xeda","Legan\xe9s","Donostia / San Sebasti\xe1n","Sants-Montju\xefc","Santander","Castell\xf3 de la Plana","Burgos","Albacete","Horta-Guinard\xf3","Alcorc\xf3n","Getafe","Nou Barris","Hortaleza","San Blas-Canillejas","Salamanca","Tetu\xe1n de las Victorias","Logro\xf1o","La Laguna","City Center","Huelva","Arganzuela","Badajoz","Sarri\xe0-Sant Gervasi","Sant Andreu","Salamanca","Chamber\xed","Usera","Tarragona","Chamart\xedn","Lleida","Marbella","Le\xf3n","Villaverde","Cadiz","Retiro","Dos Hermanas","Matar\xf3","Gr\xe0cia","Santa Coloma de Gramenet","Torrej\xf3n de Ardoz","Ja\xe9n","Moncloa-Aravaca","Algeciras","Parla","Delicias","Ourense","Alcobendas","Reus","Moratalaz","Ciutat Vella","Torrevieja","Telde","Barakaldo","Lugo","San Fernando","Girona","Santiago de Compostela","C\xe1ceres","Lorca","Coslada","Talavera de la Reina","El Puerto de Santa Mar\xeda","Cornell\xe0 de Llobregat","Las Rozas de Madrid","Orihuela","Avil\xe9s","El Ejido","Guadalajara","Roquetas de Mar","Palencia","Algorta","Sant Boi de Llobregat","Pozuelo de Alarc\xf3n","Toledo","Les Corts","Pontevedra","Getxo","Gandia","Sant Cugat del Vall\xe8s","Ceuta","Arona","Torrent","Chiclana de la Frontera","Manresa","San Sebasti\xe1n de los Reyes","Ferrol","V\xe9lez-M\xe1laga","Ciudad Real","Mijas","Melilla","Rub\xed","Fuengirola","Benidorm","Alcal\xe1 de Guadaira","Ponferrada","Rivas-Vaciamadrid","Majadahonda","Campi\xf1a","Vic\xe1lvaro","Zamora","Sagunto","Vilanova i la Geltr\xfa","Sanl\xfacar de Barrameda","Estepona","Torremolinos","Villa de Vallecas","La L\xednea de la Concepci\xf3n","Molina de Segura","Paterna","Santa Luc\xeda","Viladecans","El Prat de Llobregat","Valdemoro","Grao de Murviedro","Castelldefels","Alcoy","Linares","Irun","Granollers","Motril","Gamonal","Santutxu","Arrecife","Benalm\xe1dena","Cerdanyola del Vall\xe8s","la Nova Esquerra de l\'Eixample","\xc1vila","Barri de Sant Andreu","Segovia","M\xe9rida","Cuenca","Torrelavega","Elda","Collado-Villalba","Aranjuez","San Vicent del Raspeig","Mollet del Vall\xe8s","San Bartolom\xe9 de Tirajana","Huesca","Puertollano","Calvi\xe0","Sagrada Fam\xedlia","Arganda","Vila-real","la Vila de Gr\xe0cia","Utrera","Ibiza","el Raval","Portugalete","Sant Gervasi - Galvany","Santurtzi","Esplugues de Llobregat","Barri de les Corts","Gav\xe0","Sama","Antequera","Alzira","Denia","Mieres","Dreta de l\'Eixample","Llefi\xe0","Mislata","Colmenar Viejo","Pinto","Barajas de Madrid","Boadilla del Monte","Figueres","Adeje","Sant Feliu de Llobregat","Basauri","Lucena","l\'Antiga Esquerra de l\'Eixample","Tres Cantos","Sants","La Orotava","Plasencia","Alcantarilla","San Fernando de Henares","Poble Sec","Mairena del Aljarafe","Manacor","\xc9cija","Puerto Real","Blanes","Granadilla de Abona","Vic","Soria","Lloret de Mar","Miranda de Ebro","And\xfajar","Igualada","Errenteria","Rinc\xf3n de la Victoria","Sant Antoni","Burjassot","Vilafranca del Pened\xe8s","el Camp de l\'Arpa del Clot","Tomelloso","Ontinyent","Nar\xf3n","Vilagarc\xeda de Arousa","Los Realejos","Ripollet","Ronda","Los Palacios y Villafranca","Arucas","Llucmajor","el Guinard\xf3","Realejo Alto","La Rinconada","El Vendrell","Don Benito","Puerto del Rosario","\xdabeda","Teruel","Villena","Mazarr\xf3n","Cieza","Tortosa","Alhaur\xedn de la Torre","Yecla","San Pedro de Alc\xe1ntara","Tudela","Burriana","\xc1guilas","el Camp d\'en Grassot i Gr\xe0cia Nova","Villajoyosa","Sant Adri\xe0 de Bes\xf2s","el Poblenou","Almendralejo","Olot","Montcada i Reixac","Oleiros","Marratx\xed","Maspalomas","Aranda de Duero","Azuqueca de Henares","Cambrils","Puerto de la Cruz","Sant Joan Desp\xed","Fort Pienc","El Carmel","Galapagar","Santa Pola","Castro-Urdiales","Javea","Torre-Pacheco","San Javier","Camargo","Santa Eul\xe0ria des Riu","Arcos de la Frontera","Leioa","Valdepe\xf1as","Barber\xe0 del Vall\xe8s","Carballo","Hell\xedn","San Andr\xe9s del Rabanedo","Xirivella","Alc\xe1zar de San Juan","Manises","la Marina de Port","Alaqu\xe0s","Oliver-Valdefierro","Puente-Genil","Redondela","Atamar\xeda","Pinar de Chamart\xedn","Puerto del Carmen","Salt","Aldaia","Arteixo","Calp","Sestao","X\xe0tiva","Ingenio","Inca","el Putxet i el Farr\xf3","San Roque","Galdakao","Totana","Rota","Ciutadella","La Sagrera","Ma\xf3","la Verneda i la Pau","Ag\xfcimes","Sueca","Crevillente","Mor\xf3n de la Frontera","Oliva","Sant Pere de Ribes","Carmona","Algemes\xed","Vinar\xf2s","Durango","Culleredo","Coria del R\xedo","Sant Vicen\xe7 dels Horts","Almu\xf1\xe9car","Sitges","Ribeira","Eibar","Premi\xe0 de Mar","el Clot","Santa Ux\xeda de Ribeira","Novelda","Catarroja","Am\xe9s","Martorell","Horta","Benicarl\xf3","Salou","Villarrobledo","N\xedjar","El Campello","Villaviciosa de Od\xf3n","Lebrija","Caravaca","Sant Andreu de la Barca","la Prosperitat","Pineda de Mar","Sant Mart\xed de Proven\xe7als","Camas","Mar\xedn","Lepe","Villanueva de la Serena","Almozara","el Baix Guinard\xf3","Cangas do Morrazo","Almansa","Onda","Jumilla","Vilapicina i la Torre Llobeta","La Bonanova","Quart de Poblet","Valls","Santa Perp\xe8tua de Mogoda","Almassora","Iturrama","Sarri\xe0","Calahorra","Martos","Porta","G\xe1ldar","Adra","Sants - Badal","Candelaria","Calafell","Erandio","Cullera","Ibi","Molins de Rei","la Maternitat i Sant Ramon","Icod de los Vinos","Montilla","Altea","San Pedro del Pinatar","Tacoronte","Paiporta","Priego de C\xf3rdoba","Baza","Alhaur\xedn el Grande","Olesa de Montserrat","el Bes\xf2s i el Maresme","Cambre","Ponteareas","Castellar del Vall\xe8s","Barbate","Sant Pere, Santa Caterina i La Ribera","V\xedcar","Alcal\xe1 la Real","Tomares","Ll\xedria","Zarautz","Primer Ensanche","Segundo Ensanche","Mutxamel","Mejorada del Campo","Alboraya","Palafrugell","Los Barrios","El Masnou","Ciempozuelos","Bara\xf1\xe1in","Arrasate / Mondrag\xf3n","Navas","Pilar de la Horadada","Carrizal","La Oliva","Torre del Mar","Sant Feliu de Gu\xedxols","San Juan de Alicante","Calatayud","Moncada","A Estrada","Co\xedn","Esparreguera","Sant Antoni de Portmany","Nerja","Almonte","Torrelodones","Laguna de Duero","Carcaixent","Mog\xe1n","Palma del R\xedo","Navalcarnero","Loja","Medina del Campo","Armilla","Cabra","Isla Cristina","C\xe1rtama","Requena","Illescas","Lal\xedn","Amposta","Las Torres de Cotillas","l\'Alf\xe0s del Pi","Conil de la Frontera","Baena","Vila-seca","Alfafar","P\xe1jara","Maracena","San Juan de Aznalfarache","Los Llanos de Aridane","B\xe9tera","Manlleu","Gu\xeda de Isora","Rojales","Mairena del Alcor","Ribarroja del Turia","La Pobla de Vallbona","Guadix","Ayamonte","Provenals del Poblenou","Algete","Roses","Aspe"],"LK":["Colombo","Dehiwala-Mount Lavinia","Moratuwa","Jaffna","Negombo","Pita Kotte","Sri Jayewardenepura Kotte","Kandy","Trincomalee","Kalmunai","Galle","Point Pedro","Batticaloa","Katunayaka","Valvedditturai","Matara","Battaramulla South","Dambulla","Maharagama","Kotikawatta","Anuradhapura","Vavuniya","Kolonnawa","Hendala","Ratnapura","Badulla","Puttalam","Devinuwara","Welisara","Kalutara","Bentota","Matale","Homagama","Beruwala","Panadura","Mulleriyawa","Kandana","Ja Ela","Wattala","Peliyagoda","Kelaniya","Kurunegala","Nuwara Eliya","Gampola","Chilaw","Eravur Town","Hanwella Ihala","Weligama","Vakarai","Kataragama","Ambalangoda"],"SD":["Khartoum","Omdurman","Nyala","Port Sudan","Kassala","El Obeid","Al Qadarif","Kosti","Wad Medani","El Daein","El Fasher","Singa","Ad-Damazin","Geneina","Rabak","Sinnar","Al Man\u0101qil","Gereida","An Nuh\u016bd","Atbara","Ed Damer","Kadugli","Ad Douiem","Umm Ruwaba","Shendi","Dilling","As S\u016bk\u012b","Ar Ruseris","Al Hasaheisa","Maiurno","Zalingei","Saw\u0101kin","Tandalt\u012b","Ar Rahad","Kin\u0101na","Al \u1e28aw\u0101tah","Berber","Tok\u0101r","Abu Jibeha"],"SR":["Paramaribo"],"SJ":[],"SZ":["Manzini","Mbabane"],"SE":["Stockholm","G\xf6teborg","Malm\xf6","Uppsala","Sollentuna","S\xf6dermalm","V\xe4ster\xe5s","\xd6rebro","Link\xf6ping","Helsingborg","J\xf6nk\xf6ping","Norrk\xf6ping","Huddinge","Lund","Ume\xe5","Haninge","G\xe4vle","Bor\xe5s","S\xf6dert\xe4lje","Kungsholmen","Eskilstuna","Solna","Halmstad","V\xe4xj\xf6","Karlstad","Bromma","M\xf6lndal","Vasastan","T\xe4by","Sundsvall","\xd6stersund","Trollh\xe4ttan","Lule\xe5","Liding\xf6","Borl\xe4nge","Tumba","Kristianstad","Kalmar","Falun","Sk\xf6vde","Upplands V\xe4sby","Karlskrona","\xd6stermalm","Skellefte\xe5","Uddevalla","Sundbyberg","Varberg","\xc5kersberga","\xd6rnsk\xf6ldsvik","Landskrona","Nyk\xf6ping","Vallentuna","Motala","Trelleborg","Majorna","Partille","Karlskoga","M\xe4rsta","Lerum","Alings\xe5s","Nacka","Sandviken","Kung\xe4lv","Falkenberg","Boo","Jakobsberg","Visby","Katrineholm","\xc4ngelholm","V\xe4nersborg","Bj\xf6rlanda","Pite\xe5","Lidk\xf6ping","Enk\xf6ping","Huskvarna","V\xe4stervik","Gustavsberg","Karlshamn"],"CH":["Z\xfcrich","Gen\xe8ve","Basel","Bern","Lausanne","Winterthur","Sankt Gallen","Lugano","Luzern","Z\xfcrich (Kreis 11)","Biel/Bienne","Z\xfcrich (Kreis 3)","Z\xfcrich (Kreis 9)","Thun","K\xf6niz","La Chaux-de-Fonds","Z\xfcrich (Kreis 10)","Rapperswil","Schaffhausen","Z\xfcrich (Kreis 7)","Fribourg","Chur","Neuch\xe2tel","Vernier","Z\xfcrich (Kreis 6)","Z\xfcrich (Kreis 2)","Z\xfcrich (Kreis 9) / Altstetten","Z\xfcrich (Kreis 12)","Sitten","Lancy","Z\xfcrich (Kreis 4) / Aussersihl","Emmen","Kriens","Yverdon-les-Bains","Zug","Uster","Montreux","Frauenfeld","Z\xfcrich (Kreis 3) / Sihlfeld","Dietikon","Baar","Z\xfcrich (Kreis 6) / Unterstrass"],"SY":["Aleppo","Damascus","Homs","\u1e28am\u0101h","Latakia","Deir ez-Zor","Ar Raqqah","Al B\u0101b","Idlib","Douma","Manbij","Dar\u2018\u0101","As Salam\u012byah","Tartouss","Ath Thawrah","Al \u1e28asakah","D\u0101rayy\u0101","I\u2018z\u0101z","Jablah","As Saf\u012brah","As-Suwayda","\u0100lb\u016b Kam\u0101l","At Tall","Al May\u0101d\u012bn","Ar Rastan","Tadmur","\u2018Ayn al \u2018Arab","An Nabk","Kh\u0101n Shaykh\u016bn","\u2018Afr\u012bn","Kafranbel","\u2018Irb\u012bn","Al Qu\u015fayr","Yabr\u016bd","Jisr ash Shugh\u016br","B\u0101niy\u0101s","Tallb\u012bsah","\u1e28arast\u0101","Al Qunay\u0163irah","T\u0101dif","Sar\u0101qib","Jayr\u016bd","Ma\u015fy\u0101f","Ma\u2018arratmi\u015fr\u012bn","Al Qaryatayn","Salq\u012bn","\u0162afas","Souran","Binnish","J\u0101sim","Tallkalakh","Az Zabad\u0101n\u012b","\u0162ayyibat al Im\u0101m","Haj\u012bn","Inkhil","Dayr \u1e28\u0101fir","Satita","Ash Shaykh Misk\u012bn","A\u015f \u015eanamayn","Tall Rif\u2018at","Nubl","Subaykh\u0101n","Jar\u0101bulus","Al \u1e28ar\u0101k","Al Kiswah","\u1e28alf\u0101y\u0101","Kafr Takh\u0101r\u012bm","Ad D\u0101n\u0101","Kafr Zayt\u0101","Kafr L\u0101h\u0101","Ad Darb\u0101s\u012byah","Q\u0101rah"],"TW":["Taipei","Kaohsiung","Taichung","Tainan","Banqiao","Hsinchu","Taoyuan City","Keelung","Hualien City","Yuanlin","Taitung City","Nantou","Douliu","Yilan","Puli","Daxi","Magong","Donggang","Jincheng","Hengchun","Zhongxing New Village"],"TJ":["Dushanbe","Khujand","K\u016dlob","Bokhtar","Istaravshan","Konibodom","Vahdat","Isfara","Tursunzoda","Panjakent","Khorugh","Ishqoshim","Hisor","Boshkengash","Danghara","Moskovskiy","Hulbuk","Farkhor","Buston"],"TZ":["Dar es Salaam","Mwanza","Zanzibar","Arusha","Mbeya","Morogoro","Tanga","Dodoma","Kigoma","Moshi","Tabora","Songea","Musoma","Iringa","Katumba","Shinyanga","Mtwara","Ushirombo","Kilosa","Sumbawanga","Bagamoyo","Mpanda","Bukoba","Singida","Uyovu","Makumbako","Buseresere","Bunda","Merelani","Katoro","Ifakara","Njombe","Lindi","Vwawa","Geita","Nguruka","Newala Kisimani","Geiro","Kidatu","Kasulu","Tunduma","Masasi","Kahama","Kidodi","Igunga","Misungwi","Mlimba","Mafinga","Masumbwe","Chalinze","Babati","Biharamulo","Somanda","Bariadi","Kirando","Tarime","Tumbi","Bugarama","Mvomero","Chanika","Kyela","Kibiti","Kisesa","Lukuledi","Mlandizi","Rujewa","Ilula","Kibondo","Tukuyu","Namanyere","Mkuranga","Bungu","Chato","Kasamwa","Sikonge","Malinyi","Mtinko","Nzega","Maramba","Wete","Magugu","Sokoni","Sepuka","Mbinga","Luchingu","Igurusi","Shelui","Chimala","Kakonko","Uvinza","Nyalikungu","Sirari","Lushoto","Matai","Old Shinyanga","Urambo","Mgandu","Kibaha","Songwa","Kiomboi","Kondoa","Vikindu","Mwadui","Nangomba","Kingori","Igugunu","Ngudu","Chala","Lalago","Kigonsera","Tinde","Rulenge","Maswa","Chake Chake","Mhango","Kiwira","Isaka","Basotu","Mazinde","Muriti","Matui","Hedaru","Nsunga"],"TH":["Bangkok","Samut Prakan","Mueang Nonthaburi","Udon Thani","Chon Buri","Nakhon Ratchasima","Chiang Mai","Hat Yai","Pak Kret","Si Racha","Phra Pradaeng","Lampang","Khon Kaen","Surat Thani","Ubon Ratchathani","Nakhon Si Thammarat","Khlong Luang","Nakhon Pathom","Rayong","Phitsanulok","Chanthaburi","Pattaya","Yala","Ratchaburi","Nakhon Sawan","Phuket","Ban Mai","Songkhla","Phra Nakhon Si Ayutthaya","Chiang Rai","Bang Kruai","Sakon Nakhon","Krathum Baen","Saraburi","Trang","Sattahip","Kanchanaburi","Nong Khai","Samut Sakhon","Ban Lam Luk Ka","Kamphaeng Phet","Chaiyaphum","Uttaradit","Lop Buri","Ban Pong","Phra Phutthabat","Chumphon","Klaeng","Kalasin","Suphan Buri","Tha Maka","Ban Talat Yai","Maha Sarakham","Phetchabun","Hua Hin","Ko Samui","Chachoengsao","Cha-am","Pak Chong","Narathiwat","Pran Buri","Surin","Phetchaburi","Chum Phae","Sadao","Si Sa Ket","Mae Sot","Pattani","Phatthalung","Lamphun","Warin Chamrap","Su-ngai Kolok","Tha Yang","Ban Phaeo","Bang Bua Thong","Nong Khae","Mukdahan","Ban Na","Bang Lamung","Roi Et","Wichian Buri","Wichit","Phrae","Mae Chan","Sam Phran","Sukhothai","Kantharalak","Photharam","Phichit","Det Udom","Ban Phai","Tha Bo","Loei","Samut Songkhram","Kathu","Amnat Charoen","Nakhon Phanom","Satun","Nong Bua Lamphu","Ban Ratsada","Prachuap Khiri Khan","San Kamphaeng","Prachin Buri","Krabi","Ban Khlong Bang Sao Thong","Yaring","Na Klang","Kaeng Khoi","Betong","Bang Phae","Ban Phan Don","Kaeng Khro","Amphoe Sikhiu","Sa Kaeo","Bang Bo District","Buri Ram","Thung Song","Ban Chang","Ban Bang Kadi Pathum Thani","Nong Phai","Mae Sai","Tha Muang","Ron Phibun","Ban Talat Bueng","Si Satchanalai","Tha Kham","Bang Pakong","Chai Badan","Pak Phanang","Kut Chap","Nan","Ranong","Pathum Thani","Tak","Dok Kham Tai","Ban Bueng","Kamalasai","Ban Talat Nua","Chok Chai","Damnoen Saduak","Tha Mai","Uthai Thani","Nang Rong","Phanat Nikhom","Ban Na San","Taphan Hin","Khanu Woralaksaburi","Ban Nong Wua So","Yasothon","Trat","Nakhon Nayok","Phayao","Kuchinarai","Bang Pa-in","Aranyaprathet","Kabin Buri","Sing Buri"],"TL":["Dili","Maliana","Suai"],"TG":["Lom\xe9","Sokod\xe9","Kara","Atakpam\xe9","Kpalim\xe9","Bassar","Ts\xe9vi\xe9","An\xe9ho","Sansann\xe9-Mango","Dapaong","Tchamba","Badou","Niamtougou","Bafilo","Nots\xe9","Sotouboua","Vogan"],"TK":[],"TO":["Nuku\u2018alofa"],"TT":["Chaguanas","Mon Repos","San Fernando","Port of Spain","Rio Claro","Arima","Marabella","Laventille"],"TN":["Tunis","Sfax","Sousse","Kairouan","Bizerte","Gab\xe8s","Ariana","Kasserine","Gafsa","La Goulette","Zarzis","Ben Arous","Monastir","La Mohammedia","Al Mars\xe1","Msaken","Skanes","Houmt El Souk","Tataouine","El Hamma","Medenine","Douane","B\xe9ja","Nabeul","Hammamet","Jendouba","El Kef","Hammam-Lif","Oued Lill","Menzel Bourguiba","Mahdia","Zouila","Rad\xe8s","K\xe9libia","Sidi Bouzid","Metlaoui","Djemmal","Ksar Hellal","Tozeur","Dar Chabanne","Hammam Sousse","Gremda","Korba","La Sebala du Mornag","Midoun","Mateur","Ar Rudayyif","Douz","Ksour Essaf","Siliana","Manouba","Nefta","Chebba","Menzel Jemil","Takelsa","Medjez el Bab","El Jem","Akouda"],"TR":["Istanbul","Ankara","\u0130zmir","Bursa","Adana","Gaziantep","Konya","\xc7ankaya","Antalya","Ba\u011fc\u0131lar","Diyarbak\u0131r","Kayseri","\xdcsk\xfcdar","Bah\xe7elievler","Umraniye","Mersin","Esenler","Eski\u015fehir","Karaba\u011flar","Muratpa\u015fa","\u015eanl\u0131urfa","Malatya","Sultangazi","Maltepe","Erzurum","Samsun","Batman","Kahramanmara\u015f","Van","Ata\u015fehir","\u015ei\u015fli","Denizli","Batikent","Elaz\u0131\u011f","Zeytinburnu","Adapazar\u0131","Sultanbeyli","Gebze","Merkezefendi","Sivas","Tarsus","Trabzon","Manisa","Sancaktepe","Bal\u0131kesir","Ad\u0131yaman","Esenyurt","K\u0131r\u0131kkale","Antakya","Osmaniye","\xc7orlu","Arnavutk\xf6y","\u0130zmit","Ba\u015fak\u015fehir","K\xfctahya","\xc7orum","Siverek","Isparta","B\xfcy\xfck\xe7ekmece","Ayd\u0131n","\u0130skenderun","Viran\u015fehir","U\u015fak","Aksaray","K\u0131z\u0131ltepe","Afyonkarahisar","\u0130negol","Tokat","Edirne","Derince","Beylikd\xfcz\xfc","Tekirda\u011f","Karaman","Nazilli","Ordu","Siirt","Erzincan","Alanya","Turhal","Band\u0131rma","Turgutlu","Mustafakemalpa\u015fa","Zonguldak","Manavgat","Giresun","Karab\xfck","Bolu","Ceyhan","K\u0131r\u015fehir","Polatl\u0131","Bafra","Rize","Ere\u011fli","A\u011fr\u0131","Erci\u015f","Ni\u011fde","L\xfcleburgaz","K\xf6rfez","Nusaybin","Salihli","Ere\u011fli","Kozan","Yozgat","\xc7anakkale","Patnos","Akhisar","\xc7erkezk\xf6y","Amasya","Mu\u015f","Nizip","Kilis","Fatsa","Cizre","Bing\xf6l","Elbistan","Hakk\xe2ri","\xdcnye","Kars","Midyat","I\u011fd\u0131r","Nev\u015fehir","Silifke","Silopi","Bismil","Belek","Tatvan","K\xe2hta","Y\xfcksekova","Khanjarah","Mardin","Yalova","Gemlik","Kastamonu","Kadirli","Do\u011fubayaz\u0131t","Ayval\u0131k","S\xf6ke","Arde\u015fen","\xd6demi\u015f","Burdur","Silvan","Soma","Ahlat","Ak\u015fehir","Ku\u015fadas\u0131","Sorgun","\xc7ubuk","K\u0131r\u0131khan","Fethiye","K\u0131rklareli","D\xfczce","Bergama","Anamur","Reyhanl\u0131","D\xf6rtyol","G\xf6lc\xfck","Bolvadin","Zile","Emin\xf6n\xfc","Boz\xfcy\xfck","Menemen","Silivri","Adilcevaz","\u015e\u0131rnak","Ergani","Erbaa","Tav\u015fanl\u0131","Orhangazi","Seydi\u015fehir","Merzifon","Kavakl\u0131","\xc7ar\u015famba","Torbal\u0131","Merter Keresteciler","g\xfcng\xf6ren merter","Niksar","Keskin","Karap\u0131nar","Mut","Mu\u011fla","Ala\u015fehir","Suluova","\u015eebin Karahisar","Tire","Kulu","Suru\xe7","Erdemli","Bitlis","\xc7umra","Urla","Ak\xe7aabat","Alia\u011fa","Ke\u015fan","Bey\u015fehir","Birecik","Karacabey","\u015eerefliko\xe7hisar","Bulancak","Milas","Sand\u0131kl\u0131","Besni","Edremit","G\xf6nen","Bilecik","Af\u015fin","Cimin","Karasu Mahallesi","Bodrum","Yalva\xe7","Beypazar\u0131","Burhaniye","Vakf\u0131kebir","Sungurlu","Bart\u0131n","Be\u015fikd\xfcz\xfc","Serik","Talas","Uzunk\xf6pr\xfc","Osmanc\u0131k","Kestel","Develi","H\u0131n\u0131s","Dinar","Yerk\xf6y","Hendek","Safranbolu","Ak\xe7akoca","Simav","Sinop","G\xf6ksun","\xc7ay","Marmaris","\u015eark\xeekaraa\u011fa\xe7","Bor","Gumushkhane","Kumru","Kurtalan","Ak\xe7akale","Ye\u015filli","Of","\u0130mamo\u011flu","Ceylanp\u0131nar","Bulan\u0131k","Bayburt","Ortak\xf6y","Kula","Mimarsinan","Biga","Karasu","Karam\xfcrsel","Kemalpa\u015fa","G\xf6rele","Beykonak","Arakl\u0131","Karako\xe7an","Kozluk","G\xfcrp\u0131nar","Bucak","Sel\xe7uk","Tunceli","Yakuplu","Yeni\u015fehir","Kaman","Gerede","Bozyaz\u0131","Terme","G\xf6lba\u015f\u0131","Boyabat","Malkara","Ilg\u0131n","K\u0131rka\u011fa\xe7","Alaca","Babaeski","Kulp","Erzin","\xc7an","Malazgirt","Didim","G\xfcroymak","Su\u015fehri","Elmada\u011f","Sapanca","Gelibolu","Ka\u011f\u0131zman","Vezirk\xf6pr\xfc","Akyaz\u0131","Yahyal\u0131","Susurluk","Devrek","\xc7ayeli","Pasinler","G\xfcrsu","Artvin","Mahmutlar","Tosya","Kazan","Kelkit","Pazarc\u0131k","Emet","\u015eark\u0131\u015fla","Ferizli","Sar\u0131kam\u0131\u015f","Oltu","Mudanya","Akda\u011fmadeni","Kovanc\u0131lar","\u0130dil","Erdek","Gen\xe7","\u0130znik","Gediz","Menderes","\xc7aycuma","Tepecik","Bozova","Havza","Demirci","\xc7ine","\xc7e\u015fme","Hac\u0131lar","Ardahan","\xc7ermik","Alapl\u0131","Darge\xe7it","Kara\xe7oban","Korkuteli","Darende","Geyve","Belen","Hadim","Emirda\u011f","S\xfcrmene"],"TM":["Ashgabat","T\xfcrkmenabat","Da\u015foguz","Mary","Balkanabat","Bayramaly","T\xfcrkmenba\u015fy","Tejen","Abadan","Yol\xf6ten","Gowurdak","Atamyrat","K\xf6ne\xfcrgench","Annau","Yylanly","Gumdag","Baharly","Boldumsaz","Bereket","Gazojak"],"TC":[],"TV":[],"UG":["Kampala","Gulu","Lira","Mbarara","Jinja","Bwizibwera","Mbale","Mukono","Kasese","Masaka","Entebbe","Njeru","Kitgum","Soroti","Arua","Iganga","Kabale","Busia","Fort Portal","Mityana","Tororo","Hoima","Lugazi","Masindi","Ibanda","Pallisa","Nyachera","Nebbi","Adjumani","Paidha","Luwero","Wobulenzi","Yumbe","Namasuba","Bugiri","Kayunga","Wakiso"],"UA":["Kyiv","Kharkiv","Dnipro","Donetsk","Odessa","Zaporizhia","Lviv","Kryvyi Rih","Mykolayiv","Mariupol","Luhansk","Sevastopol","Khmelnytskyi","Makiyivka","Vinnytsia","Simferopol","Kherson","Poltava","Chernihiv","Cherkasy","Sumy","Zhytomyr","Horlivka","Chernivtsi","Rivne","Kropyvnytskyi","Kamianske","Ternopil","Kremenchuk","Lutsk","Ivano-Frankivsk","Bila Tserkva","Kramators\u2019k","Melitopol","Kerch","Nikopol","Syevyerodonets\u2019k","Sloviansk","Berdyansk","Uzhgorod","Alchevs\u2019k","Pavlohrad","Lysychans\u2019k","Yevpatoriya","Yenakiyeve","Oleksandriya","Kamianets-Podilskyi","Konotop","Kostyantynivka","Krasnyy Luch","Brovary","Uman","Berdychiv","Shostka","Kadiyivka","Chervonohrad","Mukacheve","Bakhmut","Drohobych","Yalta","Nizhyn","Novomoskovs\u2019k","Izmail","Shakhtars\u2019k","Feodosiya","Pokrovsk","Chystyakove","Dovzhansk","Kalush","Smila","Kovel","Korosten\u2019","Pervomaysk","Khartsyz\u2019k","Rubizhne","Pryluky","Druzhkivka","Lozova","Kolomyia","Antratsyt","Stryi","Chornomors\u2019k","Novovolyns\u2019k","Novohrad-Volynskyi","Energodar","Snizhne","Boryspil\u2019","Izyum","Roven\u2019ky","Lubny","Bryanka","Horishni Plavni","Zhovti Vody","Fastiv","Nova Kakhovka","Marhanets\u2019","Bilhorod-Dnistrovskyi","Okhtyrka","Myrnohrad","Sorokyne","Romny","Svitlovods\u2019k","Shepetivka","Bucha","Varash","Toretsk","Dzhankoy","Pervomays\u2019k","Myrhorod","Irpin","Podilsk","Kirovs\u2019k","Vasylkiv","Yuzhnoukrayinsk","Volodymyr-Volynskyi","Dubno","Yasynuvata","Kakhovka","Boryslav","Pereiaslav-Khmelnytskyi","Chuhuyiv","Dobropillya","Zhmerynka","Avdiyivka","Hlukhiv","Sambir","Tokmak","Voznesensk","Boyarka","Dolyns\'ka","Starokostiantyniv","Vyshneve","Slavuta","Netishyn","Yuzhne","Mohyliv-Podilskyi","Kupjansk","Synel\u2019nykove","Obukhiv","Balakliya","Yany Kapu","Kostopil\u2019","Debal\u2019tseve","Pervomays\u2019kyy","Alushta","Pereval\u2019s\u2019k","Chortkiv","Novoyavorivs\'k","Oleshky","Saki","Znomenka","Lyman","Khmilnyk","Khust","Zolotonosha","Lebedyn","Vynohradiv","Bakhchysarai","Sarny","Malyn","Truskavets\u2019","Berehove","Kaniv","Molodohvardiys\u2019k","Kozyatyn","Popasna","Korostyshiv","Slavutych","Haisyn","Armyansk","Selydove","Krolevets\u2019","Dokuchayevs\u2019k","Volnovakha","Zdolbuniv","Merefa","Kreminna","Bakhmach","Brody","Yahotyn","Hadyach","Zolochiv","Lyubotyn","Polonne","Vyshhorod","Starobil\u2019s\u2019k","Heniches\u2019k","Sokal\u2019","Krasnohrad","Ladyzhyn","Polohy","Amvrosiyivka","Kremenets","Kurakhovo","Dolyna","Piatykhatky","Dniprorudne","Nadvirna","Stebnyk"],"AE":["Dubai","Sharjah","Abu Dhabi","Ajman City","Ras Al Khaimah City","Musaffah","Al Fujairah City","Khalifah A City","Reef Al Fujairah City","Bani Yas City","Zayed City","Umm Al Quwain City","Al Shamkhah City","Al Ain City","Khawr Fakk\u0101n","Dibba Al-Fujairah","Dibba Al-Hisn","Adh Dhayd"],"GB":["London","Birmingham","Liverpool","Nottingham","Sheffield","Bristol","Glasgow","Leicester","Edinburgh","Leeds","Cardiff","Manchester","Stoke-on-Trent","Coventry","Sunderland","Brent","Birkenhead","Islington","Reading","Kingston upon Hull","Preston","Newport","Swansea","Bradford","Southend-on-Sea","Belfast","Derby","Plymouth","Luton","Wolverhampton","City of Westminster","Southampton","Blackpool","Milton Keynes","Bexley","Northampton","Archway","Norwich","Dudley","Aberdeen","Portsmouth","Newcastle upon Tyne","Sutton","Swindon","Crawley","Ipswich","Wigan","Croydon","Walsall","Mansfield","Oxford","Warrington","Slough","Bournemouth","Peterborough","Cambridge","Doncaster","York","Poole","Gloucester","Burnley","Huddersfield","Telford","Dundee","Blackburn","Basildon","Middlesbrough","Bolton","Stockport","Brighton","West Bromwich","Grimsby","Hastings","High Wycombe","Watford","Saint Peters","Burton upon Trent","Colchester","Eastbourne","Exeter","Rotherham","Cheltenham","Lincoln","Chesterfield","Chelmsford","Mendip","Dagenham","Basingstoke","Maidstone","Sutton Coldfield","Bedford","Oldham","Enfield Town","Woking","St Helens","Worcester","Gillingham","Becontree","Worthing","Rochdale","Solihull","Royal Leamington Spa","Romford","Bath","Harlow","Nuneaton","High Peak","Darlington","Southport","Chester","Stevenage","Wembley","Grays","Harrogate","Hartlepool","Londonderry County Borough","Cannock","Hemel Hempstead","St Albans","Redditch","South Shields","Derry","Weston-super-Mare","Halifax","Beckenham","Tamworth","Scunthorpe","Stockton-on-Tees","Wakefield","Carlisle","Gateshead","Lisburn","Fylde","Paisley","Bracknell","Newcastle under Lyme","Battersea","Crewe","Chatham","Hove","Aylesbury","East Kilbride","Canary Wharf","Rugby","Salford","Purley","Guildford","Shrewsbury","Peckham","Barnsley","Lowestoft","Gosport","Southall","Stafford","Royal Tunbridge Wells","Ellesmere Port","Rossendale","Folkestone","Brixton","Hounslow","Wrexham","Torquay","Maidenhead","Kingswood","Taunton","Waterlooville","Macclesfield","Bognor Regis","Newtownabbey","Kettering","Buckley","Great Yarmouth","Runcorn","Ashford","Tonypandy","Scarborough","Widnes","Aldershot","Bury","Barking","Castleford","Hereford","Bangor","Stroud","Margate","Chelsea","Loughborough","Welwyn Garden City","Farnborough","Rhondda","Craigavon","Wallasey","Littlehampton","Bridgend","Bootle","Weymouth","Fareham","Morley","Cheshunt","Kidderminster","Corby","Dartford","Castlereagh","Dewsbury","Livingston","Stourbridge","Sale","Halesowen","Canterbury","South Croydon","Huyton","Barry","Gravesend","Eastleigh","Acton","Washington","Braintree","Hamilton","Brentwood","Esher","Crosby","Reigate","Dunstable","Morecambe","Cumbernauld","Redhill","Horsham","Staines","Batley","Wellingborough","Clacton-on-Sea","Dunfermline","Bletchley","Keighley","Hayes","Paignton","Llanelli","Kirkcaldy","Bromsgrove","Sittingbourne","South Benfleet","Banbury","West Bridgford","Mitcham","Morden","Cwmbran","Long Eaton","Durham","Northwich","Ayr","Perth","Lancaster","Tipton","Inverness","Kilmarnock","Banstead","Neath","King\'s Lynn","Winchester","Barrow in Furness","Yeovil","Middleton","Havant","Carshalton","Hinckley","Salisbury","Pontefract","Coatbridge","Sutton in Ashfield","Grantham","Merthyr Tydfil","Great Sankey","Greenock","Ashton-under-Lyne","Leigh","Leatherhead","Letchworth Garden City","Newark on Trent","Worksop","Bury St Edmunds","Kirkby","Wallsend","Redruth","Welling","Christchurch","Andover","Stretford","Dover","Hatfield","Altrincham","Coity","Newburn","Boston","Holloway","Lytham St Annes","Bridgwater","Urmston","Wokingham","Swadlincote","Trowbridge","Prescot","Bexhill-on-Sea","Bloxwich","Ewell","North Shields","Glenrothes","Skelmersdale","Fleet","Abingdon","Tonbridge","Ramsgate","Ilkeston","Coalville","Canvey Island","Surbiton","Whitley Bay","Greenford","Arnold","Houghton-Le-Spring","Bishops Stortford","Leyland","Rushden","Leighton Buzzard","Yeadon","Blyth","Eccles","Redcar","Airdrie","Peterlee","Farnham","Chester-le-Street","Great Malvern","Herne Bay","Wilmslow","Newton Abbot","Stirling","Mangotsfield","Billericay","Chipping Sodbury","Hitchin","Walkden","Tyldesley","Chippenham","Billingham","Pontypool","Accrington","Falkirk","Briton Ferry","Hoddesdon","Bridlington","Bentley","Exmouth","Yate","Felling","Colwyn Bay","Radcliffe","Totton","Chorley","Bicester","Haywards Heath","Irvine","Wigston Magna","Wednesfield","Strood","Windsor","Dumfries","Glossop","Cramlington","Pudsey","Ebbw Vale","Newbury","Wickford","Washwood Heath","Lichfield","Brighouse","Darwen","Wisbech","Aston","Borehamwood","Prestwich","Motherwell","Cleethorpes","Lower Earley","Shirley","Deeside","Falmouth","Hyde","Chichester","Barnstaple","Spalding","Rutherglen","Thornton-Cleveleys","Aberdare","Caerphilly","Ruislip","Saint Neots","Burgess Hill","Beverley","Deal","Wishaw","Pontypridd","Winsford","Harpenden","Rayleigh","Whitstable","Camberley","Barnet","Bedworth","Heswall","Hucknall","Egham","Sevenoaks","Kidsgrove","Newtownards","Didcot","Nelson","Burntwood","Carrickfergus","Felixstowe","Kendal","Consett","Witney","Ashton in Makerfield","Cheadle Hulme","Ballymena","Stanford-le-Hope","Bideford","Rochester","Shipley","Heywood","Brierley Hill","Stratford-upon-Avon","Sunbury-on-Thames","Newry","Ashington","Cambuslang","Kirkby in Ashfield","Willenhall","Burngreave","Denton","Cleckheaton","Ashford","Bearsden","Jarrow","Melton Mowbray","Workington","Epsom","Haverhill","Maghull","Clydebank","Acocks Green","East Grinstead","Flint","Westhoughton","Frome","Congleton","Camden Town","Ryde","Bishop Auckland","Northolt","Newton Aycliffe","Rhyl","Hertford","Staveley","Coleraine","Farnworth","Crowthorne","Hawarden","Bramhall","Coulsdon","Bartley Green","Hornchurch","St Austell","Rhosllanerchrugog","Fleetwood","Witham","Blackheath","Pitsea","Whitehaven","Newport","Skegness","Selby","Thetford","Newton Mearns","Vale of Leven","Wednesbury","Feltham","Thatcham","Hindley","Plymstock","Ormskirk","Warwick","Rugeley","Golborne","Gosforth","Huntingdon","Daventry","Droitwich","New Malden","New Milton","Ammanford","Portishead","Droylsden","Arbroath","Musselburgh","Evesham","Whitefield","Lofthouse","Penarth","Bishopbriggs","Belper","Formby","Burnham-on-Sea","Broadstairs","Oadby","Heanor","Chapeltown","Truro","Elgin","Litherland","Market Harborough","Royton","Walton-on-Thames","Wellington","Woodford Green","Stalybridge","Godalming","Potters Bar","Seaford","Alfreton","Camborne","Kenilworth","Seaham","Thornaby-on-Tees","Sudbury","Rawtenstall","Retford","Renfrew","Portadown","Heavitree","Berkhamsted","Stanley","Swanley","Newton-le-Willows","Rottingdean","Amersham","Hadley Wood","Ossett","Maldon","Buxton","Horley","Cowes","Dronfield","Ripley","Bathgate","Omagh","March","Stowmarket","Clevedon","Maesteg","Guiseley","Bordon","Caterham","Gainsborough","Goole","Sandhurst","Harwich","East Dereham","Bellshill","Chesham","Gerrards Cross","Crowborough","Stamford","Stourport-on-Severn","Gorseinon","Failsworth","Nailsea","Isleworth","Risca","Alloa","Newmarket","Bingley","Brownhills","Yateley","Hythe","Newquay","Sandown","Atherton","Colne","Orkney","Chalfont Saint Peter","Ampthill"],"US":["New York City","Los Angeles","Chicago","Brooklyn","Houston","Queens","Philadelphia","Phoenix","Manhattan","San Antonio","San Diego","The Bronx","Dallas","San Jose","Austin","Jacksonville","San Francisco","Columbus","Fort Worth","Indianapolis","Charlotte","Seattle","Denver","El Paso","Detroit","Boston","Memphis","New South Memphis","Portland","Oklahoma City","Las Vegas","Baltimore","Washington, D.C.","Milwaukee","South Boston","Albuquerque","Tucson","Nashville","Fresno","Sacramento","Kansas City","Long Beach","Mesa","Staten Island","Atlanta","Colorado Springs","Virginia Beach","Raleigh","Omaha","Miami","Oakland","Minneapolis","Tulsa","Wichita","New Orleans","Arlington","Cleveland","Bakersfield","Honolulu","Tampa","Aurora","Anaheim","West Raleigh","Santa Ana","Corpus Christi","Riverside","St. Louis","Lexington-Fayette","Stockton","Pittsburgh","Anchorage","Cincinnati","Ironville","Meads","Henderson","Greensboro","Saint Paul","Plano","Newark","Toledo","Lincoln","Orlando","Chula Vista","Jersey City","Chandler","Fort Wayne","Buffalo","Durham","St. Petersburg","Irvine","Laredo","Lubbock","Madison","Gilbert","Norfolk","Louisville","Reno","Winston-Salem","Glendale","Hialeah","Garland","Scottsdale","Irving","Chesapeake","North Las Vegas","Fremont","Baton Rouge","Lexington","Paradise","Richmond","Jamaica","San Bernardino","Spokane","Birmingham","Modesto","Des Moines","Rochester","Maryvale","Tacoma","Arlington","Fontana","Oxnard","Moreno Valley","Fayetteville","Huntington Beach","Yonkers","Glendale","Aurora","Montgomery","Columbus","Amarillo","Little Rock","Akron","Shreveport","Grand Rapids","Mobile","Salt Lake City","Huntsville","Tallahassee","Sunrise Manor","Grand Prairie","Overland Park","Knoxville","Worcester","Brownsville","Newport News","Santa Clarita","Providence","Fort Lauderdale","East Flatbush","Spring Valley","Chattanooga","Tempe","Oceanside","Garden Grove","Rancho Cucamonga","Cape Coral","Santa Rosa","East New York","Vancouver","Sioux Falls","Peoria","Ontario","Jackson","Hollywood","Elk Grove","Springfield","Pembroke Pines","Deer Valley","Port Saint Lucie","Salem","Corona","Eugene","McKinney","Fort Collins","Lancaster","Cary","Tempe Junction","Palmdale","Hayward","Salinas","Frisco","Springfield","East Chattanooga","Pasadena","Alexandria","Pomona","Washington Heights","Lakewood","Sunnyvale","Escondido","Kansas City","Astoria","Hollywood","Borough Park","Clarksville","Torrance","Valencia","Rockford","East Hampton","Joliet","Paterson","Bridgeport","Naperville","Boise","Savannah","Mesquite","Syracuse","Metairie Terrace","Pasadena","Orange","Fullerton","Killeen","Dayton","McAllen","Bellevue","Metairie","Miramar","Hampton","Van Nuys","West Valley City","Olathe","Warren","Columbia","Thornton","Carrollton","Midland","Charleston","Waco","Sterling Heights","Denton","Cedar Rapids","New Haven","Roseville","Gainesville","Visalia","Coral Springs","Thousand Oaks","Elizabeth","Stamford","Concord","Surprise","Alhambra","Lafayette","Topeka","Kent","Simi Valley","East Los Angeles","Santa Clara","Murfreesboro","Sunset Park","Koreatown","Hartford","Sheepshead Bay","Amherst","Victorville","Abilene","Vallejo","North Stamford","Berkeley","Norman","Allentown","Evansville","Columbia","Odessa","Fargo","Beaumont","Independence","Ann Arbor","El Monte","Athens","Springfield","Harlem","Round Rock","Wilmington","East Harlem","Arvada","Provo","Peoria","Lansing","Downey","Carlsbad","Elmhurst","Costa Mesa","Miami Gardens","Westminster","North Peoria","Clearwater","Fairfield","Bushwick","Gravesend","Rochester","Elgin","Temecula","West Jordan","Inglewood","Richardson","Lowell","East Independence","Gresham","Antioch","Cambridge","High Point","Billings","Manchester","Murrieta","Centennial","Richmond","Corona","Pueblo","Pearland","Waterbury","West Covina","Enterprise","North Charleston","Everett","College Station","Palm Bay","Pompano Beach","Boulder","Norwalk","West Palm Beach","Broken Arrow","Daly City","Sandy Springs","Burbank","Green Bay","Santa Maria","Universal City","Wichita Falls","Lakeland","Clovis","Lewisville","Tyler","El Cajon","San Mateo","Brandon","Rialto","Davenport","Edison","Hillsboro","Las Cruces","South Bend","Vista","Greeley","Davie","Chinatown","San Angelo","Renton","Roanoke","Kenosha","Clinton Township","Columbia","Erie","Portsmouth Heights","Richmond Hill","Alief","Spring Hill","Albany","Compton","Tuscaloosa","League City","Flint","Allen","Mission Viejo","Vacaville","Ventura","Highlands Ranch","Lawton","Beaverton","South Gate","Portsmouth","Sparks","Brockton","Dearborn","Federal Way","Lee\'s Summit","New Bedford","Spokane Valley","Fordham","Livonia","Roswell","Orem","Yuma","Lawrence","The Woodlands","West Albany","Yakima","Quincy","Flatbush","Hesperia","Carson","Boca Raton","Santa Monica","San Marcos","Boyle Heights","Plantation","Lynn","Miami Beach","Arden-Arcade","Westminster","Longmont","Santa Barbara","Redding","Macon","Meridian","San Leandro","Greenville","Chico","Edmond","Chinatown","Nampa","Sandy Hills","Newton","Toms River","Fall River","Carmel","Asheville","Norwalk","Waukegan","Deltona","Hawthorne","Fort Smith","Suffolk","Sugar Land","Livermore","Nashua","Reading","Concord","Indio","Rio Rancho","Enchanted Hills","Sandy","Whittier","Canarsie","Kirkland","Menifee","Newport Beach","Tracy","Citrus Heights","Bend","Canton","Lehigh Acres","Greenburgh","Bloomington","West Town","Germantown","Clifton","Duluth","Champaign","Near North Side","Chino","Alhambra","Ogden","Redwood City","Bellingham","O\'Fallon","Hoover","Danbury","East Norwalk","Edinburg","Sunrise","Trenton","Santa Fe","Bloomington","Cicero","Hemet","Ahwatukee Foothills","Johns Creek","Mission","Troy","Buena Park","Palm Coast","Fayetteville","Sioux City","Lake Forest","Merced","Longview","Bryan","Westland","Warwick","Lakewood","Farmington Hills","San Tan Valley","Mount Pleasant","Cranston","Largo","South Suffolk","Avondale","Tustin","Mountain View","Napa","Somerville","Lawrence","Melbourne","Parma","New Rochelle","Lynchburg","Medford","Deerfield Beach","Pleasanton","Belmont Cragin","Brooklyn Park","Goodyear","Kennewick","Alameda","Town \'n\' Country","Bellflower","San Pedro","Chino Hills","Bloomington","Alafaya","Springdale","North Hollywood","Racine","Hammond","Milpitas","Gary","Scranton","Baldwin Park","Auburn","Fishers","Saint Joseph","Pharr","Upland","Folsom","Baytown","San Ramon","Camden","Lake Charles","Kalamazoo","Arlington Heights","Plymouth","Waterford","Evanston","Manteca","Kendall","Wyoming","Loveland","Cheektowaga","Kings Bridge","Perris","Bethlehem","Albany","Schaumburg","Gastonia","Brownsville","Union City","Bolingbrook","Iowa City","Layton","Missouri City","Appleton","Shelby","Fort Myers","Boynton Beach","Jonesboro","South Lawndale","Logan Square","Rapid City","Warner Robins","Rochester Hills","Decatur","Southfield","Saint George","New Britain","Franklin","Turlock","Temple","West Ridge","Apple Valley","Lynwood","Waukesha","Wilmington","Canton","Gulfport","Pawtucket","Lauderhill","Rock Hill","Silver Spring","West Gulfport","Flower Mound","Bismarck","Centreville","Lafayette","Passaic","Riverview","Redlands","Missoula","Rancho Cordova","New Braunfels","Cherry Hill","Flagstaff","Muncie","Mira Mesa","Woodland Hills","Weston","Frederick","Pasco","Pittsburg","Ridgewood","Palatine","North Richland Hills","Union City","Kissimmee","Walnut Creek","Mount Vernon","Conroe","Dothan","Northridge","Waterloo","Maple Grove","Framingham","Redondo Beach","Bossier City","Yorba Linda","Woodbury","Eau Claire","Waldorf","Forest Hills","Davis","Glen Burnie","Camarillo","Victoria","Gaithersburg","Jacksonville","South San Francisco","Kenner","Jackson Heights","Rockville","Jackson","Lincoln Park","Yuba City","Portland","Palo Alto","Casas Adobes","Marysville","South Jordan","Oshkosh","North Little Rock","Homestead","Bayside","Bayonne","Eagan","Delray Beach","Johnson City","Dale City","Cedar Park","Parkchester","Atascocita","Saint Cloud","Ellicott City","Laguna Niguel","Saint Charles","Harlingen","San Clemente","West Lynchburg","Middletown","Framingham Center","Schenectady","Broomfield","Ames","Park Slope","Shawnee","Conway","East Orange","Portage Park","Skokie","Daytona Beach","West Bloomfield Township","Tamarac","Youngstown","Lodi","Greenville","Mansfield","Santa Cruz","Pico Rivera","Madera","Janesville","West Des Moines","Montebello","Georgetown","Alpharetta","Lorain","Bowling Green","Flatlands","Dundalk","Eden Prairie","North Bergen","Florence-Graham","Waltham","Cheyenne","West Hartford","Rogers","Carol City","Encinitas","East Village","Haverhill","Jupiter","Council Bluffs","Wellington","West Coon Rapids","North Miami","Hamilton","North Port","Tulare","Coon Rapids","Millcreek","La Habra","Blaine","Auburn","Lake Elsinore","Carmichael","Taylor","Burnsville","Monterey Park","Castro Valley","Irvington","Rocklin","Utica","Malden","National City","Financial District","Springfield","Bethesda","Terre Haute","Vineland","West Hollywood","San Marcos","Brentwood","Lakeville","West Allis","Redmond","Canoga Park","Cupertino","Taylorsville","Bristol","Moore","Gardena","Petaluma","Grand Junction","Casper","Rowlett","La Mesa","Pine Hills","Bensonhurst","Coney Island","Rancho Penasquitos","Valley Glen","Meriden","Pontiac","Port Orange","Hamden","Lakewood","Fountainebleau","Saint Clair Shores","Springfield","Great Falls","Chapel Hill","Huntington Park","Lancaster","Coconut Creek","Idaho Falls","San Rafael","Noblesville","Marietta","Fairfield","Owensboro","Eastvale","Royal Oak","Brentwood","Dubuque","Brookline","Novi","Des Plaines","Orland Park","Bartlett","Woodland","Lehi","White Plains","Arcadia","Reston","Ocala","Central City","South Vineland","Sanford","Bowie","Kokomo","Wayne","Santee","Dublin","Palm Harbor","Medford","Midwest City","Center City","Margate","South Whittier","Tinley Park","Pflugerville","New Brunswick","Grand Forks","Fountain Valley","North Hills","Diamond Bar","Taunton","Oak Lawn","Union","Ankeny","Chicopee","Irving Park","Berwyn","Manhattan","Kendale Lakes","Smyrna","Dearborn Heights","Porterville","Piscataway","Doral","Hendersonville","Morningside Heights","Rocky Mount","Corvallis","Valdosta","Hanford","Castle Rock","Greenwood","Chicago Lawn","Hempstead","Novato","Kettering","Bellevue","Shoreline","Decatur","Paramount","Port Arthur","Anderson","Tamiami","Towson","North Chicopee","Uptown","Sarasota","Cypress Hills","West Haven","Rosemead","Edgewater","Jackson","Highland","Mount Prospect","Colton","Encanto","Carson City","Pocatello","Bradenton","Rogers Park","Weymouth","Port Charlotte","Normal","Spring","Allapattah","Richland","Euless","Blue Springs","East Pensacola Heights","Hacienda Heights","Ozone Park","Briarwood","Cathedral City","Lakewood","Elyria","Wheaton","Commerce City","Hoboken","Watsonville","Lake Havasu City","Revere","West New York","Yucaipa","Gilroy","Pensacola","Poinciana","Kingsport","Levittown","Palm Beach Gardens","Milford","Delano","West Sacramento","Huntersville","Perth Amboy","Sherman Oaks","Southaven","Saint Peters","Harrisonburg","Peabody","Placentia","Lenexa","DeSoto","Burlington","South Hill","Elkhart","La Crosse","Oak Park","Florissant","Sammamish","Wakefield","Albany","Hoffman Estates","Albany Park","Glendora","Queens Village","Brookhaven","Levittown","Palm Desert","Joplin","Enid","Bonita Springs","Irondequoit","Caldwell","Minnetonka","Pinellas Park","Battle Creek","Casa Grande","South Shore","Mott Haven","The Villages","Grand Island","Grapevine","Stratford","Kentwood","City of Milford (balance)","Tigard","East Hartford","Apple Valley","Plainfield","Leesburg","Parsippany","Coral Gables","The Hammocks","Buckeye","Flagami","Catalina Foothills","Lakewood","North La Crosse","Burien","Logan","Olympia","South Peabody","Aliso Viejo","Galveston","Poway","Edina","Minnetonka Mills","Stonecrest","Cerritos","Redford","East Honolulu","Troy","Sunnyside","Charleston","Wharton","Whitman","Downers Grove","Azusa","Wilson","Monroe","Parker","La Mirada","Minot","Aloha","Saginaw","Bedford","Rancho Santa Margarita","Cypress","Murray","Cuyahoga Falls","Coeur d\'Alene","Bloomfield","Harrisburg","Rowland Heights","Covina","Stillwater","Niagara Falls","Collierville","Summerville","South Bel Air","Sheboygan","Middletown","Aspen Hill","Dunwoody","Huntington","Maricopa","Roswell","Cedar Hill","East Brunswick","East Lansing","Apopka","Maspeth","Wheaton","Mishawaka","Portage","West Orange","McLean","Newark","Ceres","Alexandria","Chesterfield","Barnstable","Salina","Lawrence","Bel Air South","Pearl City","Euclid","Roseville","Texas City","Wauwatosa","Florin","Twin Falls","Glenview","East Providence","Palm Springs","San Luis Obispo","Methuen","Mission District","Country Club","Madison","Jeffersonville","San Jacinto","Mentor","Mansfield","Hattiesburg","Draper","Middletown","Wylie","Columbus","Laguna","Smyrna","Charlottesville","Lincoln","Lacey","Littleton","Beavercreek","Kannapolis","Everett","Binghamton","Cypress","Elmhurst","Hell\'s Kitchen","Auburn Gresham","City of Sammamish","Antelope","Keller","Biloxi","Apex","West Lafayette","Titusville","Altoona","Newark","Saint Louis Park","Enfield","Dublin","Tuckahoe","Potomac","Cleveland Heights","Sayreville","Cutler Bay","Hackensack","Pine Bluff","West Seneca","Strongsville","Coachella","Penn Hills","Encino","Bentonville","Fort Pierce","Bridgewater","Danville","Oakland Park","Attleboro","Severn","Blacksburg","Haltom City","Brighton Park","Lompoc","Wesley Chapel","Urbandale","York","North Miami Beach","El Centro","Rego Park","Cleveland","Echo Park","North Bethesda","Beaumont","Lombard","Bountiful","North Lauderdale","Burleson","Ocoee","Oro Valley","Ashburn","Augusta","Bozeman","Sierra Vista","Freeport","Pittsfield","Hilo","West Babylon","DeKalb","San Bruno","Jefferson City","Altamonte Springs","Bell Gardens","Morgan Hill","Bothell","Fond du Lac","Sicklerville","Sayreville Junction","Farmington","Salem","Arlington","La Jolla","Altadena","Fairfield","Ashburn","Rancho Palos Verdes","North Highlands","Moline","Concord","East Concord","Rockwall","Plainfield","Burlington","Rohnert Park","Urbana","Southglenn","Midland","Prescott Valley","State College","Kearny","El Dorado Hills","Danville","Belleville","Linden","Moorhead","Woodside","Brea","Riverton","Prescott","Mount Laurel","The Colony","Manassas","Brentwood","Westfield","Hutchinson","Leominster","Catonsville","Hicksville","Bartlett","Buffalo Grove","Woonsocket","West Hills","Edmonds","Marana","Shelton","Cedar Falls","Chatsworth","Gage Park","Beverly","University","Coppell","Findlay","Campbell","Lake Ridge","Burke","Mankato","Annandale","Covington","New City","Morris Heights","Peachtree Corners","South Valley","Ormond Beach","Carrollwood Village","Huntsville","Venice","Sumter","Quincy","Wilkes-Barre","Lincoln Square","La Puente","Holyoke","Sherman","Goose Creek","Maplewood","Streamwood","Fitchburg","Hilton Head Island","La Quinta","North Atlanta","Crystal Lake","Hagerstown","San Gabriel","Hickory","Beverly Cove","Winter Garden","Carol Stream","Warren","Marlboro","Teaneck","Calexico","Florence","St. Johns","Shakopee","Billerica","Norwich","Amherst","Duncanville","New Berlin","Marlborough","Oakley","Lancaster","Avondale","Romeoville","Culver City","Montclair","Meridian","Puyallup","Woburn","Bremerton","Hallandale Beach","Clovis","Annapolis","Weslaco","Cape Girardeau","Bullhead City","North Fort Myers","Chelsea","Grove City","Essex","Atlantic City","Pacifica","Germantown","Northglenn","Far Rockaway","Kensington","Coram","Wausau","Hurst","Stanton","Lancaster","Friendswood","Gainesville","The Acreage","Montclair","Kailua","Rock Island","Whitney","Oviedo","Carpentersville","Lake Oswego","Muskogee","Hobbs","Muskegon","Westerville","Little Elm","Hanover Park","Channelview","Panama City","Florence","Waipahu","Wake Forest","Huber Heights","Martinez","East Meadow","Hanover","Wheeling","Apache Junction","Pleasant Grove","Brookfield","Delaware","Roy","Valley Stream","Schertz","Spanish Fork","Keizer","Leander","Woodlawn","Lima","Spartanburg","Park Ridge","Winter Haven","Aventura","Severna Park","Royal Palm Beach","Brighton","Phenix City","Milton","Dover","Sun City","Lake Worth","Kew Gardens Hills","Jamaica Plain","Monrovia","Hollister","Los Banos","Plant City","Greenfield","Marion","Braintree","Newnan","Texarkana","Addison","Reynoldsburg","South Jordan Heights","Odenton","Mableton","Hilton Head","Grants Pass","Indian Trail","Calumet City","Lincoln Park","Lynnwood","Whitestone","Beloit","Belleville","Longview","Columbia","Portage","Westfield","New Albany","Fort Lee","Brighton","Bartlesville","Ewing","San Juan","Woodhaven","Mission Bend","San Juan Capistrano","Pahrump","Saint Charles","Temple City","Marion","Mechanicsville","Lufkin","Pennsauken","Rome","Claremont","Franklin","West Hollywood","Richfield","Bell","Lewiston","Dunedin","Kendall West","Del Rio","Oakville","Commack","Menomonee Falls","Moorpark","Gadsden","Issaquah","Spring Hill","Trumbull","Olive Branch","Mooresville","West Torrington","Willowbrook","Leavenworth","Clinton","Cottage Grove","Wildwood","Richmond","Oregon City","Goldsboro","Manhattan Beach","Parkland","Martinez","East Florence","Kyle","Kearns","Linton Hall","South Miami Heights","Tupelo","Hot Springs","Wildomar","Wentzville","Roseville","Valrico","Coventry","Rosenberg","Bettendorf","East Point","Prattville","Ponte Vedra Beach","Boardman","Cooper City","Oxon Hill-Glassmanor","Egypt Lake-Leto","North Lawndale","Oak Creek","Peachtree City","Merrillville","Hot Springs National Park","Saint Cloud","La Porte","University City","Upper Arlington","Torrington","Beverly Hills","Inver Grove Heights","Cumberland","Pleasant Hill","Stow","Lauderdale Lakes","La Vergne","Winter Springs","Merritt Island","Greenpoint","West Little River","Brunswick","San Dimas","Monroe","North Center","Queen Creek","Kaneohe","Gahanna","Leawood","Owasso","Derry Village","Orange","Central Islip","Norristown","Lower West Side","Dyker Heights","Glendale","Cottonwood Heights","Gallatin","Houma","Rubidoux","Collinwood","Glendale Heights","Butte","Dana Point","Benton","Vestavia Hills","La Presa","Oakton","Chester","Mount Vernon","Studio City","Salisbury","Riviera Beach","Orangevale","Oswego","El Mirage","West Lake Sammamish","North Bel Air","Chelmsford","Bay City","Nacogdoches","Shrewsbury","McMinnville","Bridgeport","Dalton","Olney","North Providence","Newark","Oak Hill","Deer Park","Holland","Throgs Neck","Northbrook","Hilliard","Wenatchee","West Fargo","Fair Lawn","Kennesaw","New City","Long Beach","Richmond","Suitland-Silver Hill","Chillum","Foster City","Fairborn","Menlo Park","Chicago Loop","Lawndale","Hinesville","Waxahachie","St. Charles","Woodridge","Carrollwood","Elk Grove Village","Pekin","Socorro","Elmont","Adelanto","Tooele","Golden Glades","Marrero","Jackson","Foothill Farms","Englewood","Copperas Cove","Bath Beach","Huntington Station","Seaside","Kearney","Redan","Manitowoc","Williamsburg","Goshen","Saint Charles","Greenacres City","Salisbury","Douglasville","Silver Lake","Security-Widefield","University Place","Pullman","Juneau","West Lawn","Mount Lebanon","Alabaster","Farmers Branch","Oildale","La Verne","Mason","Eastpointe","Gillette","Valparaiso","Midvale","Spring Valley","Rome","Lewiston","North Ridgeville","Petersburg","Ken Caryl","Randallstown","Westlake","Bangor","Clermont","Sun Prairie","Georgetown","Greater Grand Crossing","Fairbanks","College Park","Springville","Natick","Massillon","Walla Walla","Florence","Andover","Hopkinsville","Laramie","Greenville","West Englewood","Bethel Park","Cookeville","Randolph","Oceanside","Danville","Montgomery Village","North Olmsted","Land O\' Lakes","Richmond West","Watertown","Glastonbury","Westmont","Garfield","Laguna Hills","West Bend","Willingboro","Mundelein","Centereach","Mount Juliet","Naugatuck","San Luis","Brighton Beach","Michigan City","Dania Beach","Lewiston Orchards","Lexington","Chatham","Navarre","Holly Springs","Shawnee","Brentwood Estates","Galesburg","Bowling Green","Des Moines","Wheat Ridge","Florence","Gurnee","Myrtle Beach","Parkersburg","Miami Lakes","Saratoga","East Lake","Banning","Goleta","Lakeside","Long Branch","Fair Oaks","Wayne","Lake Stevens","Dover","Radnor","Holladay","Herriman","South Kingstown","Estero","Ithaca","North Tonawanda","Brooklyn Center","Pikesville","New Iberia","Alamogordo","Parkville","Statesboro","Morgantown","Los Gatos","Matthews","Los Altos","Clearfield","Franklin","Owings Mills","Aiken","Plainfield","Helena","Ballwin","Manchester","Algonquin","Bel Air North","Newington","Westfield","Santa Paula","Fallbrook","Eldersburg","Sherwood","Springfield Gardens","Lawrenceville","Springfield","Kaysville","Granger","Burlingame","Post Falls","Liberty","San Pablo","Savage","Poughkeepsie","Texarkana","North Royalton","Chicago Heights","Lebanon","Walnut","Madison Heights","DeLand","Cedar City","Parkland","West Warwick","Jamestown","New Bern","Rochester","Cleburne","Winter Park","Carney","Southlake","San Carlos","Woodstock","East Hill-Meridian","Niles","Laplace","Westchester","Atascadero","Kent","Gloucester","Nicholasville","Oak Park","Highland Park","Elizabethtown","Austintown","East Palo Alto","South Gate","Pueblo West","Port Chester","Princeton","Fort Hood","LaGrange","Salem","Opelika","Rahway","North Chicago","Middle Village","Morristown","Cheshire","Branford","Raytown","Fruit Cove","Port Huron","Tewksbury","Franklin Square","Oak Ridge","Southgate","East Haven","Upper Alton","Johnston","Atwater","West Falls Church","Williamsport","Duluth","Fort Bragg","Russellville","Sanford","Harker Heights","Voorhees","Burbank","Marion","Granite City","Milford Mill","Lake in the Hills","Evans","O\'Fallon","Fort Hamilton","Carlsbad","Ferry Pass","Kingman","Orcutt","Henderson","Needham","Crown Point","Big Spring","Dracut","Schererville","Burton","Ridgecrest","Windsor","Eagle Pass","Agawam","Weatherford","West Elkridge","East Chicago","Redmond","Jacksonville","Socorro Mission Number 1 Colonia","Norwood","Northampton","Englewood","Lake Magdalene","Perry Hall","Maryville","Hobart","Fresh Meadows","Mehlville","Greer","Lansing","Harrison","Monterey","West Islip","Desert Hot Springs","American Fork","Central","Newburgh","Chamblee","Millville","North Andover","SeaTac","Elmira","Spring Valley","Stockbridge","Glen Ellyn","Monroeville","Benicia","Fredericksburg","Suisun","Aberdeen","Cranberry Township","Garfield Heights","South Chicago","Cornelius","Oakdale","Oak Forest","Garner","Drexel Hill","North Kingstown","Bella Vista","Melrose","Fitchburg","Gramercy Park","Wellesley","Enterprise","Winchester","Slidell","University Heights","West Springfield","Dodge City","Paragould","Maywood","Seguin","Shirley","Livingston","Round Lake Beach","Frankfort","Sterling","Middletown","Fountain","Saratoga Springs","Kirkwood","Drexel Heights","Deer Park","Lafayette","Fridley","West Scarborough","Queensbury","Rexburg","Wheeling","Shaker Heights","Mililani Town","Bergenfield","Marshalltown","Tucker","Nutley","Lake Jackson","Plum","Windsor","West Chicago","Allen Park","Wilmette","Imperial Beach","Glen Cove","Syracuse","Maryland Heights","Mason City","Crofton","Anderson","Eagle Mountain","College Point","Winchester","Lindenhurst","Spanaway","Belmont","Hunts Point","Holbrook","New London","Paso Robles","Tualatin","Fleming Island","Winona","Thomasville","Casselberry","Eureka","East Saint Louis","Garden City","Alton","Milton","University Park","Auburn","Williston","Paramus","Back Mountain","West Milford","Jeffersontown","Garden City","Horn Lake","Stoughton","Easton","Prairieville","Hyde Park","Dix Hills","Gladstone","Cutler Ridge","Independence","Watertown","Wooster","Bessemer","Merrimack","Lemon Grove","Kankakee","Wethersfield","Bristol","McHenry","Cibolo","Saugus","Stevens Point","West Linn","Superior","Tujunga","Greenville","Magna","Batavia","Cantonment","Danvers","Shoreview","Paradise","Fremont","Smithtown","Pearl","Mansfield City","Mercerville-Hamilton Square","North Creek","Carbondale","Westport","Medina","Bay Shore","Kahului","Vernon Hills","Zionsville","Norco","Wasco","Mount Pleasant","Fortuna Foothills","Barberton","Kingsville","Statesville","Plainview","Laurel","Carrollton","South Pasadena","Howard Beach","Englewood","Four Corners","South Laurel","Asheboro","Buenaventura Lakes","Clinton","Mount Pleasant","Twentynine Palms","Huntley","Pennsport","Xenia","Reisterstown","Green","Brawley","Yukon","Opportunity","Forest Hills","Lafayette","Ramsey","Suitland","Pleasure Ridge Park","Rosedale","New Lenox","Madison","Neenah","Alvin","Key West","Randolph","Temple Terrace","Owatonna","Homewood","Sahuarita","Maple Valley","Hazelwood","Troy","Lemoore","Mint Hill","Ridgewood","Long Island City","Cabot","Reedley","Edgewood","Meadow Woods","South Portland","West Whittier-Los Nietos","Lebanon","Zanesville","Colleyville","Canton","Ossining","Salem","Burlington","Saratoga Springs","Melrose Park","Starkville","Lochearn","Chanhassen","Hercules","Galt","Prior Lake","Castlewood","Grandview","Clinton","Yarmouth","Sandusky","Balch Springs","White Bear Lake","Chaska","Harvey","Middle River","Woodstock","Ardmore","Lockport","Woodburn","Wyandotte","Mauldin","Belvidere","Moscow","Milford","West Memphis","Athens","Mercer Island","Bridgeton","Maplewood","Soledad","Farmington","Brownsburg","Saginaw Township North","Edwardsville","Riverside","Athens","Sanger","Westmont","Wakefield","San Fernando","Rockledge","Hastings","Cave Spring","North Tustin","Daphne","Whitehall Township","Paducah","Cliffside Park","Elmwood Park","Vineyard","Lodi","Hazleton","Coronado","Hillside","Eagle River","South Salt Lake","Paris","Northport","University Park","Uniondale","Ponca City","Muskego","Collinsville","Reading","Short Pump","Belmont","Dedham","De Pere","Caledonia","Inkster","Vincentown","Bixby","Emporia","Fort Dodge","Walker","Palmetto Bay","Ottumwa","Junction City","Seal Beach","Tarpon Springs","Franklin","Herndon","Austin","Sachse","Sun City West","Watauga","Burlington","San Benito","Freeport","Staunton","Selma","South Windsor","North Potomac","Homer Glen","Coral Terrace","Norfolk","Ridgeland","Scaggsville","Cudahy","Washington","New Smyrna Beach","South Plainfield","Pasadena","Columbine","Greenbelt","South Riding","Citrus Park","Boca Del Mar","Newport","Norton Shores","Barstow Heights","Rockville Centre","Searcy","North Platte","Rolling Meadows","Carteret","Immokalee","Woodlawn","Medford","Riverbank","Zion","Trotwood","North Haven","Summerlin South","Mahwah","Loma Linda","Peekskill","Keystone","Baldwin","Fairfax","Maywood","Sebastian","Holt","Muscatine","Elk River","Rock Springs","Golden Gate","Corsicana","Hialeah Gardens","Waverly","Hunt Valley","Fuquay-Varina","Fountain Hills","Forest Grove","Unionport","Champlin","South Portland Gardens","Centerville","Bloomington","Bainbridge Island","Morrisville","Marshall","Watertown","Kernersville","Dickinson","Old Bridge","Fort Washington","Dinuba","Van Nest","Barstow","Fairland","Brookings","Blue Island","Faribault","Baileys Crossroads","Eagle","Norland","Scotch Plains","Glenville","El Cerrito","Brandon","Derby","Graham","Ilchester","Bayonet Point","Easton","Loves Park","Avon Lake","San Lorenzo","Morton Grove","Kingston","McDonough","Romulus","Rosemount","Mansfield","Laguna Beach","Springfield","Bellview","Terrytown","Crestview","Keene","Greenwood","Gallup","South Old Bridge","Duncan","Griffin","Dolton","Webster Groves","Belton","Columbus","Denison","East Elmhurst","Kerrville","Pooler","Mequon","Vicksburg","Wright","Morrisania","Palm City","Middleborough","Arnold","Isla Vista","Vero Beach South","Van Buren","East Peoria","Landover","Windham","Jacksonville Beach","Calabasas","Solon","Chantilly","Candler-McAfee","Roselle","Copiague","Munster","Ladera Ranch","Lisle","Picnic Point-North Lynnwood","East Naples","Crystal","Cloverleaf","Dixiana","Highland","Machesney Park","Morgan Park","Noe Valley","East Tremont","Pelham","Auburn","Tremont","Lincolnia","Kiryas Joel","Valinda","Marysville","Haines City","Columbus","Bristol","Millbrae","Newberg","The Crossings","Valley Station","Lennox","East Lake-Orient Park","Farmington","Wilsonville","Hutto","Bloomingdale","West Odessa","Inglewood-Finn Hill","Oak Harbor","\u2018Ewa Gentry","Oak Ridge","Rosemont","Auburn Hills","Pottstown","Leisure City","West Puente Valley","Maple Heights","Willoughby","Benbrook","Cranford","Garden City","Farmington","Wasco","Hastings","Avon","Visitacion Valley","North Augusta","Guilford","Cottage Lake","Corcoran","Melrose","East Patchogue","West Springfield","Hudson","Port Hueneme","Holiday","Near South Side","Radcliff","Hopewell","New Castle","Grand Boulevard","South Elgin","Prichard","New Brighton","Anniston","Palm Springs","Ruston","Wilmington","Midlothian","Oxford","Oakdale","Darien","Bloomingdale","Venice","Ludlow","South Bradenton","Hillside","North Plainfield","Acworth","Pascagoula","Sunny Isles Beach","Roseburg","Oxford","Merrick","Somerset","Moses Lake","Saginaw","Greater Northdale","Northdale","Summit","Watertown","Alliance","LaPorte","Kalispell","South Holland","Princeton","Kenmore","Del City","Derry","Hamtramck","Great Kills","Wekiwa Springs","Leesburg","Duarte","Converse","Villa Park","Decatur","Park Forest","Christiansburg","Jurupa Valley","Ashland","West and East Lealman","Farragut","La Porte","Prairie Village","Smithfield","Clarksville","Wadsworth","Camas","Fort Walton Beach","Geneva","Brent","South Euclid","Brushy Creek","Windsor","Westchase","Sugar Hill","Chillicothe","South Lake Tahoe","Anthem","West Carson","Massapequa","Canton","Roselle","Lincoln","Lumberton","Taylors","Yucca Valley","Westford","Edgewater","Allison Park","Bay Point","Portsmouth","Sedalia","Naples","Patterson","Greenfield","Waynesboro","Albertville","Stoneham","Perrysburg","Erie","Klamath Falls","Clinton","Green Valley","Evans","Mandan","Winchester","Okemos","Arnold","East Moline","West Pensacola","Kinston","Shelbyville","Marquette","Fairfield Heights","Biddeford","Golden Valley","Canyon Lake","Oxford","South Milwaukee","Marina","Mukilteo","Rancho San Diego","Charleston","Bedford","Carrboro","Crest Hill","Saint Andrews","Ashland","Hays","Ferguson","Conway","Laurelton","Lino Lakes","West Lake Stevens","New Hope","Palm River-Clair Mel","Trussville","Woodrow","Corinth","Mountlake Terrace","Chester","Nixa","East Ridge","Plainview","Grayslake","Agoura Hills","Acton","Sanford","Silver Firs","Hauppauge","K\u012bhei","South El Monte","Arvin","Johnston","Gardner","Lathrop","Ashland","Sidney","Birmingham","Sweetwater","Milwaukie","East Millcreek","Grand Island","Union City","Woodlawn","Piqua","Lomita","Cockeysville","Easley","New Springville","Pleasantville","Liberal","Palisades Park","Jenks","Simpsonville","Latham","Darien","Pleasant Prairie","Mountain Brook","Chambersburg","Adrian","West Melbourne","East Garfield Park","Rotterdam","Lakeside","Bethany","Lake Worth Corridor","Winter Gardens","Lockport","Lebanon","Wade Hampton","Murphy","Coralville","Ensley","Sapulpa","American Canyon","South San Jose Hills","Belton","Agoura","Bayville","Arbutus","Hammond","Libertyville","Pittsburg","Portsmouth","Granite Bay","Louisville","Northfield","Rocky River","Raymore","Middletown","Havelock","Harvey","Gardner","Golden","Douglas","Cartersville","Ashland","Oakleaf Plantation","Affton","Ramona","Cambria Heights","Elmwood Park","Elko","Hollis","Brooklyn Heights","Nogales","Parma Heights","La Ca\xf1ada Flintridge","Mustang","Rose Hill","East Northport","Glen Avon","Sulphur","Shelby","Montville Center","Ferndale","South Saint Paul","Lynn Haven","Lents","Lake Ronkonkoma","Lexington","Murrysville","Cumberland","Stephenville","Oregon","Eastmont","Monroe","Coconut Grove","West Mifflin","Mill Creek","Pace","Miamisburg","Palm Valley","Rolla","Tukwila"],"UM":[],"UY":["Montevideo","Salto","Paysand\xfa","Las Piedras","Rivera","Maldonado","Tacuaremb\xf3","Melo","Mercedes","Artigas","Minas","San Jos\xe9 de Mayo","Durazno","Florida","Barros Blancos","Treinta y Tres","Rocha","San Carlos","Pando","Fray Bentos","Colonia del Sacramento","Trinidad"],"UZ":["Tashkent","Namangan","Samarkand","Andijon","Bukhara","Nukus","Qarshi","Qo\u2018qon","Chirchiq","Fergana","Jizzax","Urganch","Tirmiz","Marg\u2018ilon","Navoiy","Angren","Olmaliq","Bekobod","Denov","Chust","Kogon Shahri","Yangiy\u016dl","Koson","Kattaqo\u2019rg\u2019on Shahri","Oltinko\u2018l","Shahrisabz","Asaka","Xiva","Guliston","Beruniy","Xo\u2018jayli Shahri","Chortoq","Novyy Turtkul\u2019","Urgut Shahri","Kosonsoy","Kitob","G\u2019ijduvon Shahri","Oqtosh","Parkent","Ohangaron","Uchq\u016drghon Shahri","Quva","Yangiyer","Quvasoy","Manghit","Uychi","Nurota","Muborak","Toshbuloq","Yangiqo\u2018rg\u2018on","Piskent","To\u2018rqao\u2018rg\u2018on","Qibray","Iskandar","Gurlan","Zomin Shaharchasi","Shovot","Sirdaryo","Bulung\u2019ur Shahri","Toshloq","Shofirkon Shahri","Salor","Bektemir","Haqqulobod","Qo\u2018rg\u2018ontepa","Oltiariq","G\u2018uzor","Boysun","Yangirabot","Sho\u2018rchi","Yangiobod","Gagarin Shahri","Zafar","Payshamba Shahri","G\u2018azalkent","Chinoz","Karakul\u2019","Pop","Beshariq","Paxtakor Shahri","T\u016dytepa","Kirguli","Yaypan"],"VU":["Port-Vila"],"VE":["Caracas","Maracaibo","Maracay","Valencia","Barquisimeto","Ciudad Guayana","Barcelona","Matur\xedn","Puerto La Cruz","Petare","Barinas","Turmero","Ciudad Bol\xedvar","M\xe9rida","Alto Barinas","Santa Teresa del Tuy","Cuman\xe1","San Crist\xf3bal","Baruta","Mucumpiz","Cabimas","Coro","Guatire","C\xfaa","Guarenas","Puerto Cabello","Ocumare del Tuy","Guacara","El Tigre","El Lim\xf3n","Acarigua","Los Teques","Punto Fijo","Charallave","Palo Negro","Cagua","Anaco","Calabozo","Guanare","Car\xfapano","Ejido","Catia La Mar","Mariara","Carora","Valera","Yaritagua","Valle de La Pascua","San Juan de los Morros","Porlamar","La Victoria","Tinaquillo","El Cafetal","San Fernando de Apure","San Carlos","San Felipe","Villa de Cura","Araure","G\xfcig\xfce","La Villa del Rosario","Chacao","San Antonio de Los Altos","Machiques","San Jos\xe9 de Guanipa","El Vig\xeda","Caucaguita","Punta Card\xf3n","Los Dos Caminos","El Hatillo","La Dolorita","San Carlos del Zulia","Upata","El Tocuyo","Maiquet\xeda","Caucag\xfcito","Puerto Ayacucho","Rubio","Tucupita","San Mateo","Chivacoa","Mor\xf3n","Lagunillas","San Joaqu\xedn","Qu\xedbor","Zaraza","Carrizal","Altagracia de Orituco","G\xfciria","Tacarigua","Col\xf3n","Trujillo","Caraballeda","La Asunci\xf3n","Los Rastrojos","Barinitas","Las Tejer\xedas","Cantaura","San Antonio del T\xe1chira","Santa Rita","Guasdualito","Nirgua","Santa Elena de Uair\xe9n","Juan Griego","Villa Bruzual","T\xe1riba","La Fr\xeda","La Guaira"],"VN":["Ho Chi Minh City","Hanoi","Da Nang","Haiphong","Bi\xean H\xf2a","Hu\u1ebf","Nha Trang","C\u1ea7n Th\u01a1","R\u1ea1ch Gi\xe1","Th\u1ecb X\xe3 Ph\xfa M\u1ef9","Qui Nhon","V\u0169ng T\xe0u","Sa Dec","\xd0\xe0 L\u1ea1t","Nam \u0110\u1ecbnh","Vinh","\u0110\u01b0c Tr\u1ecdng","Phan Thi\u1ebft","La Gi","Long Xuy\xean","C\u1ea7n Giu\u1ed9c","B\u1ea3o L\u1ed9c","H\u1ea1 Long","Bu\xf4n Ma Thu\u1ed9t","Cam Ranh","C\u1ea9m Ph\u1ea3 Mines","Th\xe1i Nguy\xean","M\u1ef9 Tho","S\xf3c Tr\u0103ng","Pleiku","Thanh H\xf3a","C\xe0 Mau","B\u1ea1c Li\xeau","Y\xean Vinh","H\xf2a B\xecnh","V\u0129nh Long","Y\xean B\xe1i","S\xf4ng C\u1ea7u","Vi\u1ec7t Tr\xec","Phan Rang-Th\xe1p Ch\xe0m","Th\u1ee7 D\u1ea7u M\u1ed9t","Cung Ki\u1ec7m","C\u1ee7 Chi","M\xf3ng C\xe1i","Cho Dok","Tuy H\xf2a","T\xe2n An","Th\xe0nh Ph\u1ed1 U\xf4ng B\xed","Cao L\xe3nh","B\u1ebfn Tre","Tam K\u1ef3","H\u1ea3i D\u01b0\u01a1ng","Tr\xe0 Vinh","L\u1ea1ng S\u01a1n","C\u1ea7n Gi\u1edd","B\u1ec9m S\u01a1n","B\u1eafc Giang","Th\xe1i B\xecnh","H\xe0 \u0110\xf4ng","Ph\xfa Kh\u01b0\u01a1ng","Kon Tum","B\u1eafc Ninh","Cao B\u1eb1ng","S\u01a1n T\xe2y","Dien Bien Phu","H\u01b0ng Y\xean","H\xe0 Ti\xean","Ninh B\xecnh","L\xe0o Cai","T\xe2y Ninh","Tuy\xean Quang","Qu\u1ea3ng Ng\xe3i","H\u1ed9i An","H\xe0 Giang","Ph\u1ee7 L\xfd","Kwang Binh","C\xe1t B\xe0","H\xe0 T\u0129nh","V\u1ecb Thanh","Don Luan","Th\u1ecb Tr\u1ea5n T\xe2n Th\xe0nh"],"VG":[],"VI":["Saint Croix"],"WF":[],"EH":["Laayoune","Dakhla"],"YE":["Sanaa","Al \u1e28udaydah","Ta\u2018izz","Aden","Mukalla","Ibb","Dham\u0101r","\u2018Amr\u0101n","Sayy\u0101n","Zab\u012bd","Sa\'dah","B\u0101jil","\u1e28ajjah","Dh\u012b as Suf\u0101l","Al Bayda","Ataq","Bayt al Faq\u012bh","Yar\u012bm","Sa\u1e29ar","La\u1e29ij"],"ZM":["Lusaka","Kitwe","Ndola","Kabwe","Chingola","Mufulira","Luanshya","Livingstone","Kasama","Chipata","Kalulushi","Mazabuka","Chililabombwe","Mongu","Kafue","Choma","Mansa","Kansanshi","Kapiri Mposhi","Monze","Mpika","Nchelenge","Kawambwa","Mbala","Samfya","Sesheke"],"ZW":["Harare","Bulawayo","Chitungwiza","Mutare","Gweru","Epworth","Kwekwe","Kadoma","Masvingo","Chinhoyi","Marondera","Norton","Chegutu","Bindura","Zvishavane","Victoria Falls","Hwange","Redcliff","Ruwa","Rusape","Chiredzi","Beitbridge","Kariba","Karoi"]}')}]]);
//# sourceMappingURL=2.084c67dc.chunk.js.map